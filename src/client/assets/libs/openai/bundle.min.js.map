{"version":3,"file":"bundle.min.js","mappings":"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","sources":["webpack://OpenAIAgentsBundle/webpack/universalModuleDefinition","webpack://OpenAIAgentsBundle/./node_modules/ms/index.js","webpack://OpenAIAgentsBundle/./node_modules/debug/src/common.js","webpack://OpenAIAgentsBundle/./node_modules/debug/src/browser.js","webpack://OpenAIAgentsBundle/webpack/bootstrap","webpack://OpenAIAgentsBundle/webpack/runtime/define property getters","webpack://OpenAIAgentsBundle/webpack/runtime/hasOwnProperty shorthand","webpack://OpenAIAgentsBundle/webpack/runtime/make namespace object","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/utils/safeExecute.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/errors.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/core/error.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/parser.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/Options.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/util.mjs","webpack://OpenAIAgentsBundle/./node_modules/zod/dist/esm/v3/helpers/util.js","webpack://OpenAIAgentsBundle/./node_modules/zod/dist/esm/v3/ZodError.js","webpack://OpenAIAgentsBundle/./node_modules/zod/dist/esm/v3/locales/en.js","webpack://OpenAIAgentsBundle/./node_modules/zod/dist/esm/v3/errors.js","webpack://OpenAIAgentsBundle/./node_modules/zod/dist/esm/v3/helpers/parseUtil.js","webpack://OpenAIAgentsBundle/./node_modules/zod/dist/esm/v3/helpers/errorUtil.js","webpack://OpenAIAgentsBundle/./node_modules/zod/dist/esm/v3/types.js","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/errorMessages.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/date.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/string.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/record.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/union.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/object.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parseDef.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/number.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/bigint.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/boolean.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/undefined.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/null.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/array.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/intersection.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/tuple.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/literal.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/enum.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/nativeEnum.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/nullable.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/optional.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/map.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/set.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/promise.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/never.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/effects.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/unknown.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/default.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/branded.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/catch.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/parsers/pipeline.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/zodToJsonSchema.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/zod-to-json-schema/Refs.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/ResponsesParser.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/helpers/zod.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/errors.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/utils/typeGuards.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/utils/tools.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/config.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/shims/shims-browser.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/logger.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/utils/smartString.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tool.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/zod/dist/esm/v3/helpers/util.js","webpack://OpenAIAgentsBundle/./node_modules/@openai/zod/dist/esm/v3/ZodError.js","webpack://OpenAIAgentsBundle/./node_modules/@openai/zod/dist/esm/v3/locales/en.js","webpack://OpenAIAgentsBundle/./node_modules/@openai/zod/dist/esm/v3/errors.js","webpack://OpenAIAgentsBundle/./node_modules/@openai/zod/dist/esm/v3/helpers/parseUtil.js","webpack://OpenAIAgentsBundle/./node_modules/@openai/zod/dist/esm/v3/helpers/errorUtil.js","webpack://OpenAIAgentsBundle/./node_modules/@openai/zod/dist/esm/v3/types.js","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/mcp.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/shims/mcp-server/browser.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tracing/context.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tracing/processor.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tracing/provider.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tracing/utils.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tracing/spans.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tracing/traces.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tracing/createSpans.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/tracing/index.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/lifecycle.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/guardrail.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/handoff.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/providers.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/types/protocol.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/usage.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/runContext.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/result.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/utils/serialize.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/items.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/utils/messages.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/events.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/runImplementation.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/runState.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/run.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/agent.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/helpers/message.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/tslib.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-core/dist/index.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/utils/uuid.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/utils/values.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/utils/sleep.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/version.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/detect-platform.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/shims.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/request-options.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/qs/formats.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/qs/utils.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/qs/stringify.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/utils/bytes.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/decoders/line.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/utils/log.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/core/streaming.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/core/api-promise.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/core/pagination.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/parse.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/uploads.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/to-file.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/core/resource.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/utils/path.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/chat/completions/messages.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/RunnableFunction.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/chatCompletionUtils.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/EventStream.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/ChatCompletionRunner.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/_vendor/partial-json-parser/parser.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/ChatCompletionStream.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/chat/completions/completions.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/chat/chat.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/headers.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/audio/speech.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/audio/transcriptions.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/audio/translations.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/audio/audio.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/batches.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/assistants.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/realtime/sessions.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/realtime/transcription-sessions.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/realtime/realtime.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/threads/messages.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/threads/runs/steps.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/utils/base64.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/internal/utils/env.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/AssistantStream.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/responses/ResponseStream.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/webhooks.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/client.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/threads/runs/runs.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/threads/threads.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/beta/beta.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/completions.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/containers/files/content.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/containers/files/files.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/containers/containers.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/embeddings.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/evals/runs/output-items.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/evals/runs/runs.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/evals/evals.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/files.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/fine-tuning/methods.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/fine-tuning/alpha/graders.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/fine-tuning/alpha/alpha.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/graders/grader-models.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/graders/graders.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/images.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/models.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/moderations.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/responses/input-items.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/responses/responses.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/uploads/parts.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/uploads/uploads.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/vector-stores/file-batches.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/lib/Util.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/vector-stores/files.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/resources/vector-stores/vector-stores.mjs","webpack://OpenAIAgentsBundle/./node_modules/openai/azure.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/defaults.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/logger.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/tools.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/utils/providerData.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/openaiResponsesModel.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/openaiChatCompletionsConverter.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/openaiChatCompletionsModel.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/openaiChatCompletionsStreaming.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/openaiProvider.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-openai/dist/openaiTracingExporter.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/metadata.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/utils.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/realtimeAgent.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/guardrail.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/logger.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/items.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/openaiRealtimeEvents.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/openaiRealtimeBase.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/openaiRealtimeWebRtc.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/shims/shims-browser.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/openaiRealtimeWebsocket.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/realtimeSession.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents-realtime/dist/index.mjs","webpack://OpenAIAgentsBundle/./node_modules/@openai/agents/dist/index.mjs","webpack://OpenAIAgentsBundle/./index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"OpenAIAgentsBundle\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OpenAIAgentsBundle\"] = factory();\n\telse\n\t\troot[\"OpenAIAgentsBundle\"] = factory();\n})(this, () => {\nreturn ","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export async function safeExecute(fn) {\n    try {\n        return [null, await fn()];\n    }\n    catch (error) {\n        return [error, null];\n    }\n}\n//# sourceMappingURL=safeExecute.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function isAbortError(err) {\n    return (typeof err === 'object' &&\n        err !== null &&\n        // Spec-compliant fetch implementations\n        (('name' in err && err.name === 'AbortError') ||\n            // Expo fetch\n            ('message' in err && String(err.message).includes('FetchRequestCanceledException'))));\n}\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            if (Object.prototype.toString.call(err) === '[object Error]') {\n                // @ts-ignore - not all envs have native support for cause yet\n                const error = new Error(err.message, err.cause ? { cause: err.cause } : {});\n                if (err.stack)\n                    error.stack = err.stack;\n                // @ts-ignore - not all envs have native support for cause yet\n                if (err.cause && !error.cause)\n                    error.cause = err.cause;\n                if (err.name)\n                    error.name = err.name;\n                return error;\n            }\n        }\n        catch { }\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\n//# sourceMappingURL=errors.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"../internal/errors.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.requestID = headers?.get('x-request-id');\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\nexport class InvalidWebhookSignatureError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n//# sourceMappingURL=error.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => ({\n                ...choice,\n                message: {\n                    ...choice.message,\n                    parsed: null,\n                    ...(choice.message.tool_calls ?\n                        {\n                            tool_calls: choice.message.tool_calls,\n                        }\n                        : undefined),\n                },\n            })),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","export const ignoreOverride = Symbol('Let zodToJsonSchema decide on which parser to use');\nconst defaultOptions = {\n    name: undefined,\n    $refStrategy: 'root',\n    effectStrategy: 'input',\n    pipeStrategy: 'all',\n    dateStrategy: 'format:date-time',\n    mapStrategy: 'entries',\n    nullableStrategy: 'from-target',\n    removeAdditionalStrategy: 'passthrough',\n    definitionPath: 'definitions',\n    target: 'jsonSchema7',\n    strictUnions: false,\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: 'escape',\n    applyRegexFlags: false,\n    emailStrategy: 'format:email',\n    base64Strategy: 'contentEncoding:base64',\n    nameStrategy: 'ref',\n};\nexport const getDefaultOptions = (options) => {\n    // We need to add `definitions` here as we may mutate it\n    return (typeof options === 'string' ?\n        {\n            ...defaultOptions,\n            basePath: ['#'],\n            definitions: {},\n            name: options,\n        }\n        : {\n            ...defaultOptions,\n            basePath: ['#'],\n            definitions: {},\n            ...options,\n        });\n};\n//# sourceMappingURL=Options.mjs.map","export const zodDef = (zodSchema) => {\n    return '_def' in zodSchema ? zodSchema._def : zodSchema;\n};\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n//# sourceMappingURL=util.mjs.map","export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n","import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n","import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n","import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n","export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n","import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n//# sourceMappingURL=errorMessages.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case 'string':\n        case 'format:date-time':\n            return {\n                type: 'string',\n                format: 'date-time',\n            };\n        case 'format:date':\n            return {\n                type: 'string',\n                format: 'date',\n            };\n        case 'integer':\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: 'integer',\n        format: 'unix-time',\n    };\n    if (refs.target === 'openApi3') {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'min':\n                setResponseValueAndErrors(res, 'minimum', check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case 'max':\n                setResponseValueAndErrors(res, 'maximum', check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n//# sourceMappingURL=date.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nlet emojiRegex;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp('^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$', 'u');\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: 'string',\n    };\n    function processPattern(value) {\n        return refs.patternStrategy === 'escape' ? escapeNonAlphaNumeric(value) : value;\n    }\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case 'min':\n                    setResponseValueAndErrors(res, 'minLength', typeof res.minLength === 'number' ? Math.max(res.minLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'max':\n                    setResponseValueAndErrors(res, 'maxLength', typeof res.maxLength === 'number' ? Math.min(res.maxLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'email':\n                    switch (refs.emailStrategy) {\n                        case 'format:email':\n                            addFormat(res, 'email', check.message, refs);\n                            break;\n                        case 'format:idn-email':\n                            addFormat(res, 'idn-email', check.message, refs);\n                            break;\n                        case 'pattern:zod':\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case 'url':\n                    addFormat(res, 'uri', check.message, refs);\n                    break;\n                case 'uuid':\n                    addFormat(res, 'uuid', check.message, refs);\n                    break;\n                case 'regex':\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case 'cuid':\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case 'cuid2':\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case 'startsWith':\n                    addPattern(res, RegExp(`^${processPattern(check.value)}`), check.message, refs);\n                    break;\n                case 'endsWith':\n                    addPattern(res, RegExp(`${processPattern(check.value)}$`), check.message, refs);\n                    break;\n                case 'datetime':\n                    addFormat(res, 'date-time', check.message, refs);\n                    break;\n                case 'date':\n                    addFormat(res, 'date', check.message, refs);\n                    break;\n                case 'time':\n                    addFormat(res, 'time', check.message, refs);\n                    break;\n                case 'duration':\n                    addFormat(res, 'duration', check.message, refs);\n                    break;\n                case 'length':\n                    setResponseValueAndErrors(res, 'minLength', typeof res.minLength === 'number' ? Math.max(res.minLength, check.value) : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, 'maxLength', typeof res.maxLength === 'number' ? Math.min(res.maxLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'includes': {\n                    addPattern(res, RegExp(processPattern(check.value)), check.message, refs);\n                    break;\n                }\n                case 'ip': {\n                    if (check.version !== 'v6') {\n                        addFormat(res, 'ipv4', check.message, refs);\n                    }\n                    if (check.version !== 'v4') {\n                        addFormat(res, 'ipv6', check.message, refs);\n                    }\n                    break;\n                }\n                case 'emoji':\n                    addPattern(res, zodPatterns.emoji, check.message, refs);\n                    break;\n                case 'ulid': {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case 'base64': {\n                    switch (refs.base64Strategy) {\n                        case 'format:binary': {\n                            addFormat(res, 'binary', check.message, refs);\n                            break;\n                        }\n                        case 'contentEncoding:base64': {\n                            setResponseValueAndErrors(res, 'contentEncoding', 'base64', check.message, refs);\n                            break;\n                        }\n                        case 'pattern:zod': {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case 'nanoid': {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case 'toLowerCase':\n                case 'toUpperCase':\n                case 'trim':\n                    break;\n                default:\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nconst escapeNonAlphaNumeric = (value) => Array.from(value)\n    .map((c) => (/[a-zA-Z0-9]/.test(c) ? c : `\\\\${c}`))\n    .join('');\nconst addFormat = (schema, value, message, refs) => {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message && refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, 'format', value, message, refs);\n    }\n};\nconst addPattern = (schema, regex, message, refs) => {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: processRegExp(regex, refs),\n            ...(message && refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, 'pattern', processRegExp(regex, refs), message, refs);\n    }\n};\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nconst processRegExp = (regexOrFunction, refs) => {\n    const regex = typeof regexOrFunction === 'function' ? regexOrFunction() : regexOrFunction;\n    if (!refs.applyRegexFlags || !regex.flags)\n        return regex.source;\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes('i'), // Case-insensitive\n        m: regex.flags.includes('m'), // `^` and `$` matches adjacent to newline characters\n        s: regex.flags.includes('s'), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = '';\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === '-' && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === '^') {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === '$') {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === '.') {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === '\\\\') {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === ']') {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === '[') {\n            inCharGroup = true;\n        }\n    }\n    try {\n        const regexTest = new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join('/')} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n};\n//# sourceMappingURL=string.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { parseDef } from \"../parseDef.mjs\";\nimport { parseStringDef } from \"./string.mjs\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === 'openApi3' && def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: 'object',\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, 'properties', key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: 'object',\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'additionalProperties'],\n        }) ?? {},\n    };\n    if (refs.target === 'openApi3') {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString && def.keyType._def.checks?.length) {\n        const keyType = Object.entries(parseStringDef(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === 'type' ? acc : { ...acc, [key]: value }), {});\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    return schema;\n}\n//# sourceMappingURL=record.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const primitiveMappings = {\n    ZodString: 'string',\n    ZodNumber: 'number',\n    ZodBigInt: 'integer',\n    ZodBoolean: 'boolean',\n    ZodNull: 'null',\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === 'openApi3')\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings && (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === 'ZodLiteral' && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case 'string':\n                case 'number':\n                case 'boolean':\n                    return [...acc, type];\n                case 'bigint':\n                    return [...acc, 'integer'];\n                case 'object':\n                    if (x._def.value === null)\n                        return [...acc, 'null'];\n                case 'symbol':\n                case 'undefined':\n                case 'function':\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === 'ZodEnum')) {\n        return {\n            type: 'string',\n            enum: options.reduce((acc, x) => [...acc, ...x._def.values.filter((x) => !acc.includes(x))], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map ? Array.from(def.options.values()) : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', `${i}`],\n    }))\n        .filter((x) => !!x && (!refs.strictUnions || (typeof x === 'object' && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n//# sourceMappingURL=union.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === 'strict') {\n        return def.catchall._def.typeName === 'ZodNever' ?\n            def.unknownKeys !== 'strict'\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalProperties'],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === 'ZodNever' ?\n            def.unknownKeys === 'passthrough'\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalProperties'],\n            }) ?? true;\n    }\n}\nexport function parseObjectDef(def, refs) {\n    const result = {\n        type: 'object',\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            const propertyPath = [...refs.currentPath, 'properties', propName];\n            const parsedDef = parseDef(propDef._def, {\n                ...refs,\n                currentPath: propertyPath,\n                propertyPath,\n            });\n            if (parsedDef === undefined)\n                return acc;\n            if (refs.openaiStrictMode &&\n                propDef.isOptional() &&\n                !propDef.isNullable() &&\n                typeof propDef._def?.defaultValue === 'undefined') {\n                throw new Error(`Zod field at \\`${propertyPath.join('/')}\\` uses \\`.optional()\\` without \\`.nullable()\\` which is not supported by the API. See: https://platform.openai.com/docs/guides/structured-outputs?api-mode=responses#all-fields-must-be-required`);\n            }\n            return {\n                properties: {\n                    ...acc.properties,\n                    [propName]: parsedDef,\n                },\n                required: propDef.isOptional() && !refs.openaiStrictMode ? acc.required : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n//# sourceMappingURL=object.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { parseAnyDef } from \"./parsers/any.mjs\";\nimport { parseArrayDef } from \"./parsers/array.mjs\";\nimport { parseBigintDef } from \"./parsers/bigint.mjs\";\nimport { parseBooleanDef } from \"./parsers/boolean.mjs\";\nimport { parseBrandedDef } from \"./parsers/branded.mjs\";\nimport { parseCatchDef } from \"./parsers/catch.mjs\";\nimport { parseDateDef } from \"./parsers/date.mjs\";\nimport { parseDefaultDef } from \"./parsers/default.mjs\";\nimport { parseEffectsDef } from \"./parsers/effects.mjs\";\nimport { parseEnumDef } from \"./parsers/enum.mjs\";\nimport { parseIntersectionDef } from \"./parsers/intersection.mjs\";\nimport { parseLiteralDef } from \"./parsers/literal.mjs\";\nimport { parseMapDef } from \"./parsers/map.mjs\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.mjs\";\nimport { parseNeverDef } from \"./parsers/never.mjs\";\nimport { parseNullDef } from \"./parsers/null.mjs\";\nimport { parseNullableDef } from \"./parsers/nullable.mjs\";\nimport { parseNumberDef } from \"./parsers/number.mjs\";\nimport { parseObjectDef } from \"./parsers/object.mjs\";\nimport { parseOptionalDef } from \"./parsers/optional.mjs\";\nimport { parsePipelineDef } from \"./parsers/pipeline.mjs\";\nimport { parsePromiseDef } from \"./parsers/promise.mjs\";\nimport { parseRecordDef } from \"./parsers/record.mjs\";\nimport { parseSetDef } from \"./parsers/set.mjs\";\nimport { parseStringDef } from \"./parsers/string.mjs\";\nimport { parseTupleDef } from \"./parsers/tuple.mjs\";\nimport { parseUndefinedDef } from \"./parsers/undefined.mjs\";\nimport { parseUnionDef } from \"./parsers/union.mjs\";\nimport { parseUnknownDef } from \"./parsers/unknown.mjs\";\nimport { parseReadonlyDef } from \"./parsers/readonly.mjs\";\nimport { ignoreOverride } from \"./Options.mjs\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            if ('$ref' in seenSchema) {\n                refs.seenRefs.add(seenSchema.$ref);\n            }\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchema = selectParser(def, def.typeName, refs, forceResolution);\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case 'root':\n            return { $ref: item.path.join('/') };\n        // this case is needed as OpenAI strict mode doesn't support top-level `$ref`s, i.e.\n        // the top-level schema *must* be `{\"type\": \"object\", \"properties\": {...}}` but if we ever\n        // need to define a `$ref`, relative `$ref`s aren't supported, so we need to extract\n        // the schema to `#/definitions/` and reference that.\n        //\n        // e.g. if we need to reference a schema at\n        // `[\"#\",\"definitions\",\"contactPerson\",\"properties\",\"person1\",\"properties\",\"name\"]`\n        // then we'll extract it out to `contactPerson_properties_person1_properties_name`\n        case 'extract-to-root':\n            const name = item.path.slice(refs.basePath.length + 1).join('_');\n            // we don't need to extract the root schema in this case, as it's already\n            // been added to the definitions\n            if (name !== refs.name && refs.nameStrategy === 'duplicate-ref') {\n                refs.definitions[name] = item.def;\n            }\n            return { $ref: [...refs.basePath, refs.definitionPath, name].join('/') };\n        case 'relative':\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case 'none':\n        case 'seen': {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join('/')}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === 'seen' ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join('/');\n};\nconst selectParser = (def, typeName, refs, forceResolution) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return parseDef(def.getter()._def, refs);\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs, forceResolution);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            return ((_) => undefined)(typeName);\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n//# sourceMappingURL=parseDef.mjs.map","import { addErrorMessage, setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: 'number',\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'int':\n                res.type = 'integer';\n                addErrorMessage(res, 'type', check.message, refs);\n                break;\n            case 'min':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMinimum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                }\n                break;\n            case 'max':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMaximum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                }\n                break;\n            case 'multipleOf':\n                setResponseValueAndErrors(res, 'multipleOf', check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceMappingURL=number.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: 'integer',\n        format: 'int64',\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'min':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMinimum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                }\n                break;\n            case 'max':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMaximum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                }\n                break;\n            case 'multipleOf':\n                setResponseValueAndErrors(res, 'multipleOf', check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceMappingURL=bigint.mjs.map","export function parseBooleanDef() {\n    return {\n        type: 'boolean',\n    };\n}\n//# sourceMappingURL=boolean.mjs.map","export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceMappingURL=undefined.mjs.map","export function parseNullDef(refs) {\n    return refs.target === 'openApi3' ?\n        {\n            enum: ['null'],\n            nullable: true,\n        }\n        : {\n            type: 'null',\n        };\n}\n//# sourceMappingURL=null.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nimport { parseDef } from \"../parseDef.mjs\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: 'array',\n    };\n    if (def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'items'],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, 'minItems', def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, 'maxItems', def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, 'minItems', def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, 'maxItems', def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n//# sourceMappingURL=array.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nconst isJsonSchema7AllOfType = (type) => {\n    if ('type' in type && type.type === 'string')\n        return false;\n    return 'allOf' in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'allOf', '0'],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'allOf', '1'],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === 'jsonSchema2019-09' ? { unevaluatedProperties: false } : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if ('additionalProperties' in schema && schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length ?\n        {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n//# sourceMappingURL=intersection.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: 'array',\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'items', `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalItems'],\n            }),\n        };\n    }\n    else {\n        return {\n            type: 'array',\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'items', `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n//# sourceMappingURL=tuple.mjs.map","export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== 'bigint' &&\n        parsedType !== 'number' &&\n        parsedType !== 'boolean' &&\n        parsedType !== 'string') {\n        return {\n            type: Array.isArray(def.value) ? 'array' : 'object',\n        };\n    }\n    if (refs.target === 'openApi3') {\n        return {\n            type: parsedType === 'bigint' ? 'integer' : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === 'bigint' ? 'integer' : parsedType,\n        const: def.value,\n    };\n}\n//# sourceMappingURL=literal.mjs.map","export function parseEnumDef(def) {\n    return {\n        type: 'string',\n        enum: [...def.values],\n    };\n}\n//# sourceMappingURL=enum.mjs.map","export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== 'number';\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1 ?\n            parsedTypes[0] === 'string' ?\n                'string'\n                : 'number'\n            : ['string', 'number'],\n        enum: actualValues,\n    };\n}\n//# sourceMappingURL=nativeEnum.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nimport { primitiveMappings } from \"./union.mjs\";\nexport function parseNullableDef(def, refs) {\n    if (['ZodString', 'ZodNumber', 'ZodBigInt', 'ZodBoolean', 'ZodNull'].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === 'openApi3' || refs.nullableStrategy === 'property') {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [primitiveMappings[def.innerType._def.typeName], 'null'],\n        };\n    }\n    if (refs.target === 'openApi3') {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && '$ref' in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', '0'],\n    });\n    return base && { anyOf: [base, { type: 'null' }] };\n}\n//# sourceMappingURL=nullable.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', '1'],\n    });\n    return innerSchema ?\n        {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n//# sourceMappingURL=optional.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nimport { parseRecordDef } from \"./record.mjs\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === 'record') {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items', 'items', '0'],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items', 'items', '1'],\n    }) || {};\n    return {\n        type: 'array',\n        maxItems: 125,\n        items: {\n            type: 'array',\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n//# sourceMappingURL=map.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nimport { parseDef } from \"../parseDef.mjs\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items'],\n    });\n    const schema = {\n        type: 'array',\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, 'minItems', def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, 'maxItems', def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n//# sourceMappingURL=set.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n//# sourceMappingURL=promise.mjs.map","export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceMappingURL=never.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseEffectsDef(_def, refs, forceResolution) {\n    return refs.effectStrategy === 'input' ? parseDef(_def.schema._def, refs, forceResolution) : {};\n}\n//# sourceMappingURL=effects.mjs.map","export function parseUnknownDef() {\n    return {};\n}\n//# sourceMappingURL=unknown.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n//# sourceMappingURL=default.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n//# sourceMappingURL=branded.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n//# sourceMappingURL=catch.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === 'input') {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === 'output') {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'allOf', '0'],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'allOf', a ? '1' : '0'],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n//# sourceMappingURL=pipeline.mjs.map","import { parseDef } from \"./parseDef.mjs\";\nimport { getRefs } from \"./Refs.mjs\";\nimport { zodDef, isEmptyObj } from \"./util.mjs\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const name = typeof options === 'string' ? options\n        : options?.nameStrategy === 'title' ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined ? refs : ({\n        ...refs,\n        currentPath: [...refs.basePath, refs.definitionPath, name],\n    }), false) ?? {};\n    const title = typeof options === 'object' && options.name !== undefined && options.nameStrategy === 'title' ?\n        options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const definitions = (() => {\n        if (isEmptyObj(refs.definitions)) {\n            return undefined;\n        }\n        const definitions = {};\n        const processedDefinitions = new Set();\n        // the call to `parseDef()` here might itself add more entries to `.definitions`\n        // so we need to continually evaluate definitions until we've resolved all of them\n        //\n        // we have a generous iteration limit here to avoid blowing up the stack if there\n        // are any bugs that would otherwise result in us iterating indefinitely\n        for (let i = 0; i < 500; i++) {\n            const newDefinitions = Object.entries(refs.definitions).filter(([key]) => !processedDefinitions.has(key));\n            if (newDefinitions.length === 0)\n                break;\n            for (const [key, schema] of newDefinitions) {\n                definitions[key] =\n                    parseDef(zodDef(schema), { ...refs, currentPath: [...refs.basePath, refs.definitionPath, key] }, true) ?? {};\n                processedDefinitions.add(key);\n            }\n        }\n        return definitions;\n    })();\n    const combined = name === undefined ?\n        definitions ?\n            {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : refs.nameStrategy === 'duplicate-ref' ?\n            {\n                ...main,\n                ...(definitions || refs.seenRefs.size ?\n                    {\n                        [refs.definitionPath]: {\n                            ...definitions,\n                            // only actually duplicate the schema definition if it was ever referenced\n                            // otherwise the duplication is completely pointless\n                            ...(refs.seenRefs.size ? { [name]: main } : undefined),\n                        },\n                    }\n                    : undefined),\n            }\n            : {\n                $ref: [...(refs.$refStrategy === 'relative' ? [] : refs.basePath), refs.definitionPath, name].join('/'),\n                [refs.definitionPath]: {\n                    ...definitions,\n                    [name]: main,\n                },\n            };\n    if (refs.target === 'jsonSchema7') {\n        combined.$schema = 'http://json-schema.org/draft-07/schema#';\n    }\n    else if (refs.target === 'jsonSchema2019-09') {\n        combined.$schema = 'https://json-schema.org/draft/2019-09/schema#';\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n//# sourceMappingURL=zodToJsonSchema.mjs.map","import { getDefaultOptions } from \"./Options.mjs\";\nimport { zodDef } from \"./util.mjs\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined ?\n        [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seenRefs: new Set(),\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            zodDef(def),\n            {\n                def: zodDef(def),\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n//# sourceMappingURL=Refs.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","import { makeParseableResponseFormat, makeParseableTextFormat, makeParseableTool, } from \"../lib/parser.mjs\";\nimport { zodToJsonSchema as _zodToJsonSchema } from \"../_vendor/zod-to-json-schema/index.mjs\";\nimport { makeParseableResponseTool } from \"../lib/ResponsesParser.mjs\";\nfunction zodToJsonSchema(schema, options) {\n    return _zodToJsonSchema(schema, {\n        openaiStrictMode: true,\n        name: options.name,\n        nameStrategy: 'duplicate-ref',\n        $refStrategy: 'extract-to-root',\n        nullableStrategy: 'property',\n    });\n}\n/**\n * Creates a chat completion `JSONSchema` response format object from\n * the given Zod schema.\n *\n * If this is passed to the `.parse()`, `.stream()` or `.runTools()`\n * chat completion methods then the response message will contain a\n * `.parsed` property that is the result of parsing the content with\n * the given Zod object.\n *\n * ```ts\n * const completion = await client.chat.completions.parse({\n *    model: 'gpt-4o-2024-08-06',\n *    messages: [\n *      { role: 'system', content: 'You are a helpful math tutor.' },\n *      { role: 'user', content: 'solve 8x + 31 = 2' },\n *    ],\n *    response_format: zodResponseFormat(\n *      z.object({\n *        steps: z.array(z.object({\n *          explanation: z.string(),\n *          answer: z.string(),\n *        })),\n *        final_answer: z.string(),\n *      }),\n *      'math_answer',\n *    ),\n *  });\n *  const message = completion.choices[0]?.message;\n *  if (message?.parsed) {\n *    console.log(message.parsed);\n *    console.log(message.parsed.final_answer);\n * }\n * ```\n *\n * This can be passed directly to the `.create()` method but will not\n * result in any automatic parsing, you'll have to parse the response yourself.\n */\nexport function zodResponseFormat(zodObject, name, props) {\n    return makeParseableResponseFormat({\n        type: 'json_schema',\n        json_schema: {\n            ...props,\n            name,\n            strict: true,\n            schema: zodToJsonSchema(zodObject, { name }),\n        },\n    }, (content) => zodObject.parse(JSON.parse(content)));\n}\nexport function zodTextFormat(zodObject, name, props) {\n    return makeParseableTextFormat({\n        type: 'json_schema',\n        ...props,\n        name,\n        strict: true,\n        schema: zodToJsonSchema(zodObject, { name }),\n    }, (content) => zodObject.parse(JSON.parse(content)));\n}\n/**\n * Creates a chat completion `function` tool that can be invoked\n * automatically by the chat completion `.runTools()` method or automatically\n * parsed by `.parse()` / `.stream()`.\n */\nexport function zodFunction(options) {\n    // @ts-expect-error TODO\n    return makeParseableTool({\n        type: 'function',\n        function: {\n            name: options.name,\n            parameters: zodToJsonSchema(options.parameters, { name: options.name }),\n            strict: true,\n            ...(options.description ? { description: options.description } : undefined),\n        },\n    }, {\n        callback: options.function,\n        parser: (args) => options.parameters.parse(JSON.parse(args)),\n    });\n}\nexport function zodResponsesFunction(options) {\n    return makeParseableResponseTool({\n        type: 'function',\n        name: options.name,\n        parameters: zodToJsonSchema(options.parameters, { name: options.name }),\n        strict: true,\n        ...(options.description ? { description: options.description } : undefined),\n    }, {\n        callback: options.function,\n        parser: (args) => options.parameters.parse(JSON.parse(args)),\n    });\n}\n//# sourceMappingURL=zod.mjs.map","/**\n * Base class for all errors thrown by the library.\n */\nexport class AgentsError extends Error {\n    state;\n    constructor(message, state) {\n        super(message);\n        this.state = state;\n    }\n}\n/**\n * System error thrown when the library encounters an error that is not caused by the user's\n * misconfiguration.\n */\nexport class SystemError extends AgentsError {\n}\n/**\n * Error thrown when the maximum number of turns is exceeded.\n */\nexport class MaxTurnsExceededError extends AgentsError {\n}\n/**\n * Error thrown when a model behavior is unexpected.\n */\nexport class ModelBehaviorError extends AgentsError {\n}\n/**\n * Error thrown when the error is caused by the library user's misconfiguration.\n */\nexport class UserError extends AgentsError {\n}\n/**\n * Error thrown when a guardrail execution fails.\n */\nexport class GuardrailExecutionError extends AgentsError {\n    error;\n    constructor(message, error, state) {\n        super(message, state);\n        this.error = error;\n    }\n}\n/**\n * Error thrown when a tool call fails.\n */\nexport class ToolCallError extends AgentsError {\n    error;\n    constructor(message, error, state) {\n        super(message, state);\n        this.error = error;\n    }\n}\n/**\n * Error thrown when an input guardrail tripwire is triggered.\n */\nexport class InputGuardrailTripwireTriggered extends AgentsError {\n    result;\n    constructor(message, result, state) {\n        super(message, state);\n        this.result = result;\n    }\n}\n/**\n * Error thrown when an output guardrail tripwire is triggered.\n */\nexport class OutputGuardrailTripwireTriggered extends AgentsError {\n    result;\n    constructor(message, result, state) {\n        super(message, state);\n        this.result = result;\n    }\n}\n//# sourceMappingURL=errors.mjs.map","/**\n * Verifies that an input is a ZodObject without needing to have Zod at runtime since it's an\n * optional dependency.\n * @param input\n * @returns\n */\nexport function isZodObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        '_def' in input &&\n        typeof input._def === 'object' &&\n        input._def !== null &&\n        'typeName' in input._def &&\n        input._def.typeName === 'ZodObject');\n}\n/**\n * Verifies that an input is an object with an `input` property.\n * @param input\n * @returns\n */\nexport function isAgentToolInput(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'input' in input &&\n        typeof input.input === 'string');\n}\n//# sourceMappingURL=typeGuards.mjs.map","import { zodResponsesFunction, zodTextFormat } from 'openai/helpers/zod';\nimport { UserError } from \"../errors.mjs\";\nimport { isZodObject } from \"./typeGuards.mjs\";\n/**\n * Convert a string to a function tool name by replacing spaces with underscores and\n * non-alphanumeric characters with underscores.\n * @param name - The name of the tool.\n * @returns The function tool name.\n */\nexport function toFunctionToolName(name) {\n    // Replace spaces with underscores\n    name = name.replace(/\\s/g, '_');\n    // Replace non-alphanumeric characters with underscores\n    name = name.replace(/[^a-zA-Z0-9]/g, '_');\n    // Ensure the name is not empty\n    if (name.length === 0) {\n        throw new Error('Tool name cannot be empty');\n    }\n    return name;\n}\n/**\n * Get the schema and parser from an input type. If the input type is a ZodObject, we will convert\n * it into a JSON Schema and use Zod as parser. If the input type is a JSON schema, we use the\n * JSON.parse function to get the parser.\n * @param inputType - The input type to get the schema and parser from.\n * @param name - The name of the tool.\n * @returns The schema and parser.\n */\nexport function getSchemaAndParserFromInputType(inputType, name) {\n    const parser = (input) => JSON.parse(input);\n    if (isZodObject(inputType)) {\n        const formattedFunction = zodResponsesFunction({\n            name,\n            parameters: inputType,\n            function: () => { }, // empty function here to satisfy the OpenAI helper\n            description: '',\n        });\n        return {\n            schema: formattedFunction.parameters,\n            parser: formattedFunction.$parseRaw,\n        };\n    }\n    else if (typeof inputType === 'object' && inputType !== null) {\n        return {\n            schema: inputType,\n            parser,\n        };\n    }\n    throw new UserError('Input type is not a ZodObject or a valid JSON schema');\n}\n/**\n * Converts the agent output type provided to a serializable version\n */\nexport function convertAgentOutputTypeToSerializable(outputType) {\n    if (outputType === 'text') {\n        return 'text';\n    }\n    if (isZodObject(outputType)) {\n        const output = zodTextFormat(outputType, 'output');\n        return {\n            type: output.type,\n            name: output.name,\n            strict: output.strict || false,\n            schema: output.schema,\n        };\n    }\n    return outputType;\n}\n//# sourceMappingURL=tools.mjs.map","import { loadEnv as _loadEnv, isBrowserEnvironment, } from '@openai/agents-core/_shims';\n/**\n * Loads environment variables from the process environment.\n *\n * @returns An object containing the environment variables.\n */\nexport function loadEnv() {\n    return _loadEnv();\n}\n/**\n * Checks if a flag is enabled in the environment.\n *\n * @param flagName - The name of the flag to check.\n * @returns `true` if the flag is enabled, `false` otherwise.\n */\nfunction isEnabled(flagName) {\n    const env = loadEnv();\n    return (typeof env !== 'undefined' &&\n        (env[flagName] === 'true' || env[flagName] === '1'));\n}\n/**\n * Global configuration for tracing.\n */\nexport const tracing = {\n    get disabled() {\n        if (isBrowserEnvironment()) {\n            return true;\n        }\n        else if (loadEnv().NODE_ENV === 'test') {\n            // disabling by default in tests\n            return true;\n        }\n        return isEnabled('OPENAI_AGENTS_DISABLE_TRACING');\n    },\n};\n/**\n * Global configuration for logging.\n */\nexport const logging = {\n    get dontLogModelData() {\n        return isEnabled('OPENAI_AGENTS_DONT_LOG_MODEL_DATA');\n    },\n    get dontLogToolData() {\n        return isEnabled('OPENAI_AGENTS_DONT_LOG_TOOL_DATA');\n    },\n};\n//# sourceMappingURL=config.mjs.map","/// <reference lib=\"dom\" />\n// Use function instead of exporting the value to prevent\n// circular dependency resolution issues caused by other exports in '@openai/agents-core/_shims'\nexport function loadEnv() {\n    return {};\n}\nexport class BrowserEventEmitter {\n    #target = new EventTarget();\n    on(type, listener) {\n        this.#target.addEventListener(type, ((event) => listener(...(event.detail ?? []))));\n        return this;\n    }\n    off(type, listener) {\n        this.#target.removeEventListener(type, ((event) => listener(...(event.detail ?? []))));\n        return this;\n    }\n    emit(type, ...args) {\n        const event = new CustomEvent(type, { detail: args });\n        return this.#target.dispatchEvent(event);\n    }\n    once(type, listener) {\n        const handler = (...args) => {\n            this.off(type, handler);\n            listener(...args);\n        };\n        this.on(type, handler);\n        return this;\n    }\n}\nexport { BrowserEventEmitter as RuntimeEventEmitter };\nexport const randomUUID = crypto.randomUUID.bind(crypto);\nexport const Readable = class Readable {\n    constructor() { }\n    pipeTo(_destination, _options) { }\n    pipeThrough(_transform, _options) { }\n};\nexport const ReadableStream = globalThis.ReadableStream;\nexport const ReadableStreamController = globalThis.ReadableStreamDefaultController;\nexport const TransformStream = globalThis.TransformStream;\nexport class AsyncLocalStorage {\n    context = null;\n    constructor() { }\n    run(context, fn) {\n        this.context = context;\n        return fn();\n    }\n    getStore() {\n        return this.context;\n    }\n    enterWith(context) {\n        this.context = context;\n    }\n}\nexport function isBrowserEnvironment() {\n    return true;\n}\nexport function isTracingLoopRunningByDefault() {\n    return false;\n}\nexport { MCPServerStdio, MCPServerStreamableHttp } from \"./mcp-server/browser.mjs\";\nclass BrowserTimer {\n    constructor() { }\n    setTimeout(callback, ms) {\n        const timeout = setTimeout(callback, ms);\n        timeout.ref =\n            typeof timeout.ref === 'function' ? timeout.ref : () => timeout;\n        timeout.unref =\n            typeof timeout.unref === 'function' ? timeout.unref : () => timeout;\n        timeout.hasRef =\n            typeof timeout.hasRef === 'function' ? timeout.hasRef : () => true;\n        timeout.refresh =\n            typeof timeout.refresh === 'function' ? timeout.refresh : () => timeout;\n        return timeout;\n    }\n    clearTimeout(timeoutId) {\n        window.clearTimeout(timeoutId);\n    }\n}\nconst timer = new BrowserTimer();\nexport { timer };\n//# sourceMappingURL=shims-browser.mjs.map","import debug from 'debug';\nimport { logging } from \"./config.mjs\";\n/**\n * By default we don't log LLM inputs/outputs, to prevent exposing sensitive data. Set this flag\n * to enable logging them.\n */\nconst dontLogModelData = logging.dontLogModelData;\n/**\n * By default we don't log tool inputs/outputs, to prevent exposing sensitive data. Set this flag\n * to enable logging them.\n */\nconst dontLogToolData = logging.dontLogToolData;\n/**\n * Get a logger for a given package.\n *\n * @param namespace - the namespace to use for the logger.\n * @returns A logger object with `debug` and `error` methods.\n */\nexport function getLogger(namespace = 'openai-agents') {\n    return {\n        namespace,\n        debug: debug(namespace),\n        error: console.error,\n        warn: console.warn,\n        dontLogModelData,\n        dontLogToolData,\n    };\n}\nexport const logger = getLogger('openai-agents:core');\nexport default logger;\n//# sourceMappingURL=logger.mjs.map","export function toSmartString(value) {\n    if (value === null || value === undefined) {\n        return String(value);\n    }\n    else if (typeof value === 'string') {\n        return value;\n    }\n    else if (typeof value === 'object') {\n        try {\n            return JSON.stringify(value);\n        }\n        catch (_e) {\n            return '[object with circular references]';\n        }\n    }\n    return String(value);\n}\n//# sourceMappingURL=smartString.mjs.map","import { safeExecute } from \"./utils/safeExecute.mjs\";\nimport { toFunctionToolName } from \"./utils/tools.mjs\";\nimport { getSchemaAndParserFromInputType } from \"./utils/tools.mjs\";\nimport { isZodObject } from \"./utils/typeGuards.mjs\";\nimport { ModelBehaviorError, UserError } from \"./errors.mjs\";\nimport logger from \"./logger.mjs\";\nimport { getCurrentSpan } from \"./tracing/index.mjs\";\nimport { toSmartString } from \"./utils/smartString.mjs\";\n/**\n * Exposes a computer to the agent as a tool to be called\n *\n * @param options Additional configuration for the computer tool like specifying the location of your agent\n * @returns a computer tool definition\n */\nexport function computerTool(options) {\n    return {\n        type: 'computer',\n        name: options.name ?? 'computer_use_preview',\n        computer: options.computer,\n    };\n}\n/**\n * Creates a hosted MCP tool definition.\n *\n * @param serverLabel - The label identifying the MCP server.\n * @param serverUrl - The URL of the MCP server.\n * @param requireApproval - Whether tool calls require approval.\n */\nexport function hostedMcpTool(options) {\n    const providerData = typeof options.requireApproval === 'undefined' ||\n        options.requireApproval === 'never'\n        ? {\n            type: 'mcp',\n            server_label: options.serverLabel,\n            server_url: options.serverUrl,\n            require_approval: 'never',\n            allowed_tools: toMcpAllowedToolsFilter(options.allowedTools),\n            headers: options.headers,\n        }\n        : {\n            type: 'mcp',\n            server_label: options.serverLabel,\n            server_url: options.serverUrl,\n            allowed_tools: toMcpAllowedToolsFilter(options.allowedTools),\n            headers: options.headers,\n            require_approval: typeof options.requireApproval === 'string'\n                ? 'always'\n                : buildRequireApproval(options.requireApproval),\n            on_approval: options.onApproval,\n        };\n    return {\n        type: 'hosted_tool',\n        name: 'hosted_mcp',\n        providerData,\n    };\n}\n/**\n * The default function to invoke when an error occurs while running the tool.\n *\n * Always returns `An error occurred while running the tool. Please try again. Error: <error details>`\n *\n * @param context An instance of the current RunContext\n * @param error The error that occurred\n */\nfunction defaultToolErrorFunction(context, error) {\n    const details = error instanceof Error ? error.toString() : String(error);\n    return `An error occurred while running the tool. Please try again. Error: ${details}`;\n}\n/**\n * Exposes a function to the agent as a tool to be called\n *\n * @param options The options for the tool\n * @returns A new tool\n */\nexport function tool(options) {\n    const name = options.name\n        ? toFunctionToolName(options.name)\n        : toFunctionToolName(options.execute.name);\n    const toolErrorFunction = typeof options.errorFunction === 'undefined'\n        ? defaultToolErrorFunction\n        : options.errorFunction;\n    if (!name) {\n        throw new Error('Tool name cannot be empty. Either name your function or provide a name in the options.');\n    }\n    const strictMode = options.strict ?? true;\n    if (!strictMode && isZodObject(options.parameters)) {\n        throw new UserError('Strict mode is required for Zod parameters');\n    }\n    const { parser, schema: parameters } = getSchemaAndParserFromInputType(options.parameters, name);\n    async function _invoke(runContext, input) {\n        const [error, parsed] = await safeExecute(() => parser(input));\n        if (error !== null) {\n            if (logger.dontLogToolData) {\n                logger.debug(`Invalid JSON input for tool ${name}`);\n            }\n            else {\n                logger.debug(`Invalid JSON input for tool ${name}: ${input}`);\n            }\n            throw new ModelBehaviorError('Invalid JSON input for tool');\n        }\n        if (logger.dontLogToolData) {\n            logger.debug(`Invoking tool ${name}`);\n        }\n        else {\n            logger.debug(`Invoking tool ${name} with input ${input}`);\n        }\n        const result = await options.execute(parsed, runContext);\n        const stringResult = toSmartString(result);\n        if (logger.dontLogToolData) {\n            logger.debug(`Tool ${name} completed`);\n        }\n        else {\n            logger.debug(`Tool ${name} returned: ${stringResult}`);\n        }\n        return result;\n    }\n    async function invoke(runContext, input) {\n        return _invoke(runContext, input).catch((error) => {\n            if (toolErrorFunction) {\n                const currentSpan = getCurrentSpan();\n                currentSpan?.setError({\n                    message: 'Error running tool (non-fatal)',\n                    data: {\n                        tool_name: name,\n                        error: error.toString(),\n                    },\n                });\n                return toolErrorFunction(runContext, error);\n            }\n            throw error;\n        });\n    }\n    const needsApproval = typeof options.needsApproval === 'function'\n        ? options.needsApproval\n        : async () => typeof options.needsApproval === 'boolean'\n            ? options.needsApproval\n            : false;\n    return {\n        type: 'function',\n        name,\n        description: options.description,\n        parameters,\n        strict: strictMode,\n        invoke,\n        needsApproval,\n    };\n}\nfunction buildRequireApproval(requireApproval) {\n    const result = {};\n    if (requireApproval.always) {\n        result.always = { tool_names: requireApproval.always.toolNames };\n    }\n    if (requireApproval.never) {\n        result.never = { tool_names: requireApproval.never.toolNames };\n    }\n    return result;\n}\nfunction toMcpAllowedToolsFilter(allowedTools) {\n    if (typeof allowedTools === 'undefined') {\n        return undefined;\n    }\n    if (Array.isArray(allowedTools)) {\n        return { tool_names: allowedTools };\n    }\n    return { tool_names: allowedTools?.toolNames ?? [] };\n}\n//# sourceMappingURL=tool.mjs.map","export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n","import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n","import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n","import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n","export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n","import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n","import { tool } from \"./tool.mjs\";\nimport { UserError } from \"./errors.mjs\";\nimport { MCPServerStdio as UnderlyingMCPServerStdio, MCPServerStreamableHttp as UnderlyingMCPServerStreamableHttp, } from '@openai/agents-core/_shims';\nimport { getCurrentSpan, withMCPListToolsSpan } from \"./tracing/index.mjs\";\nimport { logger as globalLogger, getLogger } from \"./logger.mjs\";\nimport debug from 'debug';\nimport { z } from '@openai/zod/v3';\nexport const DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME = 'openai-agents:stdio-mcp-client';\nexport const DEFAULT_STREAMABLE_HTTP_MCP_CLIENT_LOGGER_NAME = 'openai-agents:streamable-http-mcp-client';\nexport class BaseMCPServerStdio {\n    cacheToolsList;\n    _cachedTools = undefined;\n    logger;\n    constructor(options) {\n        this.logger =\n            options.logger ?? getLogger(DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME);\n        this.cacheToolsList = options.cacheToolsList ?? false;\n    }\n    /**\n     * Logs a debug message when debug logging is enabled.\n     * @param buildMessage A function that returns the message to log.\n     */\n    debugLog(buildMessage) {\n        if (debug.enabled(this.logger.namespace)) {\n            // only when this is true, the function to build the string is called\n            this.logger.debug(buildMessage());\n        }\n    }\n}\nexport class BaseMCPServerStreamableHttp {\n    cacheToolsList;\n    _cachedTools = undefined;\n    logger;\n    constructor(options) {\n        this.logger =\n            options.logger ??\n                getLogger(DEFAULT_STREAMABLE_HTTP_MCP_CLIENT_LOGGER_NAME);\n        this.cacheToolsList = options.cacheToolsList ?? false;\n    }\n    /**\n     * Logs a debug message when debug logging is enabled.\n     * @param buildMessage A function that returns the message to log.\n     */\n    debugLog(buildMessage) {\n        if (debug.enabled(this.logger.namespace)) {\n            // only when this is true, the function to build the string is called\n            this.logger.debug(buildMessage());\n        }\n    }\n}\n/**\n * Minimum MCP tool data definition.\n * This type definition does not intend to cover all possible properties.\n * It supports the properties that are used in this SDK.\n */\nexport const MCPTool = z.object({\n    name: z.string(),\n    description: z.string().optional(),\n    inputSchema: z.object({\n        type: z.literal('object'),\n        properties: z.record(z.string(), z.any()),\n        required: z.array(z.string()),\n        additionalProperties: z.boolean(),\n    }),\n});\n/**\n * Public interface of an MCP server that provides tools.\n * You can use this class to pass MCP server settings to your agent.\n */\nexport class MCPServerStdio extends BaseMCPServerStdio {\n    underlying;\n    constructor(options) {\n        super(options);\n        this.underlying = new UnderlyingMCPServerStdio(options);\n    }\n    get name() {\n        return this.underlying.name;\n    }\n    connect() {\n        return this.underlying.connect();\n    }\n    close() {\n        return this.underlying.close();\n    }\n    async listTools() {\n        if (this.cacheToolsList && this._cachedTools) {\n            return this._cachedTools;\n        }\n        const tools = await this.underlying.listTools();\n        if (this.cacheToolsList) {\n            this._cachedTools = tools;\n        }\n        return tools;\n    }\n    callTool(toolName, args) {\n        return this.underlying.callTool(toolName, args);\n    }\n}\nexport class MCPServerStreamableHttp extends BaseMCPServerStreamableHttp {\n    underlying;\n    constructor(options) {\n        super(options);\n        this.underlying = new UnderlyingMCPServerStreamableHttp(options);\n    }\n    get name() {\n        return this.underlying.name;\n    }\n    connect() {\n        return this.underlying.connect();\n    }\n    close() {\n        return this.underlying.close();\n    }\n    async listTools() {\n        if (this.cacheToolsList && this._cachedTools) {\n            return this._cachedTools;\n        }\n        const tools = await this.underlying.listTools();\n        if (this.cacheToolsList) {\n            this._cachedTools = tools;\n        }\n        return tools;\n    }\n    callTool(toolName, args) {\n        return this.underlying.callTool(toolName, args);\n    }\n}\n/**\n * Fetches and flattens all tools from multiple MCP servers.\n * Logs and skips any servers that fail to respond.\n */\nexport async function getAllMcpFunctionTools(mcpServers, convertSchemasToStrict = false) {\n    const allTools = [];\n    const toolNames = new Set();\n    for (const server of mcpServers) {\n        const serverTools = await getFunctionToolsFromServer(server, convertSchemasToStrict);\n        const serverToolNames = new Set(serverTools.map((t) => t.name));\n        const intersection = [...serverToolNames].filter((n) => toolNames.has(n));\n        if (intersection.length > 0) {\n            throw new UserError(`Duplicate tool names found across MCP servers: ${intersection.join(', ')}`);\n        }\n        for (const t of serverTools) {\n            toolNames.add(t.name);\n            allTools.push(t);\n        }\n    }\n    return allTools;\n}\nconst _cachedTools = {};\n/**\n * Remove cached tools for the given server so the next lookup fetches fresh data.\n *\n * @param serverName - Name of the MCP server whose cache should be cleared.\n */\nexport function invalidateServerToolsCache(serverName) {\n    delete _cachedTools[serverName];\n}\n/**\n * Fetches all function tools from a single MCP server.\n */\nasync function getFunctionToolsFromServer(server, convertSchemasToStrict) {\n    if (server.cacheToolsList && _cachedTools[server.name]) {\n        return _cachedTools[server.name].map((t) => mcpToFunctionTool(t, server, convertSchemasToStrict));\n    }\n    return withMCPListToolsSpan(async (span) => {\n        const mcpTools = await server.listTools();\n        span.spanData.result = mcpTools.map((t) => t.name);\n        const tools = mcpTools.map((t) => mcpToFunctionTool(t, server, convertSchemasToStrict));\n        if (server.cacheToolsList) {\n            _cachedTools[server.name] = mcpTools;\n        }\n        return tools;\n    }, { data: { server: server.name } });\n}\n/**\n * Returns all MCP tools from the provided servers, using the function tool conversion.\n */\nexport async function getAllMcpTools(mcpServers, convertSchemasToStrict = false) {\n    return getAllMcpFunctionTools(mcpServers, convertSchemasToStrict);\n}\n/**\n * Converts an MCP tool definition to a function tool for the Agents SDK.\n */\nexport function mcpToFunctionTool(mcpTool, server, convertSchemasToStrict) {\n    async function invoke(input, _context) {\n        let args = {};\n        if (typeof input === 'string' && input) {\n            args = JSON.parse(input);\n        }\n        else if (typeof input === 'object' && input != null) {\n            args = input;\n        }\n        const currentSpan = getCurrentSpan();\n        if (currentSpan) {\n            currentSpan.spanData['mcp_data'] = { server: server.name };\n        }\n        const content = await server.callTool(mcpTool.name, args);\n        return content.length === 1 ? content[0] : content;\n    }\n    const schema = {\n        type: mcpTool.inputSchema?.type ?? 'object',\n        properties: mcpTool.inputSchema?.properties ?? {},\n        required: mcpTool.inputSchema?.required ?? [],\n        additionalProperties: mcpTool.inputSchema?.additionalProperties ?? false,\n    };\n    if (convertSchemasToStrict || schema.additionalProperties === true) {\n        try {\n            const strictSchema = ensureStrictJsonSchema(schema);\n            return tool({\n                name: mcpTool.name,\n                description: mcpTool.description || '',\n                parameters: strictSchema,\n                strict: true,\n                execute: invoke,\n            });\n        }\n        catch (e) {\n            globalLogger.warn(`Error converting MCP schema to strict mode: ${e}`);\n        }\n    }\n    const nonStrictSchema = {\n        ...schema,\n        additionalProperties: true,\n    };\n    return tool({\n        name: mcpTool.name,\n        description: mcpTool.description || '',\n        parameters: nonStrictSchema,\n        strict: false,\n        execute: invoke,\n    });\n}\n/**\n * Ensures the given JSON schema is strict (no additional properties, required fields set).\n */\nfunction ensureStrictJsonSchema(schema) {\n    const out = {\n        ...schema,\n        additionalProperties: false,\n    };\n    if (!out.required)\n        out.required = [];\n    return out;\n}\n//# sourceMappingURL=mcp.mjs.map","import { BaseMCPServerStdio, BaseMCPServerStreamableHttp, } from \"../../mcp.mjs\";\nexport class MCPServerStdio extends BaseMCPServerStdio {\n    constructor(params) {\n        super(params);\n    }\n    get name() {\n        return 'MCPServerStdio';\n    }\n    connect() {\n        throw new Error('Method not implemented.');\n    }\n    close() {\n        throw new Error('Method not implemented.');\n    }\n    listTools() {\n        throw new Error('Method not implemented.');\n    }\n    callTool(_toolName, _args) {\n        throw new Error('Method not implemented.');\n    }\n}\nexport class MCPServerStreamableHttp extends BaseMCPServerStreamableHttp {\n    constructor(params) {\n        super(params);\n    }\n    get name() {\n        return 'MCPServerStdio';\n    }\n    connect() {\n        throw new Error('Method not implemented.');\n    }\n    close() {\n        throw new Error('Method not implemented.');\n    }\n    listTools() {\n        throw new Error('Method not implemented.');\n    }\n    callTool(_toolName, _args) {\n        throw new Error('Method not implemented.');\n    }\n}\n//# sourceMappingURL=browser.mjs.map","import { AsyncLocalStorage } from '@openai/agents-core/_shims';\nimport { getGlobalTraceProvider } from \"./provider.mjs\";\nlet _contextAsyncLocalStorage;\nfunction getContextAsyncLocalStorage() {\n    _contextAsyncLocalStorage ??= new AsyncLocalStorage();\n    return _contextAsyncLocalStorage;\n}\n/**\n * This function will get the current trace from the execution context.\n *\n * @returns The current trace or null if there is no trace.\n */\nexport function getCurrentTrace() {\n    const currentTrace = getContextAsyncLocalStorage().getStore();\n    if (currentTrace?.trace) {\n        return currentTrace.trace;\n    }\n    return null;\n}\n/**\n * This function will get the current span from the execution context.\n *\n * @returns The current span or null if there is no span.\n */\nexport function getCurrentSpan() {\n    const currentSpan = getContextAsyncLocalStorage().getStore();\n    if (currentSpan?.span) {\n        return currentSpan.span;\n    }\n    return null;\n}\n/**\n * This is an AsyncLocalStorage instance that stores the current trace.\n * It will automatically handle the execution context of different event loop executions.\n *\n * The functions below should be the only way that this context gets interfaced with.\n */\nfunction _wrapFunctionWithTraceLifecycle(fn) {\n    return async () => {\n        const trace = getCurrentTrace();\n        if (!trace) {\n            throw new Error('No trace found');\n        }\n        await trace.start();\n        const result = await fn(trace);\n        await trace.end();\n        return result;\n    };\n}\n/**\n * This function will create a new trace and assign it to the execution context of the function\n * passed to it.\n *\n * @param fn - The function to run and assign the trace context to.\n * @param options - Options for the creation of the trace\n */\nexport async function withTrace(trace, fn, options = {}) {\n    const newTrace = typeof trace === 'string'\n        ? getGlobalTraceProvider().createTrace({\n            ...options,\n            name: trace,\n        })\n        : trace;\n    return getContextAsyncLocalStorage().run({ trace: newTrace }, _wrapFunctionWithTraceLifecycle(fn));\n}\n/**\n * This function will check if there is an existing active trace in the execution context. If there\n * is, it will run the given function with the existing trace. If there is no trace, it will create\n * a new one and assign it to the execution context of the function.\n *\n * @param fn - The fzunction to run and assign the trace context to.\n * @param options - Options for the creation of the trace\n */\nexport async function getOrCreateTrace(fn, options = {}) {\n    const currentTrace = getCurrentTrace();\n    if (currentTrace) {\n        // if this execution context already has a trace instance in it we just continue\n        return await fn();\n    }\n    const newTrace = getGlobalTraceProvider().createTrace(options);\n    return getContextAsyncLocalStorage().run({ trace: newTrace }, _wrapFunctionWithTraceLifecycle(fn));\n}\n/**\n * This function will set the current span in the execution context.\n *\n * @param span - The span to set as the current span.\n */\nexport function setCurrentSpan(span) {\n    const context = getContextAsyncLocalStorage().getStore();\n    if (!context) {\n        throw new Error('No existing trace found');\n    }\n    if (context.span) {\n        context.span.previousSpan = context.previousSpan;\n        context.previousSpan = context.span;\n    }\n    context.span = span;\n    getContextAsyncLocalStorage().enterWith(context);\n}\nexport function resetCurrentSpan() {\n    const context = getContextAsyncLocalStorage().getStore();\n    if (context) {\n        context.span = context.previousSpan;\n        context.previousSpan = context.previousSpan?.previousSpan;\n        getContextAsyncLocalStorage().enterWith(context);\n    }\n}\n/**\n * This function will add an error to the current span.\n *\n * @param spanError - The error to add to the current span.\n */\nexport function addErrorToCurrentSpan(spanError) {\n    const currentSpan = getCurrentSpan();\n    if (currentSpan) {\n        currentSpan.setError(spanError);\n    }\n}\n/**\n * This function will clone the current context by creating new instances of the trace, span, and\n * previous span.\n *\n * @param context - The context to clone.\n * @returns A clone of the context.\n */\nexport function cloneCurrentContext(context) {\n    return {\n        trace: context.trace?.clone(),\n        span: context.span?.clone(),\n        previousSpan: context.previousSpan?.clone(),\n    };\n}\n/**\n * This function will run the given function with a new span context.\n *\n * @param fn - The function to run with the new span context.\n */\nexport function withNewSpanContext(fn) {\n    const currentContext = getContextAsyncLocalStorage().getStore();\n    if (!currentContext) {\n        throw new Error('No existing trace found');\n    }\n    const copyOfContext = cloneCurrentContext(currentContext);\n    return getContextAsyncLocalStorage().run(copyOfContext, fn);\n}\n//# sourceMappingURL=context.mjs.map","import logger from \"../logger.mjs\";\nimport { timer as _timer, isTracingLoopRunningByDefault, } from '@openai/agents-core/_shims';\nimport { tracing } from \"../config.mjs\";\n/**\n * Prints the traces and spans to the console\n */\nexport class ConsoleSpanExporter {\n    async export(items) {\n        if (tracing.disabled) {\n            logger.debug('Tracing is disabled. Skipping export');\n            return;\n        }\n        for (const item of items) {\n            if (item.type === 'trace') {\n                console.log(`[Exporter] Export trace traceId=${item.traceId} name=${item.name}`);\n            }\n            else {\n                console.log(`[Exporter] Export span: ${JSON.stringify(item)}`);\n            }\n        }\n    }\n}\nexport class BatchTraceProcessor {\n    #maxQueueSize;\n    #maxBatchSize;\n    #scheduleDelay;\n    #exportTriggerSize;\n    #exporter;\n    #buffer = [];\n    #timer;\n    #timeout = null;\n    #exportInProgress = false;\n    #timeoutAbortController = null;\n    constructor(exporter, { maxQueueSize = 1000, maxBatchSize = 100, scheduleDelay = 5000, // 5 seconds\n    exportTriggerRatio = 0.8, } = {}) {\n        this.#maxQueueSize = maxQueueSize;\n        this.#maxBatchSize = maxBatchSize;\n        this.#scheduleDelay = scheduleDelay;\n        this.#exportTriggerSize = maxQueueSize * exportTriggerRatio;\n        this.#exporter = exporter;\n        this.#timer = _timer;\n        if (isTracingLoopRunningByDefault()) {\n            this.start();\n        }\n        else {\n            logger.debug('Automatic trace export loop is not supported in this environment. You need to manually call `getGlobalTraceProvider().forceFlush()` to export traces.');\n        }\n    }\n    start() {\n        this.#timeoutAbortController = new AbortController();\n        this.#runExportLoop();\n    }\n    async #safeAddItem(item) {\n        if (this.#buffer.length + 1 > this.#maxQueueSize) {\n            logger.error('Dropping trace because buffer is full');\n            return;\n        }\n        // add the item to the buffer\n        this.#buffer.push(item);\n        if (this.#buffer.length > this.#exportTriggerSize) {\n            // start exporting immediately\n            await this.#exportBatches();\n        }\n    }\n    #runExportLoop() {\n        this.#timeout = this.#timer.setTimeout(async () => {\n            // scheduled export\n            await this.#exportBatches();\n            this.#runExportLoop();\n        }, this.#scheduleDelay);\n        // We set this so that Node no longer considers this part of the event loop and keeps the\n        // process alive until the timer is done.\n        if (typeof this.#timeout.unref === 'function') {\n            this.#timeout.unref();\n        }\n    }\n    async #exportBatches(force = false) {\n        if (this.#buffer.length === 0) {\n            return;\n        }\n        logger.debug(`Exporting batches. Force: ${force}. Buffer size: ${this.#buffer.length}`);\n        if (force || this.#buffer.length < this.#maxBatchSize) {\n            const toExport = [...this.#buffer];\n            this.#buffer = [];\n            this.#exportInProgress = true;\n            await this.#exporter.export(toExport);\n            this.#exportInProgress = false;\n        }\n        else if (this.#buffer.length > 0) {\n            const batch = this.#buffer.splice(0, this.#maxBatchSize);\n            this.#exportInProgress = true;\n            await this.#exporter.export(batch);\n            this.#exportInProgress = false;\n        }\n    }\n    async onTraceStart(trace) {\n        await this.#safeAddItem(trace);\n    }\n    async onTraceEnd(_trace) {\n        // We don't send traces on end because we already send them on start\n    }\n    async onSpanStart(_span) {\n        // We don't send spans on start because we send them at the end\n    }\n    async onSpanEnd(span) {\n        await this.#safeAddItem(span);\n    }\n    async shutdown(timeout) {\n        if (timeout) {\n            this.#timer.setTimeout(() => {\n                // force shutdown the HTTP request\n                this.#timeoutAbortController?.abort();\n            }, timeout);\n        }\n        logger.debug('Shutting down gracefully');\n        while (this.#buffer.length > 0) {\n            logger.debug(`Waiting for buffer to empty. Items left: ${this.#buffer.length}`);\n            if (!this.#exportInProgress) {\n                // no current export in progress. Forcing all items to be exported\n                await this.#exportBatches(true);\n            }\n            if (this.#timeoutAbortController?.signal.aborted) {\n                logger.debug('Timeout reached, force flushing');\n                await this.#exportBatches(true);\n                break;\n            }\n            // using setTimeout to add to the event loop and keep this alive until done\n            await new Promise((resolve) => this.#timer.setTimeout(resolve, 500));\n        }\n        logger.debug('Buffer empty. Exiting');\n        if (this.#timer && this.#timeout) {\n            // making sure there are no more requests\n            this.#timer.clearTimeout(this.#timeout);\n        }\n    }\n    async forceFlush() {\n        if (this.#buffer.length > 0) {\n            await this.#exportBatches(true);\n        }\n    }\n}\nexport class MultiTracingProcessor {\n    #processors = [];\n    start() {\n        for (const processor of this.#processors) {\n            if (processor.start) {\n                processor.start();\n            }\n        }\n    }\n    addTraceProcessor(processor) {\n        this.#processors.push(processor);\n    }\n    setProcessors(processors) {\n        logger.debug('Shutting down old processors');\n        for (const processor of this.#processors) {\n            processor.shutdown();\n        }\n        this.#processors = processors;\n    }\n    async onTraceStart(trace) {\n        for (const processor of this.#processors) {\n            await processor.onTraceStart(trace);\n        }\n    }\n    async onTraceEnd(trace) {\n        for (const processor of this.#processors) {\n            await processor.onTraceEnd(trace);\n        }\n    }\n    async onSpanStart(span) {\n        for (const processor of this.#processors) {\n            await processor.onSpanStart(span);\n        }\n    }\n    async onSpanEnd(span) {\n        for (const processor of this.#processors) {\n            await processor.onSpanEnd(span);\n        }\n    }\n    async shutdown(timeout) {\n        for (const processor of this.#processors) {\n            await processor.shutdown(timeout);\n        }\n    }\n    async forceFlush() {\n        for (const processor of this.#processors) {\n            await processor.forceFlush();\n        }\n    }\n}\nlet _defaultExporter = null;\nlet _defaultProcessor = null;\nexport function defaultExporter() {\n    if (!_defaultExporter) {\n        _defaultExporter = new ConsoleSpanExporter();\n    }\n    return _defaultExporter;\n}\nexport function defaultProcessor() {\n    if (!_defaultProcessor) {\n        _defaultProcessor = new BatchTraceProcessor(defaultExporter());\n    }\n    return _defaultProcessor;\n}\n//# sourceMappingURL=processor.mjs.map","import { getCurrentSpan, getCurrentTrace } from \"./context.mjs\";\nimport { tracing } from \"../config.mjs\";\nimport logger from \"../logger.mjs\";\nimport { MultiTracingProcessor } from \"./processor.mjs\";\nimport { NoopSpan, Span } from \"./spans.mjs\";\nimport { NoopTrace, Trace } from \"./traces.mjs\";\nimport { generateTraceId } from \"./utils.mjs\";\nexport class TraceProvider {\n    #multiProcessor;\n    #disabled;\n    constructor() {\n        this.#multiProcessor = new MultiTracingProcessor();\n        this.#disabled = tracing.disabled;\n        this.#addCleanupListeners();\n    }\n    /**\n     * Add a processor to the list of processors. Each processor will receive all traces/spans.\n     *\n     * @param processor - The processor to add.\n     */\n    registerProcessor(processor) {\n        this.#multiProcessor.addTraceProcessor(processor);\n    }\n    /**\n     * Set the list of processors. This will replace any existing processors.\n     *\n     * @param processors - The list of processors to set.\n     */\n    setProcessors(processors) {\n        this.#multiProcessor.setProcessors(processors);\n    }\n    /**\n     * Get the current trace.\n     *\n     * @returns The current trace.\n     */\n    getCurrentTrace() {\n        return getCurrentTrace();\n    }\n    getCurrentSpan() {\n        return getCurrentSpan();\n    }\n    setDisabled(disabled) {\n        this.#disabled = disabled;\n    }\n    startExportLoop() {\n        this.#multiProcessor.start();\n    }\n    createTrace(traceOptions) {\n        if (this.#disabled) {\n            logger.debug('Tracing is disabled, Not creating trace %o', traceOptions);\n            return new NoopTrace();\n        }\n        const traceId = traceOptions.traceId ?? generateTraceId();\n        const name = traceOptions.name ?? 'Agent workflow';\n        logger.debug('Creating trace %s with name %s', traceId, name);\n        return new Trace({ ...traceOptions, name, traceId }, this.#multiProcessor);\n    }\n    createSpan(spanOptions, parent) {\n        if (this.#disabled || spanOptions.disabled) {\n            logger.debug('Tracing is disabled, Not creating span %o', spanOptions);\n            return new NoopSpan(spanOptions.data, this.#multiProcessor);\n        }\n        let parentId;\n        let traceId;\n        if (!parent) {\n            const currentTrace = getCurrentTrace();\n            const currentSpan = getCurrentSpan();\n            if (!currentTrace) {\n                logger.error('No active trace. Make sure to start a trace with `withTrace()` first. Returning NoopSpan.');\n                return new NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            if (currentSpan instanceof NoopSpan ||\n                currentTrace instanceof NoopTrace) {\n                logger.debug(`Parent ${currentSpan} or ${currentTrace} is no-op, returning NoopSpan`);\n                return new NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            traceId = currentTrace.traceId;\n            if (currentSpan) {\n                logger.debug('Using parent span %s', currentSpan.spanId);\n                parentId = currentSpan.spanId;\n            }\n            else {\n                logger.debug('No parent span, using current trace %s', currentTrace.traceId);\n            }\n        }\n        else if (parent instanceof Trace) {\n            if (parent instanceof NoopTrace) {\n                logger.debug('Parent trace is no-op, returning NoopSpan');\n                return new NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            traceId = parent.traceId;\n        }\n        else if (parent instanceof Span) {\n            if (parent instanceof NoopSpan) {\n                logger.debug('Parent span is no-op, returning NoopSpan');\n                return new NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            parentId = parent.spanId;\n            traceId = parent.traceId;\n        }\n        if (!traceId) {\n            logger.error('No traceId found. Make sure to start a trace with `withTrace()` first. Returning NoopSpan.');\n            return new NoopSpan(spanOptions.data, this.#multiProcessor);\n        }\n        logger.debug(`Creating span ${JSON.stringify(spanOptions.data)} with id ${spanOptions.spanId ?? traceId}`);\n        return new Span({\n            ...spanOptions,\n            traceId,\n            parentId,\n        }, this.#multiProcessor);\n    }\n    async shutdown(timeout) {\n        try {\n            logger.debug('Shutting down tracing provider');\n            await this.#multiProcessor.shutdown(timeout);\n        }\n        catch (error) {\n            logger.error('Error shutting down tracing provider %o', error);\n        }\n    }\n    /** Adds listeners to `process` to ensure `shutdown` occurs before exit. */\n    #addCleanupListeners() {\n        if (typeof process !== 'undefined' && typeof process.on === 'function') {\n            // handling Node.js process termination\n            const cleanup = async () => {\n                const timeout = setTimeout(() => {\n                    console.warn('Cleanup timeout, forcing exit');\n                    process.exit(1);\n                }, 5000);\n                try {\n                    await this.shutdown();\n                }\n                finally {\n                    clearTimeout(timeout);\n                }\n            };\n            // Handle normal termination\n            process.on('beforeExit', cleanup);\n            // Handle CTRL+C (SIGINT)\n            process.on('SIGINT', async () => {\n                await cleanup();\n                if (!hasOtherListenersForSignals('SIGINT')) {\n                    // Only when there are no other listeners, exit the process on this SDK side\n                    process.exit(130);\n                }\n            });\n            // Handle termination (SIGTERM)\n            process.on('SIGTERM', async () => {\n                await cleanup();\n                if (!hasOtherListenersForSignals('SIGTERM')) {\n                    // Only when there are no other listeners, exit the process on this SDK side\n                    process.exit(0);\n                }\n            });\n            process.on('unhandledRejection', async (reason, promise) => {\n                logger.error('Unhandled rejection', reason, promise);\n                await cleanup();\n                if (!hasOtherListenersForEvents('unhandledRejection')) {\n                    // Only when there are no other listeners, exit the process on this SDK side\n                    process.exit(1);\n                }\n            });\n        }\n    }\n    async forceFlush() {\n        await this.#multiProcessor.forceFlush();\n    }\n}\nfunction hasOtherListenersForSignals(event) {\n    return process.listeners(event).length > 1;\n}\nfunction hasOtherListenersForEvents(event) {\n    return process.listeners(event).length > 1;\n}\nlet GLOBAL_TRACE_PROVIDER = undefined;\nexport function getGlobalTraceProvider() {\n    if (!GLOBAL_TRACE_PROVIDER) {\n        GLOBAL_TRACE_PROVIDER = new TraceProvider();\n    }\n    return GLOBAL_TRACE_PROVIDER;\n}\n//# sourceMappingURL=provider.mjs.map","import { randomUUID } from '@openai/agents-core/_shims';\n/**\n * Generate an ISO 8601 timestamp of the current time.\n * @returns An ISO 8601 timestamp.\n */\nexport function timeIso() {\n    return new Date().toISOString();\n}\n/**\n * Generate a trace ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `trace_`.\n * @returns A trace ID.\n */\nexport function generateTraceId() {\n    return `trace_${randomUUID().replace(/-/g, '')}`;\n}\n/**\n * Generate a span ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `span_`.\n * @returns A span ID.\n */\nexport function generateSpanId() {\n    return `span_${randomUUID().replace(/-/g, '').slice(0, 24)}`;\n}\n/**\n * Generate a group ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `group_`.\n * @returns A group ID.\n */\nexport function generateGroupId() {\n    return `group_${randomUUID().replace(/-/g, '').slice(0, 24)}`;\n}\n/**\n * Remove fields that start with an underscore from an object.\n * @param obj - The object to remove private fields from.\n * @returns A new object with private fields removed.\n */\nexport function removePrivateFields(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([key]) => !key.startsWith('_')));\n}\n//# sourceMappingURL=utils.mjs.map","import logger from \"../logger.mjs\";\nimport { generateSpanId, removePrivateFields, timeIso } from \"./utils.mjs\";\nexport class Span {\n    type = 'trace.span';\n    #data;\n    #traceId;\n    #spanId;\n    #parentId;\n    #processor;\n    #startedAt;\n    #endedAt;\n    #error;\n    #previousSpan;\n    constructor(options, processor) {\n        this.#traceId = options.traceId;\n        this.#spanId = options.spanId ?? generateSpanId();\n        this.#data = options.data;\n        this.#processor = processor;\n        this.#parentId = options.parentId ?? null;\n        this.#error = options.error ?? null;\n        this.#startedAt = options.startedAt ?? null;\n        this.#endedAt = options.endedAt ?? null;\n    }\n    get traceId() {\n        return this.#traceId;\n    }\n    get spanData() {\n        return this.#data;\n    }\n    get spanId() {\n        return this.#spanId;\n    }\n    get parentId() {\n        return this.#parentId;\n    }\n    get previousSpan() {\n        return this.#previousSpan;\n    }\n    set previousSpan(span) {\n        this.#previousSpan = span;\n    }\n    start() {\n        if (this.#startedAt) {\n            logger.warn('Span already started');\n            return;\n        }\n        this.#startedAt = timeIso();\n        this.#processor.onSpanStart(this);\n    }\n    end() {\n        if (this.#endedAt) {\n            logger.debug('Span already finished', this.spanData);\n            return;\n        }\n        this.#endedAt = timeIso();\n        this.#processor.onSpanEnd(this);\n    }\n    setError(error) {\n        this.#error = error;\n    }\n    get error() {\n        return this.#error;\n    }\n    get startedAt() {\n        return this.#startedAt;\n    }\n    get endedAt() {\n        return this.#endedAt;\n    }\n    clone() {\n        const span = new Span({\n            traceId: this.traceId,\n            spanId: this.spanId,\n            parentId: this.parentId ?? undefined,\n            data: this.spanData,\n            startedAt: this.#startedAt ?? undefined,\n            endedAt: this.#endedAt ?? undefined,\n            error: this.#error ?? undefined,\n        }, this.#processor);\n        span.previousSpan = this.previousSpan?.clone();\n        return span;\n    }\n    toJSON() {\n        return {\n            object: this.type,\n            id: this.spanId,\n            trace_id: this.traceId,\n            parent_id: this.parentId,\n            started_at: this.startedAt,\n            ended_at: this.endedAt,\n            span_data: removePrivateFields(this.spanData),\n            error: this.error,\n        };\n    }\n}\nexport class NoopSpan extends Span {\n    constructor(data, processor) {\n        super({ traceId: 'no-op', spanId: 'no-op', data }, processor);\n    }\n    start() {\n        return;\n    }\n    end() {\n        return;\n    }\n    setError() {\n        return;\n    }\n    toJSON() {\n        return null;\n    }\n}\n//# sourceMappingURL=spans.mjs.map","import { defaultProcessor } from \"./processor.mjs\";\nimport { generateTraceId } from \"./utils.mjs\";\nexport class Trace {\n    type = 'trace';\n    traceId;\n    name;\n    groupId = null;\n    metadata;\n    #processor;\n    #started;\n    constructor(options, processor) {\n        this.traceId = options.traceId ?? generateTraceId();\n        this.name = options.name ?? 'Agent workflow';\n        this.groupId = options.groupId ?? null;\n        this.metadata = options.metadata ?? {};\n        this.#processor = processor ?? defaultProcessor();\n        this.#started = options.started ?? false;\n    }\n    async start() {\n        if (this.#started) {\n            return;\n        }\n        this.#started = true;\n        await this.#processor.onTraceStart(this);\n    }\n    async end() {\n        if (!this.#started) {\n            return;\n        }\n        this.#started = false;\n        await this.#processor.onTraceEnd(this);\n    }\n    clone() {\n        return new Trace({\n            traceId: this.traceId,\n            name: this.name,\n            groupId: this.groupId ?? undefined,\n            metadata: this.metadata,\n            started: this.#started,\n        });\n    }\n    toJSON() {\n        return {\n            object: this.type,\n            id: this.traceId,\n            workflow_name: this.name,\n            group_id: this.groupId,\n            metadata: this.metadata,\n        };\n    }\n}\nexport class NoopTrace extends Trace {\n    constructor() {\n        super({});\n    }\n    async start() {\n        return;\n    }\n    async end() {\n        return;\n    }\n    toJSON() {\n        return null;\n    }\n}\n//# sourceMappingURL=traces.mjs.map","import { resetCurrentSpan, setCurrentSpan, withNewSpanContext, } from \"./context.mjs\";\nimport { getGlobalTraceProvider } from \"./provider.mjs\";\nfunction _withSpanFactory(createSpan) {\n    return async (fn, ...args) => {\n        // Creating a new span context to make sure that the previous span is correctly reset\n        return withNewSpanContext(async () => {\n            const span = createSpan(...args);\n            setCurrentSpan(span);\n            try {\n                span.start();\n                return await fn(span);\n            }\n            catch (error) {\n                span.setError({\n                    message: error.message,\n                    data: error.data,\n                });\n                throw error;\n            }\n            finally {\n                span.end();\n                resetCurrentSpan();\n            }\n        });\n    };\n}\n/**\n * Create a new response span. The span will not be started automatically, you should either\n * use `withResponseSpan()` or call `span.start()` and `span.end()` manually.\n *\n * This span captures the details of a model response, primarily the response identifier.\n * If you need to capture detailed generation information such as input/output messages,\n * model configuration, or usage data, use `createGenerationSpan()` instead.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created response span.\n */\nexport function createResponseSpan(options, parent) {\n    options = {};\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'response',\n            ...options.data,\n        },\n    }, parent);\n}\n/**\n * Create a new response span and automatically start and end it.\n *\n * This span captures the details of a model response, primarily the response identifier.\n * If you need to capture detailed generation information such as input/output messages,\n * model configuration, or usage data, use `generationSpan()` instead.\n */\nexport const withResponseSpan = _withSpanFactory(createResponseSpan);\n/**\n * Create a new agent span. The span will not be started automatically, you should either\n * use `withAgentSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created agent span.\n */\nexport function createAgentSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'agent',\n            name: options?.data?.name ?? 'Agent',\n            ...options?.data,\n        },\n    }, parent);\n}\n/**\n * Create a new agent span and automatically start and end it.\n */\nexport const withAgentSpan = _withSpanFactory(createAgentSpan);\n/**\n * Create a new function span. The span will not be started automatically, you should either\n * use `withFunctionSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created function span.\n */\nexport function createFunctionSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'function',\n            input: options?.data?.input ?? '',\n            output: options?.data?.output ?? '',\n            ...options?.data,\n        },\n    }, parent);\n}\n/**\n * Create a new function span and automatically start and end it.\n */\nexport const withFunctionSpan = _withSpanFactory(createFunctionSpan);\n/**\n * Create a new handoff span. The span will not be started automatically, you should either\n * use `withHandoffSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created handoff span.\n */\nexport function createHandoffSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: { type: 'handoff', ...options?.data },\n    }, parent);\n}\n/**\n * Create a new handoff span and automatically start and end it.\n */\nexport const withHandoffSpan = _withSpanFactory(createHandoffSpan);\n/**\n * Create a new generation span. The span will not be started automatically, you should either\n * use `withGenerationSpan()` or call `span.start()` and `span.end()` manually.\n *\n * This span captures the details of a model generation, including input/output message\n * sequences, model information, and usage data. If you only need to capture a model response\n * identifier, consider using `createResponseSpan()` instead.\n */\nexport function createGenerationSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'generation',\n            ...options?.data,\n        },\n    }, parent);\n}\n/** Automatically create a generation span, run fn and close the span */\nexport const withGenerationSpan = _withSpanFactory(createGenerationSpan);\n/**\n * Create a new custom span. The span will not be started automatically, you should either use\n * `withCustomSpan()` or call `span.start()` and `span.end()` manually.\n */\nexport function createCustomSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'custom',\n            data: {},\n            ...options?.data,\n        },\n    }, parent);\n}\nexport const withCustomSpan = _withSpanFactory(createCustomSpan);\n/**\n * Create a new guardrail span. The span will not be started automatically, you should either use\n * `withGuardrailSpan()` or call `span.start()` and `span.end()` manually.\n */\nexport function createGuardrailSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'guardrail',\n            triggered: false,\n            ...options?.data,\n        },\n    }, parent);\n}\nexport const withGuardrailSpan = _withSpanFactory(createGuardrailSpan);\n/**\n * Create a new transcription span. The span will not be started automatically.\n */\nexport function createTranscriptionSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'transcription',\n            ...options.data,\n        },\n    }, parent);\n}\nexport const withTranscriptionSpan = _withSpanFactory(createTranscriptionSpan);\n/**\n * Create a new speech span. The span will not be started automatically.\n */\nexport function createSpeechSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'speech',\n            ...options.data,\n        },\n    }, parent);\n}\nexport const withSpeechSpan = _withSpanFactory(createSpeechSpan);\n/**\n * Create a new speech group span. The span will not be started automatically.\n */\nexport function createSpeechGroupSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'speech_group',\n            ...options?.data,\n        },\n    }, parent);\n}\nexport const withSpeechGroupSpan = _withSpanFactory(createSpeechGroupSpan);\n/**\n * Create a new MCP list tools span. The span will not be started automatically.\n */\nexport function createMCPListToolsSpan(options, parent) {\n    return getGlobalTraceProvider().createSpan({\n        ...options,\n        data: {\n            type: 'mcp_tools',\n            ...options?.data,\n        },\n    }, parent);\n}\nexport const withMCPListToolsSpan = _withSpanFactory(createMCPListToolsSpan);\n//# sourceMappingURL=createSpans.mjs.map","import { getGlobalTraceProvider } from \"./provider.mjs\";\nexport { getCurrentSpan, getCurrentTrace, getOrCreateTrace, resetCurrentSpan, setCurrentSpan, withTrace, } from \"./context.mjs\";\nexport * from \"./createSpans.mjs\";\nexport { BatchTraceProcessor, ConsoleSpanExporter, } from \"./processor.mjs\";\nexport { NoopSpan, Span } from \"./spans.mjs\";\nexport { NoopTrace, Trace } from \"./traces.mjs\";\nexport { generateGroupId, generateSpanId, generateTraceId } from \"./utils.mjs\";\n/**\n * Add a processor to the list of processors. Each processor will receive all traces/spans.\n *\n * @param processor - The processor to add.\n */\nexport function addTraceProcessor(processor) {\n    getGlobalTraceProvider().registerProcessor(processor);\n}\n/**\n * Set the list of processors. This will replace any existing processors.\n *\n * @param processors - The list of processors to set.\n */\nexport function setTraceProcessors(processors) {\n    getGlobalTraceProvider().setProcessors(processors);\n}\n/**\n * Set the disabled state of the tracing provider.\n *\n * @param disabled - Whether to disable tracing.\n */\nexport function setTracingDisabled(disabled) {\n    getGlobalTraceProvider().setDisabled(disabled);\n}\n/**\n * Start the trace export loop.\n */\nexport function startTraceExportLoop() {\n    getGlobalTraceProvider().startExportLoop();\n}\n//# sourceMappingURL=index.mjs.map","import { RuntimeEventEmitter, } from '@openai/agents-core/_shims';\nexport class EventEmitterDelegate {\n    on(type, listener) {\n        this.eventEmitter.on(type, listener);\n        return this.eventEmitter;\n    }\n    off(type, listener) {\n        this.eventEmitter.off(type, listener);\n        return this.eventEmitter;\n    }\n    emit(type, ...args) {\n        return this.eventEmitter.emit(type, ...args);\n    }\n    once(type, listener) {\n        this.eventEmitter.once(type, listener);\n        return this.eventEmitter;\n    }\n}\n/**\n * Event emitter that every Agent instance inherits from and that emits events for the lifecycle\n * of the agent.\n */\nexport class AgentHooks extends EventEmitterDelegate {\n    eventEmitter = new RuntimeEventEmitter();\n}\n/**\n * Event emitter that every Runner instance inherits from and that emits events for the lifecycle\n * of the overall run.\n */\nexport class RunHooks extends EventEmitterDelegate {\n    eventEmitter = new RuntimeEventEmitter();\n}\n//# sourceMappingURL=lifecycle.mjs.map","/**\n * Defines an input guardrail definition.\n */\nexport function defineInputGuardrail({ name, execute, }) {\n    return {\n        type: 'input',\n        name,\n        guardrailFunction: execute,\n        async run(args) {\n            return {\n                guardrail: { type: 'input', name },\n                output: await execute(args),\n            };\n        },\n    };\n}\n/**\n * Creates an output guardrail definition.\n */\nexport function defineOutputGuardrail({ name, execute, }) {\n    return {\n        type: 'output',\n        name,\n        guardrailFunction: execute,\n        async run(args) {\n            return {\n                guardrail: { type: 'output', name },\n                agent: args.agent,\n                agentOutput: args.agentOutput,\n                output: await execute(args),\n            };\n        },\n    };\n}\n//# sourceMappingURL=guardrail.mjs.map","import { ModelBehaviorError, UserError } from \"./errors.mjs\";\nimport { toFunctionToolName } from \"./utils/tools.mjs\";\nimport { getSchemaAndParserFromInputType } from \"./utils/tools.mjs\";\nimport { addErrorToCurrentSpan } from \"./tracing/context.mjs\";\nimport logger from \"./logger.mjs\";\n/**\n * Generates the message that will be given as tool output to the model that requested the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The message that will be given as tool output to the model that requested the handoff\n */\nexport function getTransferMessage(agent) {\n    return JSON.stringify({ assistant: agent.name });\n}\n/**\n * The default name of the tool that represents the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The name of the tool that represents the handoff\n */\nfunction defaultHandoffToolName(agent) {\n    return `transfer_to_${toFunctionToolName(agent.name)}`;\n}\n/**\n * Generates the description of the tool that represents the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The description of the tool that represents the handoff\n */\nfunction defaultHandoffToolDescription(agent) {\n    return `Handoff to the ${agent.name} agent to handle the request. ${agent.handoffDescription ?? ''}`;\n}\n/**\n * A handoff is when an agent delegates a task to another agent.\n * For example, in a customer support scenario you might have a \"triage agent\" that determines which\n * agent should handle the user's request, and sub-agents that specialize in different areas like\n * billing, account management, etc.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n */\nexport class Handoff {\n    /**\n     * The name of the tool that represents the handoff.\n     */\n    toolName;\n    /**\n     * The description of the tool that represents the handoff.\n     */\n    toolDescription;\n    /**\n     * The JSON schema for the handoff input. Can be empty if the handoff does not take an input\n     */\n    inputJsonSchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n        additionalProperties: false,\n    };\n    /**\n     * Whether the input JSON schema is in strict mode. We **strongly** recommend setting this to\n     * true, as it increases the likelihood of correct JSON input.\n     */\n    strictJsonSchema = true;\n    /**\n     * The function that invokes the handoff. The parameters passed are:\n     * 1. The handoff run context\n     * 2. The arguments from the LLM, as a JSON string. Empty string if inputJsonSchema is empty.\n     *\n     * Must return an agent\n     */\n    onInvokeHandoff;\n    /**\n     * The name of the agent that is being handed off to.\n     */\n    agentName;\n    /**\n     * A function that filters the inputs that are passed to the next agent. By default, the new agent\n     * sees the entire conversation history. In some cases, you may want to filter inputs e.g. to\n     * remove older inputs, or remove tools from existing inputs.\n     *\n     * The function will receive the entire conversation hisstory so far, including the input item\n     * that triggered the handoff and a tool call output item representing the handoff tool's output.\n     *\n     * You are free to modify the input history or new items as you see fit. The next agent that runs\n     * will receive `handoffInputData.allItems\n     */\n    inputFilter;\n    /**\n     * The agent that is being handed off to.\n     */\n    agent;\n    /**\n     * Returns a function tool definition that can be used to invoke the handoff.\n     */\n    getHandoffAsFunctionTool() {\n        return {\n            type: 'function',\n            name: this.toolName,\n            description: this.toolDescription,\n            parameters: this.inputJsonSchema,\n            strict: this.strictJsonSchema,\n        };\n    }\n    constructor(agent, onInvokeHandoff) {\n        this.agentName = agent.name;\n        this.onInvokeHandoff = onInvokeHandoff;\n        this.toolName = defaultHandoffToolName(agent);\n        this.toolDescription = defaultHandoffToolDescription(agent);\n        this.agent = agent;\n    }\n}\n/**\n * Creates a handoff from an agent. Handoffs are automatically created when you pass an agent\n * into the `handoffs` option of the `Agent` constructor. Alternatively, you can use this function\n * to create a handoff manually, giving you more control over configuration.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n * @template TInputType The input type of the handoff\n */\nexport function handoff(agent, config = {}) {\n    let parser = undefined;\n    const hasOnHandoff = !!config.onHandoff;\n    const hasInputType = !!config.inputType;\n    const hasBothOrNeitherHandoffAndInputType = hasOnHandoff === hasInputType;\n    if (!hasBothOrNeitherHandoffAndInputType) {\n        throw new UserError('You must provide either both `onHandoff` and `inputType` or neither.');\n    }\n    async function onInvokeHandoff(context, inputJsonString) {\n        if (parser) {\n            if (!inputJsonString) {\n                addErrorToCurrentSpan({\n                    message: `Handoff function expected non empty input but got: ${inputJsonString}`,\n                    data: {\n                        details: `input is empty`,\n                    },\n                });\n                throw new ModelBehaviorError('Handoff function expected non empty input');\n            }\n            try {\n                // verify that it's valid input but we don't care about the result\n                const parsed = await parser(inputJsonString);\n                if (config.onHandoff) {\n                    await config.onHandoff(context, parsed);\n                }\n            }\n            catch (error) {\n                addErrorToCurrentSpan({\n                    message: `Invalid JSON provided`,\n                    data: {},\n                });\n                if (!logger.dontLogToolData) {\n                    logger.error(`Invalid JSON when parsing: ${inputJsonString}. Error: ${error}`);\n                }\n                throw new ModelBehaviorError('Invalid JSON provided');\n            }\n        }\n        else {\n            await config.onHandoff?.(context);\n        }\n        return agent;\n    }\n    const handoff = new Handoff(agent, onInvokeHandoff);\n    if (config.inputType) {\n        const result = getSchemaAndParserFromInputType(config.inputType, handoff.toolName);\n        handoff.inputJsonSchema = result.schema;\n        handoff.strictJsonSchema = true;\n        parser = result.parser;\n    }\n    if (config.toolNameOverride) {\n        handoff.toolName = config.toolNameOverride;\n    }\n    if (config.toolDescriptionOverride) {\n        handoff.toolDescription = config.toolDescriptionOverride;\n    }\n    if (config.inputFilter) {\n        handoff.inputFilter = config.inputFilter;\n    }\n    return handoff;\n}\n/**\n * Returns a handoff for the given agent. If the agent is already wrapped into a handoff,\n * it will be returned as is. Otherwise, a new handoff instance will be created.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n */\nexport function getHandoff(agent) {\n    if (agent instanceof Handoff) {\n        return agent;\n    }\n    return handoff(agent);\n}\n//# sourceMappingURL=handoff.mjs.map","let DEFAULT_PROVIDER;\n/**\n * Set the model provider used when no explicit provider is supplied.\n *\n * @param provider - The provider to use by default.\n */\nexport function setDefaultModelProvider(provider) {\n    DEFAULT_PROVIDER = provider;\n}\n/**\n * Returns the default model provider.\n *\n * @returns The default model provider.\n */\nexport function getDefaultModelProvider() {\n    if (typeof DEFAULT_PROVIDER === 'undefined') {\n        throw new Error('No default model provider set. Make sure to set a provider using setDefaultModelProvider before calling getDefaultModelProvider or pass an explicit provider.');\n    }\n    return DEFAULT_PROVIDER;\n}\n//# sourceMappingURL=providers.mjs.map","import { z } from '@openai/zod/v3';\n// ----------------------------\n// Shared base types\n// ----------------------------\n/**\n * Every item in the protocol provides a `providerData` field to accommodate custom functionality\n * or new fields\n */\nexport const SharedBase = z.object({\n    /**\n     * Additional optional provider specific data. Used for custom functionality or model provider\n     * specific fields.\n     */\n    providerData: z.record(z.string(), z.any()).optional(),\n});\n/**\n * Every item has a shared of shared item data including an optional ID.\n */\nexport const ItemBase = SharedBase.extend({\n    /**\n     * An ID to identify the item. This is optional by default. If a model provider absolutely\n     * requires this field, it will be validated on the model level.\n     */\n    id: z.string().optional(),\n});\n// ----------------------------\n// Content types\n// ----------------------------\nexport const Refusal = SharedBase.extend({\n    type: z.literal('refusal'),\n    /**\n     * The refusal explanation from the model.\n     */\n    refusal: z.string(),\n});\nexport const OutputText = SharedBase.extend({\n    type: z.literal('output_text'),\n    /**\n     * The text output from the model.\n     */\n    text: z.string(),\n});\nexport const InputText = SharedBase.extend({\n    type: z.literal('input_text'),\n    /**\n     * A text input for example a message from a user\n     */\n    text: z.string(),\n});\nexport const InputImage = SharedBase.extend({\n    type: z.literal('input_image'),\n    /**\n     * The image input to the model. Could be a URL, base64 or an object with a file ID.\n     */\n    image: z\n        .string()\n        .or(z.object({\n        id: z.string(),\n    }))\n        .describe('Could be a URL, base64 or an object with a file ID.'),\n});\nexport const InputFile = SharedBase.extend({\n    type: z.literal('input_file'),\n    /**\n     * The file input to the model. Could be a URL, base64 or an object with a file ID.\n     */\n    file: z\n        .string()\n        .describe('Either base64 encoded file data or a publicly accessible file URL')\n        .or(z.object({\n        id: z.string().describe('OpenAI file ID'),\n    }))\n        .or(z.object({\n        url: z.string().describe('Publicly accessible PDF file URL'),\n    }))\n        .describe('Contents of the file or an object with a file ID.'),\n});\nexport const AudioContent = SharedBase.extend({\n    type: z.literal('audio'),\n    /**\n     * The audio input to the model. Could be base64 encoded audio data or an object with a file ID.\n     */\n    audio: z\n        .string()\n        .or(z.object({\n        id: z.string(),\n    }))\n        .describe('Base64 encoded audio data or file id'),\n    /**\n     * The format of the audio.\n     */\n    format: z.string().nullable().optional(),\n    /**\n     * The transcript of the audio.\n     */\n    transcript: z.string().nullable().optional(),\n});\nexport const ImageContent = SharedBase.extend({\n    type: z.literal('image'),\n    /**\n     * The image input to the model. Could be base64 encoded image data or an object with a file ID.\n     */\n    image: z.string().describe('Base64 encoded image data'),\n});\nexport const ToolOutputText = SharedBase.extend({\n    type: z.literal('text'),\n    /**\n     * The text output from the model.\n     */\n    text: z.string(),\n});\nexport const ToolOutputImage = SharedBase.extend({\n    type: z.literal('image'),\n    /**\n     * The image data. Could be base64 encoded image data or an object with a file ID.\n     */\n    data: z.string().describe('Base64 encoded image data'),\n    /**\n     * The media type of the image.\n     */\n    mediaType: z.string().describe('IANA media type of the image'),\n});\nexport const ComputerToolOutput = SharedBase.extend({\n    type: z.literal('computer_screenshot'),\n    /**\n     * A base64 encoded image data or a URL representing the screenshot.\n     */\n    data: z.string().describe('Base64 encoded image data or URL'),\n});\nexport const computerActions = z.discriminatedUnion('type', [\n    z.object({ type: z.literal('screenshot') }),\n    z.object({\n        type: z.literal('click'),\n        x: z.number(),\n        y: z.number(),\n        button: z.enum(['left', 'right', 'wheel', 'back', 'forward']),\n    }),\n    z.object({\n        type: z.literal('double_click'),\n        x: z.number(),\n        y: z.number(),\n    }),\n    z.object({\n        type: z.literal('scroll'),\n        x: z.number(),\n        y: z.number(),\n        scroll_x: z.number(),\n        scroll_y: z.number(),\n    }),\n    z.object({\n        type: z.literal('type'),\n        text: z.string(),\n    }),\n    z.object({ type: z.literal('wait') }),\n    z.object({\n        type: z.literal('move'),\n        x: z.number(),\n        y: z.number(),\n    }),\n    z.object({\n        type: z.literal('keypress'),\n        keys: z.array(z.string()),\n    }),\n    z.object({\n        type: z.literal('drag'),\n        path: z.array(z.object({ x: z.number(), y: z.number() })),\n    }),\n]);\n// ----------------------------\n// Message types\n// ----------------------------\nexport const AssistantContent = z.discriminatedUnion('type', [\n    OutputText,\n    Refusal,\n    InputText,\n    AudioContent,\n    ImageContent,\n]);\nconst MessageBase = ItemBase.extend({\n    /**\n     * Any item without a type is treated as a message\n     */\n    type: z.literal('message').optional(),\n});\nexport const AssistantMessageItem = MessageBase.extend({\n    /**\n     * Representing a message from the assistant (i.e. the model)\n     */\n    role: z.literal('assistant'),\n    /**\n     * The status of the message.\n     */\n    status: z.enum(['in_progress', 'completed', 'incomplete']),\n    /**\n     * The content of the message.\n     */\n    content: z.array(AssistantContent),\n});\nexport const UserContent = z.discriminatedUnion('type', [\n    InputText,\n    InputImage,\n    InputFile,\n    AudioContent,\n]);\nexport const UserMessageItem = MessageBase.extend({\n    // type: z.literal('message'),\n    /**\n     * Representing a message from the user\n     */\n    role: z.literal('user'),\n    /**\n     * The content of the message.\n     */\n    content: z.array(UserContent).or(z.string()),\n});\nconst SystemMessageItem = MessageBase.extend({\n    // type: z.literal('message'),\n    /**\n     * Representing a system message to the user\n     */\n    role: z.literal('system'),\n    /**\n     * The content of the message.\n     */\n    content: z.string(),\n});\nexport const MessageItem = z.discriminatedUnion('role', [\n    SystemMessageItem,\n    AssistantMessageItem,\n    UserMessageItem,\n]);\n// ----------------------------\n// Tool call types\n// ----------------------------\nexport const HostedToolCallItem = ItemBase.extend({\n    type: z.literal('hosted_tool_call'),\n    /**\n     * The name of the hosted tool. For example `web_search_call` or `file_search_call`\n     */\n    name: z.string().describe('The name of the hosted tool'),\n    /**\n     * The arguments of the hosted tool call.\n     */\n    arguments: z\n        .string()\n        .describe('The arguments of the hosted tool call')\n        .optional(),\n    /**\n     * The status of the tool call.\n     */\n    status: z.string().optional(),\n    /**\n     * The primary output of the tool call. Additional output might be in the `providerData` field.\n     */\n    output: z.string().optional(),\n});\nexport const FunctionCallItem = ItemBase.extend({\n    type: z.literal('function_call'),\n    /**\n     * The ID of the tool call. Required to match up the respective tool call result.\n     */\n    callId: z.string().describe('The ID of the tool call'),\n    /**\n     * The name of the function.\n     */\n    name: z.string().describe('The name of the function'),\n    /**\n     * The status of the function call.\n     */\n    status: z.enum(['in_progress', 'completed', 'incomplete']).optional(),\n    /**\n     * The arguments of the function call.\n     */\n    arguments: z.string(),\n});\nexport const FunctionCallResultItem = ItemBase.extend({\n    type: z.literal('function_call_result'),\n    /**\n     * The name of the tool that was called\n     */\n    name: z.string().describe('The name of the tool'),\n    /**\n     * The ID of the tool call. Required to match up the respective tool call result.\n     */\n    callId: z.string().describe('The ID of the tool call'),\n    /**\n     * The status of the tool call.\n     */\n    status: z.enum(['in_progress', 'completed', 'incomplete']),\n    /**\n     * The output of the tool call.\n     */\n    output: z.discriminatedUnion('type', [ToolOutputText, ToolOutputImage]),\n});\nexport const ComputerUseCallItem = ItemBase.extend({\n    type: z.literal('computer_call'),\n    /**\n     * The ID of the computer call. Required to match up the respective computer call result.\n     */\n    callId: z.string().describe('The ID of the computer call'),\n    /**\n     * The status of the computer call.\n     */\n    status: z.enum(['in_progress', 'completed', 'incomplete']),\n    /**\n     * The action to be performed by the computer.\n     */\n    action: computerActions,\n});\nexport const ComputerCallResultItem = ItemBase.extend({\n    type: z.literal('computer_call_result'),\n    /**\n     * The ID of the computer call. Required to match up the respective computer call result.\n     */\n    callId: z.string().describe('The ID of the computer call'),\n    /**\n     * The output of the computer call.\n     */\n    output: ComputerToolOutput,\n});\nexport const ToolCallItem = z.discriminatedUnion('type', [\n    ComputerUseCallItem,\n    FunctionCallItem,\n    HostedToolCallItem,\n]);\n// ----------------------------\n// Special item types\n// ----------------------------\nexport const ReasoningItem = SharedBase.extend({\n    id: z.string().optional(),\n    type: z.literal('reasoning'),\n    /**\n     * The user facing representation of the reasoning. Additional information might be in the `providerData` field.\n     */\n    content: z.array(InputText),\n});\n/**\n * This is a catch all for items that are not part of the protocol.\n *\n * For example, a model might return an item that is not part of the protocol using this type.\n *\n * In that case everything returned from the model should be passed in the `providerData` field.\n *\n * This enables new features to be added to be added by a model provider without breaking the protocol.\n */\nexport const UnknownItem = ItemBase.extend({\n    type: z.literal('unknown'),\n});\n// ----------------------------\n// Joined item types\n// ----------------------------\nexport const OutputModelItem = z.discriminatedUnion('type', [\n    AssistantMessageItem,\n    HostedToolCallItem,\n    FunctionCallItem,\n    ComputerUseCallItem,\n    ReasoningItem,\n    UnknownItem,\n]);\nexport const ModelItem = z.union([\n    UserMessageItem,\n    AssistantMessageItem,\n    SystemMessageItem,\n    HostedToolCallItem,\n    FunctionCallItem,\n    ComputerUseCallItem,\n    FunctionCallResultItem,\n    ComputerCallResultItem,\n    ReasoningItem,\n    UnknownItem,\n]);\n// ----------------------------\n// Meta data types\n// ----------------------------\nexport const UsageData = z.object({\n    requests: z.number().optional(),\n    inputTokens: z.number(),\n    outputTokens: z.number(),\n    totalTokens: z.number(),\n    inputTokensDetails: z.record(z.string(), z.number()).optional(),\n    outputTokensDetails: z.record(z.string(), z.number()).optional(),\n});\n// ----------------------------\n// Stream event types\n// ----------------------------\n/**\n * Event returned by the model when new output text is available to stream to the user.\n */\nexport const StreamEventTextStream = SharedBase.extend({\n    type: z.literal('output_text_delta'),\n    /**\n     * The delta text that was streamed by the modelto the user.\n     */\n    delta: z.string(),\n});\n/**\n * Event returned by the model when a new response is started.\n */\nexport const StreamEventResponseStarted = SharedBase.extend({\n    type: z.literal('response_started'),\n});\n/**\n * Event returned by the model when a response is completed.\n */\nexport const StreamEventResponseCompleted = SharedBase.extend({\n    type: z.literal('response_done'),\n    /**\n     * The response from the model.\n     */\n    response: SharedBase.extend({\n        /**\n         * The ID of the response.\n         */\n        id: z.string(),\n        /**\n         * The usage data for the response.\n         */\n        usage: UsageData,\n        /**\n         * The output from the model.\n         */\n        output: z.array(OutputModelItem),\n    }),\n});\n/**\n * Event returned for every item that gets streamed to the model. Used to expose the raw events\n * from the model.\n */\nexport const StreamEventGenericItem = SharedBase.extend({\n    type: z.literal('model'),\n    event: z.any().describe('The event from the model'),\n});\nexport const StreamEvent = z.discriminatedUnion('type', [\n    StreamEventTextStream,\n    StreamEventResponseCompleted,\n    StreamEventResponseStarted,\n    StreamEventGenericItem,\n]);\n//# sourceMappingURL=protocol.mjs.map","import { UsageData } from \"./types/protocol.mjs\";\n/**\n * Tracks token usage and request counts for an agent run.\n */\nexport class Usage {\n    /**\n     * The number of requests made to the LLM API.\n     */\n    requests;\n    /**\n     * The number of input tokens used across all requests.\n     */\n    inputTokens;\n    /**\n     * The number of output tokens used across all requests.\n     */\n    outputTokens;\n    /**\n     * The total number of tokens sent and received, across all requests.\n     */\n    totalTokens;\n    /**\n     * Details about the input tokens used across all requests.\n     */\n    inputTokensDetails = [];\n    /**\n     * Details about the output tokens used across all requests.\n     */\n    outputTokensDetails = [];\n    constructor(input) {\n        if (typeof input === 'undefined') {\n            this.requests = 0;\n            this.inputTokens = 0;\n            this.outputTokens = 0;\n            this.totalTokens = 0;\n            this.inputTokensDetails = [];\n            this.outputTokensDetails = [];\n        }\n        else {\n            this.requests = input?.requests ?? 1;\n            this.inputTokens = input?.inputTokens ?? 0;\n            this.outputTokens = input?.outputTokens ?? 0;\n            this.totalTokens = input?.totalTokens ?? 0;\n            this.inputTokensDetails = input?.inputTokensDetails\n                ? [input.inputTokensDetails]\n                : [];\n            this.outputTokensDetails = input?.outputTokensDetails\n                ? [input.outputTokensDetails]\n                : [];\n        }\n    }\n    add(newUsage) {\n        this.requests += newUsage.requests;\n        this.inputTokens += newUsage.inputTokens;\n        this.outputTokens += newUsage.outputTokens;\n        this.totalTokens += newUsage.totalTokens;\n        if (newUsage.inputTokensDetails) {\n            // The type does not allow undefined, but it could happen runtime\n            this.inputTokensDetails.push(...newUsage.inputTokensDetails);\n        }\n        if (newUsage.outputTokensDetails) {\n            // The type does not allow undefined, but it could happen runtime\n            this.outputTokensDetails.push(...newUsage.outputTokensDetails);\n        }\n    }\n}\nexport { UsageData };\n//# sourceMappingURL=usage.mjs.map","import logger from \"./logger.mjs\";\nimport { Usage } from \"./usage.mjs\";\n/**\n * A context object that is passed to the `Runner.run()` method.\n */\nexport class RunContext {\n    /**\n     * The context object passed by you to the `Runner.run()`\n     */\n    context;\n    /**\n     * The usage of the agent run so far. For streamed responses, the usage will be stale until the\n     * last chunk of the stream is processed.\n     */\n    usage;\n    /**\n     * A map of tool names to whether they have been approved.\n     */\n    #approvals;\n    constructor(context = {}) {\n        this.context = context;\n        this.usage = new Usage();\n        this.#approvals = new Map();\n    }\n    /**\n     * Rebuild the approvals map from a serialized state.\n     * @internal\n     *\n     * @param approvals - The approvals map to rebuild.\n     */\n    _rebuildApprovals(approvals) {\n        this.#approvals = new Map(Object.entries(approvals));\n    }\n    /**\n     * Check if a tool call has been approved.\n     *\n     * @param toolName - The name of the tool.\n     * @param callId - The call ID of the tool call.\n     * @returns `true` if the tool call has been approved, `false` if blocked and `undefined` if not yet approved or rejected.\n     */\n    isToolApproved({ toolName, callId }) {\n        const approvalEntry = this.#approvals.get(toolName);\n        if (approvalEntry?.approved === true && approvalEntry.rejected === true) {\n            logger.warn('Tool is permanently approved and rejected at the same time. Approval takes precedence');\n            return true;\n        }\n        if (approvalEntry?.approved === true) {\n            return true;\n        }\n        if (approvalEntry?.rejected === true) {\n            return false;\n        }\n        const individualCallApproval = Array.isArray(approvalEntry?.approved)\n            ? approvalEntry.approved.includes(callId)\n            : false;\n        const individualCallRejection = Array.isArray(approvalEntry?.rejected)\n            ? approvalEntry.rejected.includes(callId)\n            : false;\n        if (individualCallApproval && individualCallRejection) {\n            logger.warn(`Tool call ${callId} is both approved and rejected at the same time. Approval takes precedence`);\n            return true;\n        }\n        if (individualCallApproval) {\n            return true;\n        }\n        if (individualCallRejection) {\n            return false;\n        }\n        return undefined;\n    }\n    /**\n     * Approve a tool call.\n     *\n     * @param toolName - The name of the tool.\n     * @param callId - The call ID of the tool call.\n     */\n    approveTool(approvalItem, { alwaysApprove = false } = {}) {\n        const toolName = approvalItem.rawItem.name;\n        if (alwaysApprove) {\n            this.#approvals.set(toolName, {\n                approved: true,\n                rejected: [],\n            });\n            return;\n        }\n        const approvalEntry = this.#approvals.get(toolName) ?? {\n            approved: [],\n            rejected: [],\n        };\n        if (Array.isArray(approvalEntry.approved)) {\n            // function tool has call_id, hosted tool call has id\n            const callId = 'callId' in approvalItem.rawItem\n                ? approvalItem.rawItem.callId // function tools\n                : approvalItem.rawItem.id; // hosted tools\n            approvalEntry.approved.push(callId);\n        }\n        this.#approvals.set(toolName, approvalEntry);\n    }\n    /**\n     * Reject a tool call.\n     *\n     * @param approvalItem - The tool approval item to reject.\n     */\n    rejectTool(approvalItem, { alwaysReject = false } = {}) {\n        const toolName = approvalItem.rawItem.name;\n        if (alwaysReject) {\n            this.#approvals.set(toolName, {\n                approved: false,\n                rejected: true,\n            });\n            return;\n        }\n        const approvalEntry = this.#approvals.get(toolName) ?? {\n            approved: [],\n            rejected: [],\n        };\n        if (Array.isArray(approvalEntry.rejected)) {\n            // function tool has call_id, hosted tool call has id\n            const callId = 'callId' in approvalItem.rawItem\n                ? approvalItem.rawItem.callId // function tools\n                : approvalItem.rawItem.id; // hosted tools\n            approvalEntry.rejected.push(callId);\n        }\n        this.#approvals.set(toolName, approvalEntry);\n    }\n    toJSON() {\n        return {\n            context: this.context,\n            usage: this.usage,\n            approvals: Object.fromEntries(this.#approvals.entries()),\n        };\n    }\n}\n//# sourceMappingURL=runContext.mjs.map","import { ReadableStream as _ReadableStream, TransformStream, Readable, } from '@openai/agents-core/_shims';\nimport { getTurnInput } from \"./run.mjs\";\nimport logger from \"./logger.mjs\";\nimport { StreamEventTextStream } from \"./types/protocol.mjs\";\nclass RunResultBase {\n    state;\n    constructor(state) {\n        this.state = state;\n    }\n    /**\n     * The history of the agent run. This includes the input items and the new items generated during\n     * the agent run.\n     *\n     * This can be used as inputs for the next agent run.\n     */\n    get history() {\n        return getTurnInput(this.input, this.newItems);\n    }\n    /**\n     * The new items generated during the agent run. These include things like new messages, tool\n     * calls and their outputs, etc.\n     *\n     * It does not include information about the agents and instead represents the model data.\n     *\n     * For the output including the agents, use the `newItems` property.\n     */\n    get output() {\n        return getTurnInput([], this.newItems);\n    }\n    /**\n     * A copy of the original input items.\n     */\n    get input() {\n        return this.state._originalInput;\n    }\n    /**\n     * The run items generated during the agent run. This associates the model data with the agents.\n     *\n     * For the model data that can be used as inputs for the next agent run, use the `output` property.\n     */\n    get newItems() {\n        return this.state._generatedItems;\n    }\n    /**\n     * The raw LLM responses generated by the model during the agent run.\n     */\n    get rawResponses() {\n        return this.state._modelResponses;\n    }\n    /**\n     * The last response ID generated by the model during the agent run.\n     */\n    get lastResponseId() {\n        const responses = this.rawResponses;\n        return responses && responses.length > 0\n            ? responses[responses.length - 1].responseId\n            : undefined;\n    }\n    /**\n     * The last agent that was run\n     */\n    get lastAgent() {\n        return this.state._currentAgent;\n    }\n    /**\n     * Guardrail results for the input messages.\n     */\n    get inputGuardrailResults() {\n        return this.state._inputGuardrailResults;\n    }\n    /**\n     * Guardrail results for the final output of the agent.\n     */\n    get outputGuardrailResults() {\n        return this.state._outputGuardrailResults;\n    }\n    /**\n     * Any interruptions that occurred during the agent run for example for tool approvals.\n     */\n    get interruptions() {\n        if (this.state._currentStep?.type === 'next_step_interruption') {\n            return this.state._currentStep.data.interruptions;\n        }\n        return [];\n    }\n    /**\n     * The final output of the agent. If the output type was set to anything other than `text`,\n     * this will be parsed either as JSON or using the Zod schema you provided.\n     */\n    get finalOutput() {\n        if (this.state._currentStep?.type === 'next_step_final_output') {\n            return this.state._currentAgent.processFinalOutput(this.state._currentStep.output);\n        }\n        logger.warn('Accessed finalOutput before agent run is completed.');\n        return undefined;\n    }\n}\n/**\n * The result of an agent run.\n */\nexport class RunResult extends RunResultBase {\n    constructor(state) {\n        super(state);\n    }\n}\n/**\n * The result of an agent run in streaming mode.\n */\nexport class StreamedRunResult extends RunResultBase {\n    /**\n     * The current agent that is running\n     */\n    get currentAgent() {\n        return this.lastAgent;\n    }\n    /**\n     * The current turn number\n     */\n    currentTurn = 0;\n    /**\n     * The maximum number of turns that can be run\n     */\n    maxTurns;\n    #error = null;\n    #signal;\n    #readableController;\n    #readableStream;\n    #completedPromise;\n    #completedPromiseResolve;\n    #completedPromiseReject;\n    #cancelled = false;\n    constructor(result = {}) {\n        super(result.state);\n        this.#signal = result.signal;\n        if (this.#signal) {\n            this.#signal.addEventListener('abort', async () => {\n                await this.#readableStream.cancel();\n            });\n        }\n        this.#readableStream = new _ReadableStream({\n            start: (controller) => {\n                this.#readableController = controller;\n            },\n            cancel: () => {\n                this.#cancelled = true;\n            },\n        });\n        this.#completedPromise = new Promise((resolve, reject) => {\n            this.#completedPromiseResolve = resolve;\n            this.#completedPromiseReject = reject;\n        });\n    }\n    /**\n     * @internal\n     * Adds an item to the stream of output items\n     */\n    _addItem(item) {\n        if (!this.cancelled) {\n            this.#readableController?.enqueue(item);\n        }\n    }\n    /**\n     * @internal\n     * Indicates that the stream has been completed\n     */\n    _done() {\n        if (!this.cancelled && this.#readableController) {\n            this.#readableController.close();\n            this.#readableController = undefined;\n            this.#completedPromiseResolve?.();\n        }\n    }\n    /**\n     * @internal\n     * Handles an error in the stream loop.\n     */\n    _raiseError(err) {\n        if (!this.cancelled && this.#readableController) {\n            this.#readableController.error(err);\n            this.#readableController = undefined;\n        }\n        this.#error = err;\n        this.#completedPromiseReject?.(err);\n        this.#completedPromise.catch((e) => {\n            logger.debug(`Resulted in an error: ${e}`);\n        });\n    }\n    /**\n     * Returns true if the stream has been cancelled.\n     */\n    get cancelled() {\n        return this.#cancelled;\n    }\n    /**\n     * Returns the underlying readable stream.\n     * @returns A readable stream of the agent run.\n     */\n    toStream() {\n        return this.#readableStream;\n    }\n    /**\n     * Await this promise to ensure that the stream has been completed if you are not consuming the\n     * stream directly.\n     */\n    get completed() {\n        return this.#completedPromise;\n    }\n    /**\n     * Error thrown during the run, if any.\n     */\n    get error() {\n        return this.#error;\n    }\n    toTextStream(options = {}) {\n        const stream = this.#readableStream.pipeThrough(new TransformStream({\n            transform(event, controller) {\n                if (event.type === 'raw_model_stream_event' &&\n                    event.data.type === 'output_text_delta') {\n                    const item = StreamEventTextStream.parse(event.data);\n                    controller.enqueue(item.delta);\n                }\n            },\n        }));\n        if (options.compatibleWithNodeStreams) {\n            return Readable.fromWeb(stream);\n        }\n        return stream;\n    }\n    [Symbol.asyncIterator]() {\n        return this.#readableStream[Symbol.asyncIterator]();\n    }\n}\n//# sourceMappingURL=result.mjs.map","export function serializeTool(tool) {\n    if (tool.type === 'function') {\n        return {\n            type: 'function',\n            name: tool.name,\n            description: tool.description,\n            parameters: tool.parameters,\n            strict: tool.strict,\n        };\n    }\n    if (tool.type === 'computer') {\n        return {\n            type: 'computer',\n            name: tool.name,\n            environment: tool.computer.environment,\n            dimensions: tool.computer.dimensions,\n        };\n    }\n    return {\n        type: 'hosted_tool',\n        name: tool.name,\n        providerData: tool.providerData,\n    };\n}\nexport function serializeHandoff(h) {\n    return {\n        toolName: h.toolName,\n        toolDescription: h.toolDescription,\n        inputJsonSchema: h.inputJsonSchema,\n        strictJsonSchema: h.strictJsonSchema,\n    };\n}\n//# sourceMappingURL=serialize.mjs.map","import { toSmartString } from \"./utils/smartString.mjs\";\nexport class RunItemBase {\n    type = 'base_item';\n    rawItem;\n    toJSON() {\n        return {\n            type: this.type,\n            rawItem: this.rawItem,\n        };\n    }\n}\nexport class RunMessageOutputItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'message_output_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n    get content() {\n        let content = '';\n        for (const part of this.rawItem.content) {\n            if (part.type === 'output_text') {\n                content += part.text;\n            }\n        }\n        return content;\n    }\n}\nexport class RunToolCallItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'tool_call_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nexport class RunToolCallOutputItem extends RunItemBase {\n    rawItem;\n    agent;\n    output;\n    type = 'tool_call_output_item';\n    constructor(rawItem, agent, output) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n        this.output = output;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n            output: toSmartString(this.output),\n        };\n    }\n}\nexport class RunReasoningItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'reasoning_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nexport class RunHandoffCallItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'handoff_call_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nexport class RunHandoffOutputItem extends RunItemBase {\n    rawItem;\n    sourceAgent;\n    targetAgent;\n    type = 'handoff_output_item';\n    constructor(rawItem, sourceAgent, targetAgent) {\n        super();\n        this.rawItem = rawItem;\n        this.sourceAgent = sourceAgent;\n        this.targetAgent = targetAgent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            sourceAgent: this.sourceAgent.toJSON(),\n            targetAgent: this.targetAgent.toJSON(),\n        };\n    }\n}\nexport class RunToolApprovalItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'tool_approval_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\n/**\n * Extract all text output from a list of run items by concatenating the content of all\n * message output items.\n *\n * @param items - The list of run items to extract text from.\n * @returns A string of all the text output from the run items.\n */\nexport function extractAllTextOutput(items) {\n    return items\n        .filter((item) => item.type === 'message_output_item')\n        .map((item) => item.content)\n        .join('');\n}\n//# sourceMappingURL=items.mjs.map","/**\n * Get the last text from the output message.\n * @param outputMessage\n * @returns\n */\nexport function getLastTextFromOutputMessage(outputMessage) {\n    if (outputMessage.type !== 'message') {\n        return undefined;\n    }\n    if (outputMessage.role !== 'assistant') {\n        return undefined;\n    }\n    const lastItem = outputMessage.content[outputMessage.content.length - 1];\n    if (lastItem.type !== 'output_text') {\n        return undefined;\n    }\n    return lastItem.text;\n}\n/**\n * Get the last text from the output message.\n * @param output\n * @returns\n */\nexport function getOutputText(output) {\n    if (output.output.length === 0) {\n        return '';\n    }\n    return (getLastTextFromOutputMessage(output.output[output.output.length - 1]) || '');\n}\n//# sourceMappingURL=messages.mjs.map","/**\n * Streaming event from the LLM. These are `raw` events, i.e. they are directly passed through from\n * the LLM.\n */\nexport class RunRawModelStreamEvent {\n    data;\n    /**\n     * The type of the event.\n     */\n    type = 'raw_model_stream_event';\n    /**\n     * @param data The raw responses stream events from the LLM.\n     */\n    constructor(data) {\n        this.data = data;\n    }\n}\n/**\n * Streaming events that wrap a `RunItem`. As the agent processes the LLM response, it will generate\n * these events from new messages, tool calls, tool outputs, handoffs, etc.\n */\nexport class RunItemStreamEvent {\n    name;\n    item;\n    type = 'run_item_stream_event';\n    /**\n     * @param name The name of the event.\n     * @param item The item that was created.\n     */\n    constructor(name, item) {\n        this.name = name;\n        this.item = item;\n    }\n}\n/**\n * Event that notifies that there is a new agent running.\n */\nexport class RunAgentUpdatedStreamEvent {\n    agent;\n    type = 'agent_updated_stream_event';\n    /**\n     * @param agent The new agent\n     */\n    constructor(agent) {\n        this.agent = agent;\n    }\n}\n//# sourceMappingURL=events.mjs.map","import { ModelBehaviorError, ToolCallError, UserError } from \"./errors.mjs\";\nimport { getTransferMessage } from \"./handoff.mjs\";\nimport { RunHandoffCallItem, RunHandoffOutputItem, RunMessageOutputItem, RunReasoningItem, RunToolApprovalItem, RunToolCallItem, RunToolCallOutputItem, } from \"./items.mjs\";\nimport logger from \"./logger.mjs\";\nimport { getLastTextFromOutputMessage } from \"./utils/messages.mjs\";\nimport { withFunctionSpan, withHandoffSpan } from \"./tracing/createSpans.mjs\";\nimport { getSchemaAndParserFromInputType } from \"./utils/tools.mjs\";\nimport { safeExecute } from \"./utils/safeExecute.mjs\";\nimport { addErrorToCurrentSpan } from \"./tracing/context.mjs\";\nimport { RunItemStreamEvent } from \"./events.mjs\";\nimport { z } from '@openai/zod/v3';\nimport { toSmartString } from \"./utils/smartString.mjs\";\nimport { isZodObject } from \"./utils/index.mjs\";\n/**\n * @internal\n */\nexport function processModelResponse(modelResponse, agent, tools, handoffs) {\n    const items = [];\n    const runHandoffs = [];\n    const runFunctions = [];\n    const runComputerActions = [];\n    const runMCPApprovalRequests = [];\n    const toolsUsed = [];\n    const handoffMap = new Map(handoffs.map((h) => [h.toolName, h]));\n    const functionMap = new Map(tools.filter((t) => t.type === 'function').map((t) => [t.name, t]));\n    const computerTool = tools.find((t) => t.type === 'computer');\n    const mcpToolMap = new Map(tools\n        .filter((t) => t.type === 'hosted_tool' && t.providerData?.type === 'mcp')\n        .map((t) => t)\n        .map((t) => [t.providerData.server_label, t]));\n    for (const output of modelResponse.output) {\n        if (output.type === 'message') {\n            if (output.role === 'assistant') {\n                items.push(new RunMessageOutputItem(output, agent));\n            }\n        }\n        else if (output.type === 'hosted_tool_call') {\n            items.push(new RunToolCallItem(output, agent));\n            const toolName = output.name;\n            toolsUsed.push(toolName);\n            if (output.providerData?.type === 'mcp_approval_request' ||\n                output.name === 'mcp_approval_request') {\n                // Hosted remote MCP server's approval process\n                const providerData = output.providerData;\n                const mcpServerLabel = providerData.server_label;\n                const mcpServerTool = mcpToolMap.get(mcpServerLabel);\n                if (typeof mcpServerTool === 'undefined') {\n                    const message = `MCP server (${mcpServerLabel}) not found in Agent (${agent.name})`;\n                    addErrorToCurrentSpan({\n                        message,\n                        data: { mcp_server_label: mcpServerLabel },\n                    });\n                    throw new ModelBehaviorError(message);\n                }\n                // Do this approval later:\n                // We support both onApproval callback (like the Python SDK does) and HITL patterns.\n                const approvalItem = new RunToolApprovalItem({\n                    type: 'hosted_tool_call',\n                    // We must use this name to align with the name sent from the servers\n                    name: providerData.name,\n                    id: providerData.id,\n                    status: 'in_progress',\n                    providerData,\n                }, agent);\n                runMCPApprovalRequests.push({\n                    requestItem: approvalItem,\n                    mcpTool: mcpServerTool,\n                });\n                if (!mcpServerTool.providerData.on_approval) {\n                    // When onApproval function exists, it confirms the approval right after this.\n                    // Thus, this approval item must be appended only for the next turn interruption patterns.\n                    items.push(approvalItem);\n                }\n            }\n        }\n        else if (output.type === 'reasoning') {\n            items.push(new RunReasoningItem(output, agent));\n        }\n        else if (output.type === 'computer_call') {\n            items.push(new RunToolCallItem(output, agent));\n            toolsUsed.push('computer_use');\n            if (!computerTool) {\n                addErrorToCurrentSpan({\n                    message: 'Model produced computer action without a computer tool.',\n                    data: {\n                        agent_name: agent.name,\n                    },\n                });\n                throw new ModelBehaviorError('Model produced computer action without a computer tool.');\n            }\n            runComputerActions.push({\n                toolCall: output,\n                computer: computerTool,\n            });\n        }\n        if (output.type !== 'function_call') {\n            continue;\n        }\n        toolsUsed.push(output.name);\n        const handoff = handoffMap.get(output.name);\n        if (handoff) {\n            items.push(new RunHandoffCallItem(output, agent));\n            runHandoffs.push({\n                toolCall: output,\n                handoff: handoff,\n            });\n        }\n        else {\n            const functionTool = functionMap.get(output.name);\n            if (!functionTool) {\n                addErrorToCurrentSpan({\n                    message: `Tool ${output.name} not found in agent ${agent.name}.`,\n                    data: {\n                        tool_name: output.name,\n                        agent_name: agent.name,\n                    },\n                });\n                throw new ModelBehaviorError(`Tool ${output.name} not found in agent ${agent.name}.`);\n            }\n            items.push(new RunToolCallItem(output, agent));\n            runFunctions.push({\n                toolCall: output,\n                tool: functionTool,\n            });\n        }\n    }\n    return {\n        newItems: items,\n        handoffs: runHandoffs,\n        functions: runFunctions,\n        computerActions: runComputerActions,\n        mcpApprovalRequests: runMCPApprovalRequests,\n        toolsUsed: toolsUsed,\n        hasToolsOrApprovalsToRun() {\n            return (runHandoffs.length > 0 ||\n                runFunctions.length > 0 ||\n                runMCPApprovalRequests.length > 0 ||\n                runComputerActions.length > 0);\n        },\n    };\n}\nexport const nextStepSchema = z.discriminatedUnion('type', [\n    z.object({\n        type: z.literal('next_step_handoff'),\n        newAgent: z.any(),\n    }),\n    z.object({\n        type: z.literal('next_step_final_output'),\n        output: z.string(),\n    }),\n    z.object({\n        type: z.literal('next_step_run_again'),\n    }),\n    z.object({\n        type: z.literal('next_step_interruption'),\n        data: z.record(z.string(), z.any()),\n    }),\n]);\nclass SingleStepResult {\n    originalInput;\n    modelResponse;\n    preStepItems;\n    newStepItems;\n    nextStep;\n    constructor(\n    /**\n     * The input items i.e. the items before run() was called. May be muted by handoff input filters\n     */\n    originalInput, \n    /**\n     * The model response for the current step\n     */\n    modelResponse, \n    /**\n     * The items before the current step was executed\n     */\n    preStepItems, \n    /**\n     * The items after the current step was executed\n     */\n    newStepItems, \n    /**\n     * The next step to execute\n     */\n    nextStep) {\n        this.originalInput = originalInput;\n        this.modelResponse = modelResponse;\n        this.preStepItems = preStepItems;\n        this.newStepItems = newStepItems;\n        this.nextStep = nextStep;\n    }\n    /**\n     * The items generated during the agent run (i.e. everything generated after originalInput)\n     */\n    get generatedItems() {\n        return this.preStepItems.concat(this.newStepItems);\n    }\n}\n/**\n * @internal\n */\nexport function maybeResetToolChoice(agent, toolUseTracker, modelSettings) {\n    if (agent.resetToolChoice && toolUseTracker.hasUsedTools(agent)) {\n        return { ...modelSettings, toolChoice: undefined };\n    }\n    return modelSettings;\n}\n/**\n * @internal\n */\nexport async function executeInterruptedToolsAndSideEffects(agent, originalInput, originalPreStepItems, newResponse, processedResponse, runner, state) {\n    // call_ids for function tools\n    const functionCallIds = originalPreStepItems\n        .filter((item) => item instanceof RunToolApprovalItem &&\n        'callId' in item.rawItem &&\n        item.rawItem.type === 'function_call')\n        .map((item) => item.rawItem.callId);\n    // Run function tools that require approval after they get their approval results\n    const functionToolRuns = processedResponse.functions.filter((run) => {\n        return functionCallIds.includes(run.toolCall.callId);\n    });\n    const functionResults = await executeFunctionToolCalls(agent, functionToolRuns, runner, state);\n    // Create the initial set of the output items\n    const newItems = functionResults.map((r) => r.runItem);\n    // Run MCP tools that require approval after they get their approval results\n    const mcpApprovalRuns = processedResponse.mcpApprovalRequests.filter((run) => {\n        return (run.requestItem.type === 'tool_approval_item' &&\n            run.requestItem.rawItem.type === 'hosted_tool_call' &&\n            run.requestItem.rawItem.providerData?.type === 'mcp_approval_request');\n    });\n    for (const run of mcpApprovalRuns) {\n        // the approval_request_id \"mcpr_123...\"\n        const approvalRequestId = run.requestItem.rawItem.id;\n        const approved = state._context.isToolApproved({\n            // Since this item name must be the same with the one sent from Responses API server\n            toolName: run.requestItem.rawItem.name,\n            callId: approvalRequestId,\n        });\n        if (typeof approved !== 'undefined') {\n            const providerData = {\n                approve: approved,\n                approval_request_id: approvalRequestId,\n                reason: undefined,\n            };\n            // Tell Responses API server the approval result in the next turn\n            newItems.push(new RunToolCallItem({\n                type: 'hosted_tool_call',\n                name: 'mcp_approval_response',\n                providerData,\n            }, agent));\n        }\n    }\n    const checkToolOutput = await checkForFinalOutputFromTools(agent, functionResults, state);\n    // Exclude the tool approval items, which should not be sent to Responses API,\n    // from the SingleStepResult's preStepItems\n    const preStepItems = originalPreStepItems.filter((item) => {\n        return !(item instanceof RunToolApprovalItem);\n    });\n    if (checkToolOutput.isFinalOutput) {\n        runner.emit('agent_end', state._context, agent, checkToolOutput.finalOutput);\n        agent.emit('agent_end', state._context, checkToolOutput.finalOutput);\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: checkToolOutput.finalOutput,\n        });\n    }\n    else if (checkToolOutput.isInterrupted) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_interruption',\n            data: {\n                interruptions: checkToolOutput.interruptions,\n            },\n        });\n    }\n    // we only ran new tools and side effects. We need to run the rest of the agent\n    return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n}\n/**\n * @internal\n */\nexport async function executeToolsAndSideEffects(agent, originalInput, originalPreStepItems, newResponse, processedResponse, runner, state) {\n    const preStepItems = originalPreStepItems;\n    let newItems = processedResponse.newItems;\n    const [functionResults, computerResults] = await Promise.all([\n        executeFunctionToolCalls(agent, processedResponse.functions, runner, state),\n        executeComputerActions(agent, processedResponse.computerActions, runner, state._context),\n    ]);\n    newItems = newItems.concat(functionResults.map((r) => r.runItem));\n    newItems = newItems.concat(computerResults);\n    // run hosted MCP approval requests\n    if (processedResponse.mcpApprovalRequests.length > 0) {\n        for (const approvalRequest of processedResponse.mcpApprovalRequests) {\n            const toolData = approvalRequest.mcpTool\n                .providerData;\n            const requestData = approvalRequest.requestItem.rawItem\n                .providerData;\n            if (toolData.on_approval) {\n                // synchronously handle the approval process here\n                const approvalResult = await toolData.on_approval(state._context, approvalRequest.requestItem);\n                const approvalResponseData = {\n                    approve: approvalResult.approve,\n                    approval_request_id: requestData.id,\n                    reason: approvalResult.reason,\n                };\n                newItems.push(new RunToolCallItem({\n                    type: 'hosted_tool_call',\n                    name: 'mcp_approval_response',\n                    providerData: approvalResponseData,\n                }, agent));\n            }\n            else {\n                // receive a user's approval on the next turn\n                newItems.push(approvalRequest.requestItem);\n                const approvalItem = {\n                    type: 'hosted_mcp_tool_approval',\n                    tool: approvalRequest.mcpTool,\n                    runItem: new RunToolApprovalItem({\n                        type: 'hosted_tool_call',\n                        name: requestData.name,\n                        id: requestData.id,\n                        arguments: requestData.arguments,\n                        status: 'in_progress',\n                        providerData: requestData,\n                    }, agent),\n                };\n                functionResults.push(approvalItem);\n                // newItems.push(approvalItem.runItem);\n            }\n        }\n    }\n    // process handoffs\n    if (processedResponse.handoffs.length > 0) {\n        return await executeHandoffCalls(agent, originalInput, preStepItems, newItems, newResponse, processedResponse.handoffs, runner, state._context);\n    }\n    const checkToolOutput = await checkForFinalOutputFromTools(agent, functionResults, state);\n    if (checkToolOutput.isFinalOutput) {\n        runner.emit('agent_end', state._context, agent, checkToolOutput.finalOutput);\n        agent.emit('agent_end', state._context, checkToolOutput.finalOutput);\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: checkToolOutput.finalOutput,\n        });\n    }\n    else if (checkToolOutput.isInterrupted) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_interruption',\n            data: {\n                interruptions: checkToolOutput.interruptions,\n            },\n        });\n    }\n    // check if the agent produced any messages\n    const messageItems = newItems.filter((item) => item instanceof RunMessageOutputItem);\n    // we will use the last content output as the final output\n    const potentialFinalOutput = messageItems.length > 0\n        ? getLastTextFromOutputMessage(messageItems[messageItems.length - 1].rawItem)\n        : undefined;\n    // if there is no output we just run again\n    if (!potentialFinalOutput) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n    }\n    if (agent.outputType === 'text' &&\n        !processedResponse.hasToolsOrApprovalsToRun()) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: potentialFinalOutput,\n        });\n    }\n    else if (agent.outputType !== 'text' && potentialFinalOutput) {\n        // Structured output schema => always leads to a final output if we have text\n        const { parser } = getSchemaAndParserFromInputType(agent.outputType, 'final_output');\n        const [error] = await safeExecute(() => parser(potentialFinalOutput));\n        if (error) {\n            addErrorToCurrentSpan({\n                message: 'Invalid output type',\n                data: {\n                    error: String(error),\n                },\n            });\n            throw new ModelBehaviorError('Invalid output type');\n        }\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_final_output', output: potentialFinalOutput });\n    }\n    return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n}\n/**\n * @internal\n */\nexport function getToolCallOutputItem(toolCall, output) {\n    return {\n        type: 'function_call_result',\n        name: toolCall.name,\n        callId: toolCall.callId,\n        status: 'completed',\n        output: {\n            type: 'text',\n            text: toSmartString(output),\n        },\n    };\n}\n/**\n * @internal\n */\nexport async function executeFunctionToolCalls(agent, toolRuns, runner, state) {\n    async function runSingleTool(toolRun) {\n        let parsedArgs = toolRun.toolCall.arguments;\n        if (toolRun.tool.parameters) {\n            if (isZodObject(toolRun.tool.parameters)) {\n                parsedArgs = toolRun.tool.parameters.parse(parsedArgs);\n            }\n            else {\n                parsedArgs = JSON.parse(parsedArgs);\n            }\n        }\n        const needsApproval = await toolRun.tool.needsApproval(state._context, parsedArgs, toolRun.toolCall.callId);\n        if (needsApproval) {\n            const approval = state._context.isToolApproved({\n                toolName: toolRun.tool.name,\n                callId: toolRun.toolCall.callId,\n            });\n            if (approval === false) {\n                // rejected\n                return withFunctionSpan(async (span) => {\n                    const response = 'Tool execution was not approved.';\n                    span.setError({\n                        message: response,\n                        data: {\n                            tool_name: toolRun.tool.name,\n                            error: `Tool execution for ${toolRun.toolCall.callId} was manually rejected by user.`,\n                        },\n                    });\n                    span.spanData.output = response;\n                    return {\n                        type: 'function_output',\n                        tool: toolRun.tool,\n                        output: response,\n                        runItem: new RunToolCallOutputItem(getToolCallOutputItem(toolRun.toolCall, response), agent, response),\n                    };\n                }, {\n                    data: {\n                        name: toolRun.tool.name,\n                    },\n                });\n            }\n            if (approval !== true) {\n                // this approval process needs to be done in the next turn\n                return {\n                    type: 'function_approval',\n                    tool: toolRun.tool,\n                    runItem: new RunToolApprovalItem(toolRun.toolCall, agent),\n                };\n            }\n        }\n        return withFunctionSpan(async (span) => {\n            if (runner.config.traceIncludeSensitiveData) {\n                span.spanData.input = toolRun.toolCall.arguments;\n            }\n            try {\n                runner.emit('agent_tool_start', state._context, agent, toolRun.tool, {\n                    toolCall: toolRun.toolCall,\n                });\n                agent.emit('agent_tool_start', state._context, toolRun.tool, {\n                    toolCall: toolRun.toolCall,\n                });\n                const result = await toolRun.tool.invoke(state._context, toolRun.toolCall.arguments);\n                // Use string data for tracing and event emitter\n                const stringResult = toSmartString(result);\n                runner.emit('agent_tool_end', state._context, agent, toolRun.tool, stringResult, { toolCall: toolRun.toolCall });\n                agent.emit('agent_tool_end', state._context, toolRun.tool, stringResult, { toolCall: toolRun.toolCall });\n                if (runner.config.traceIncludeSensitiveData) {\n                    span.spanData.output = stringResult;\n                }\n                return {\n                    type: 'function_output',\n                    tool: toolRun.tool,\n                    output: result,\n                    runItem: new RunToolCallOutputItem(getToolCallOutputItem(toolRun.toolCall, result), agent, result),\n                };\n            }\n            catch (error) {\n                span.setError({\n                    message: 'Error running tool',\n                    data: {\n                        tool_name: toolRun.tool.name,\n                        error: String(error),\n                    },\n                });\n                throw error;\n            }\n        }, {\n            data: {\n                name: toolRun.tool.name,\n            },\n        });\n    }\n    try {\n        const results = await Promise.all(toolRuns.map(runSingleTool));\n        return results;\n    }\n    catch (e) {\n        throw new ToolCallError(`Failed to run function tools: ${e}`, e, state);\n    }\n}\n/**\n * @internal\n */\n// Internal helper: dispatch a computer action and return a screenshot (sync/async)\nasync function _runComputerActionAndScreenshot(computer, toolCall) {\n    const action = toolCall.action;\n    let screenshot;\n    // Dispatch based on action type string (assume action.type exists)\n    switch (action.type) {\n        case 'click':\n            await computer.click(action.x, action.y, action.button);\n            break;\n        case 'double_click':\n            await computer.doubleClick(action.x, action.y);\n            break;\n        case 'drag':\n            await computer.drag(action.path.map((p) => [p.x, p.y]));\n            break;\n        case 'keypress':\n            await computer.keypress(action.keys);\n            break;\n        case 'move':\n            await computer.move(action.x, action.y);\n            break;\n        case 'screenshot':\n            screenshot = await computer.screenshot();\n            break;\n        case 'scroll':\n            await computer.scroll(action.x, action.y, action.scroll_x, action.scroll_y);\n            break;\n        case 'type':\n            await computer.type(action.text);\n            break;\n        case 'wait':\n            await computer.wait();\n            break;\n        default:\n            action; // ensures that we handle every action we know of\n            // Unknown action, just take screenshot\n            break;\n    }\n    if (typeof screenshot !== 'undefined') {\n        return screenshot;\n    }\n    // Always return screenshot as base64 string\n    if (typeof computer.screenshot === 'function') {\n        screenshot = await computer.screenshot();\n        if (typeof screenshot !== 'undefined') {\n            return screenshot;\n        }\n    }\n    throw new Error('Computer does not implement screenshot()');\n}\n/**\n * @internal\n */\nexport async function executeComputerActions(agent, actions, runner, runContext, customLogger = undefined) {\n    const _logger = customLogger ?? logger;\n    const results = [];\n    for (const action of actions) {\n        const computer = action.computer.computer;\n        const toolCall = action.toolCall;\n        // Hooks: on_tool_start (global + agent)\n        runner.emit('agent_tool_start', runContext, agent, action.computer, {\n            toolCall,\n        });\n        if (typeof agent.emit === 'function') {\n            agent.emit('agent_tool_start', runContext, action.computer, { toolCall });\n        }\n        // Run the action and get screenshot\n        let output;\n        try {\n            output = await _runComputerActionAndScreenshot(computer, toolCall);\n        }\n        catch (err) {\n            _logger.error('Failed to execute computer action:', err);\n            output = '';\n        }\n        // Hooks: on_tool_end (global + agent)\n        runner.emit('agent_tool_end', runContext, agent, action.computer, output, {\n            toolCall,\n        });\n        if (typeof agent.emit === 'function') {\n            agent.emit('agent_tool_end', runContext, action.computer, output, {\n                toolCall,\n            });\n        }\n        // Always return a screenshot as a base64 data URL\n        const imageUrl = output ? `data:image/png;base64,${output}` : '';\n        const rawItem = {\n            type: 'computer_call_result',\n            callId: toolCall.callId,\n            output: { type: 'computer_screenshot', data: imageUrl },\n        };\n        results.push(new RunToolCallOutputItem(rawItem, agent, imageUrl));\n    }\n    return results;\n}\n/**\n * @internal\n */\nexport async function executeHandoffCalls(agent, originalInput, preStepItems, newStepItems, newResponse, runHandoffs, runner, runContext) {\n    newStepItems = [...newStepItems];\n    if (runHandoffs.length === 0) {\n        logger.warn('Incorrectly called executeHandoffCalls with no handoffs. This should not happen. Moving on.');\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newStepItems, { type: 'next_step_run_again' });\n    }\n    if (runHandoffs.length > 1) {\n        // multiple handoffs. Ignoring all but the first one by adding reject responses for those\n        const outputMessage = 'Multiple handoffs detected, ignoring this one.';\n        for (let i = 1; i < runHandoffs.length; i++) {\n            newStepItems.push(new RunToolCallOutputItem(getToolCallOutputItem(runHandoffs[i].toolCall, outputMessage), agent, outputMessage));\n        }\n    }\n    const actualHandoff = runHandoffs[0];\n    return withHandoffSpan(async (handoffSpan) => {\n        const handoff = actualHandoff.handoff;\n        const newAgent = await handoff.onInvokeHandoff(runContext, actualHandoff.toolCall.arguments);\n        handoffSpan.spanData.to_agent = newAgent.name;\n        if (runHandoffs.length > 1) {\n            const requestedAgents = runHandoffs.map((h) => h.handoff.agentName);\n            handoffSpan.setError({\n                message: 'Multiple handoffs requested',\n                data: {\n                    requested_agents: requestedAgents,\n                },\n            });\n        }\n        newStepItems.push(new RunHandoffOutputItem(getToolCallOutputItem(actualHandoff.toolCall, getTransferMessage(newAgent)), agent, newAgent));\n        runner.emit('agent_handoff', runContext, agent, newAgent);\n        agent.emit('agent_handoff', runContext, newAgent);\n        const inputFilter = handoff.inputFilter ?? runner.config.handoffInputFilter;\n        if (inputFilter) {\n            logger.debug('Filtering inputs for handoff');\n            if (typeof inputFilter !== 'function') {\n                handoffSpan.setError({\n                    message: 'Invalid input filter',\n                    data: {\n                        details: 'not callable',\n                    },\n                });\n            }\n            const handoffInputData = {\n                inputHistory: Array.isArray(originalInput)\n                    ? [...originalInput]\n                    : originalInput,\n                preHandoffItems: [...preStepItems],\n                newItems: [...newStepItems],\n            };\n            const filtered = inputFilter(handoffInputData);\n            originalInput = filtered.inputHistory;\n            preStepItems = filtered.preHandoffItems;\n            newStepItems = filtered.newItems;\n        }\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newStepItems, { type: 'next_step_handoff', newAgent });\n    }, {\n        data: {\n            from_agent: agent.name,\n        },\n    });\n}\nconst NOT_FINAL_OUTPUT = {\n    isFinalOutput: false,\n    isInterrupted: undefined,\n};\n/**\n * @internal\n */\nexport async function checkForFinalOutputFromTools(agent, toolResults, state) {\n    if (toolResults.length === 0) {\n        return NOT_FINAL_OUTPUT;\n    }\n    const interruptions = toolResults\n        .filter((r) => r.runItem instanceof RunToolApprovalItem)\n        .map((r) => r.runItem);\n    if (interruptions.length > 0) {\n        return {\n            isFinalOutput: false,\n            isInterrupted: true,\n            interruptions,\n        };\n    }\n    if (agent.toolUseBehavior === 'run_llm_again') {\n        return NOT_FINAL_OUTPUT;\n    }\n    const firstToolResult = toolResults[0];\n    if (agent.toolUseBehavior === 'stop_on_first_tool') {\n        if (firstToolResult?.type === 'function_output') {\n            const stringOutput = toSmartString(firstToolResult.output);\n            return {\n                isFinalOutput: true,\n                isInterrupted: undefined,\n                finalOutput: stringOutput,\n            };\n        }\n        return NOT_FINAL_OUTPUT;\n    }\n    const toolUseBehavior = agent.toolUseBehavior;\n    if (typeof toolUseBehavior === 'object') {\n        const stoppingTool = toolResults.find((r) => toolUseBehavior.stopAtToolNames.includes(r.tool.name));\n        if (stoppingTool?.type === 'function_output') {\n            const stringOutput = toSmartString(stoppingTool.output);\n            return {\n                isFinalOutput: true,\n                isInterrupted: undefined,\n                finalOutput: stringOutput,\n            };\n        }\n        return NOT_FINAL_OUTPUT;\n    }\n    if (typeof toolUseBehavior === 'function') {\n        return toolUseBehavior(state._context, toolResults);\n    }\n    throw new UserError(`Invalid toolUseBehavior: ${toolUseBehavior}`, state);\n}\nexport function addStepToRunResult(result, step) {\n    for (const item of step.newStepItems) {\n        let itemName;\n        if (item instanceof RunMessageOutputItem) {\n            itemName = 'message_output_created';\n        }\n        else if (item instanceof RunHandoffCallItem) {\n            itemName = 'handoff_requested';\n        }\n        else if (item instanceof RunHandoffOutputItem) {\n            itemName = 'handoff_occurred';\n        }\n        else if (item instanceof RunToolCallItem) {\n            itemName = 'tool_called';\n        }\n        else if (item instanceof RunToolCallOutputItem) {\n            itemName = 'tool_output';\n        }\n        else if (item instanceof RunReasoningItem) {\n            itemName = 'reasoning_item_created';\n        }\n        else if (item instanceof RunToolApprovalItem) {\n            itemName = 'tool_approval_requested';\n        }\n        else {\n            logger.warn('Unknown item type: ', item);\n            continue;\n        }\n        result._addItem(new RunItemStreamEvent(itemName, item));\n    }\n}\nexport class AgentToolUseTracker {\n    #agentToTools = new Map();\n    addToolUse(agent, toolNames) {\n        this.#agentToTools.set(agent, toolNames);\n    }\n    hasUsedTools(agent) {\n        return this.#agentToTools.has(agent);\n    }\n    toJSON() {\n        return Object.fromEntries(Array.from(this.#agentToTools.entries()).map(([agent, toolNames]) => {\n            return [agent.name, toolNames];\n        }));\n    }\n}\n//# sourceMappingURL=runImplementation.mjs.map","import { z } from '@openai/zod/v3';\nimport { Agent } from \"./agent.mjs\";\nimport { RunMessageOutputItem, RunToolApprovalItem, RunToolCallItem, RunToolCallOutputItem, RunReasoningItem, RunHandoffCallItem, RunHandoffOutputItem, } from \"./items.mjs\";\nimport { RunContext } from \"./runContext.mjs\";\nimport { AgentToolUseTracker, nextStepSchema, } from \"./runImplementation.mjs\";\nimport { SystemError, UserError } from \"./errors.mjs\";\nimport { getGlobalTraceProvider } from \"./tracing/provider.mjs\";\nimport { Usage } from \"./usage.mjs\";\nimport { getCurrentTrace } from \"./tracing/index.mjs\";\nimport logger from \"./logger.mjs\";\nimport { handoff } from \"./handoff.mjs\";\nimport * as protocol from \"./types/protocol.mjs\";\nimport { safeExecute } from \"./utils/safeExecute.mjs\";\n/**\n * The schema version of the serialized run state. This is used to ensure that the serialized\n * run state is compatible with the current version of the SDK.\n * If anything in this schema changes, the version will have to be incremented.\n */\nexport const CURRENT_SCHEMA_VERSION = '1.0';\nconst $schemaVersion = z.literal(CURRENT_SCHEMA_VERSION);\nconst serializedAgentSchema = z.object({\n    name: z.string(),\n});\nconst serializedSpanBase = z.object({\n    object: z.literal('trace.span'),\n    id: z.string(),\n    trace_id: z.string(),\n    parent_id: z.string().nullable(),\n    started_at: z.string().nullable(),\n    ended_at: z.string().nullable(),\n    error: z\n        .object({\n        message: z.string(),\n        data: z.record(z.string(), z.any()).optional(),\n    })\n        .nullable(),\n    span_data: z.record(z.string(), z.any()),\n});\nconst SerializedSpan = serializedSpanBase.extend({\n    previous_span: z.lazy(() => SerializedSpan).optional(),\n});\nconst usageSchema = z.object({\n    requests: z.number(),\n    inputTokens: z.number(),\n    outputTokens: z.number(),\n    totalTokens: z.number(),\n});\nconst modelResponseSchema = z.object({\n    usage: usageSchema,\n    output: z.array(protocol.OutputModelItem),\n    responseId: z.string().optional(),\n    providerData: z.record(z.string(), z.any()).optional(),\n});\nconst itemSchema = z.discriminatedUnion('type', [\n    z.object({\n        type: z.literal('message_output_item'),\n        rawItem: protocol.AssistantMessageItem,\n        agent: serializedAgentSchema,\n    }),\n    z.object({\n        type: z.literal('tool_call_item'),\n        rawItem: protocol.ToolCallItem.or(protocol.HostedToolCallItem),\n        agent: serializedAgentSchema,\n    }),\n    z.object({\n        type: z.literal('tool_call_output_item'),\n        rawItem: protocol.FunctionCallResultItem,\n        agent: serializedAgentSchema,\n        output: z.string(),\n    }),\n    z.object({\n        type: z.literal('reasoning_item'),\n        rawItem: protocol.ReasoningItem,\n        agent: serializedAgentSchema,\n    }),\n    z.object({\n        type: z.literal('handoff_call_item'),\n        rawItem: protocol.FunctionCallItem,\n        agent: serializedAgentSchema,\n    }),\n    z.object({\n        type: z.literal('handoff_output_item'),\n        rawItem: protocol.FunctionCallResultItem,\n        sourceAgent: serializedAgentSchema,\n        targetAgent: serializedAgentSchema,\n    }),\n    z.object({\n        type: z.literal('tool_approval_item'),\n        rawItem: protocol.FunctionCallItem.or(protocol.HostedToolCallItem),\n        agent: serializedAgentSchema,\n    }),\n]);\nconst serializedTraceSchema = z.object({\n    object: z.literal('trace'),\n    id: z.string(),\n    workflow_name: z.string(),\n    group_id: z.string().nullable(),\n    metadata: z.record(z.string(), z.any()),\n});\nconst serializedProcessedResponseSchema = z.object({\n    newItems: z.array(itemSchema),\n    toolsUsed: z.array(z.string()),\n    handoffs: z.array(z.object({\n        toolCall: z.any(),\n        handoff: z.any(),\n    })),\n    functions: z.array(z.object({\n        toolCall: z.any(),\n        tool: z.any(),\n    })),\n    computerActions: z.array(z.object({\n        toolCall: z.any(),\n        computer: z.any(),\n    })),\n    mcpApprovalRequests: z\n        .array(z.object({\n        requestItem: z.object({\n            // protocol.HostedToolCallItem\n            rawItem: z.object({\n                type: z.literal('hosted_tool_call'),\n                name: z.string(),\n                arguments: z.string().optional(),\n                status: z.string().optional(),\n                output: z.string().optional(),\n                // this always exists but marked as optional for early version compatibility; when releasing 1.0, we can remove the nullable and optional\n                providerData: z.record(z.string(), z.any()).nullable().optional(),\n            }),\n        }),\n        // HostedMCPTool\n        mcpTool: z.object({\n            type: z.literal('hosted_tool'),\n            name: z.literal('hosted_mcp'),\n            providerData: z.record(z.string(), z.any()),\n        }),\n    }))\n        .optional(),\n});\nconst guardrailFunctionOutputSchema = z.object({\n    tripwireTriggered: z.boolean(),\n    outputInfo: z.any(),\n});\nconst inputGuardrailResultSchema = z.object({\n    guardrail: z.object({\n        type: z.literal('input'),\n        name: z.string(),\n    }),\n    output: guardrailFunctionOutputSchema,\n});\nconst outputGuardrailResultSchema = z.object({\n    guardrail: z.object({\n        type: z.literal('output'),\n        name: z.string(),\n    }),\n    agentOutput: z.any(),\n    agent: serializedAgentSchema,\n    output: guardrailFunctionOutputSchema,\n});\nexport const SerializedRunState = z.object({\n    $schemaVersion,\n    currentTurn: z.number(),\n    currentAgent: serializedAgentSchema,\n    originalInput: z.string().or(z.array(protocol.ModelItem)),\n    modelResponses: z.array(modelResponseSchema),\n    context: z.object({\n        usage: usageSchema,\n        approvals: z.record(z.string(), z.object({\n            approved: z.array(z.string()).or(z.boolean()),\n            rejected: z.array(z.string()).or(z.boolean()),\n        })),\n        context: z.record(z.string(), z.any()),\n    }),\n    toolUseTracker: z.record(z.string(), z.array(z.string())),\n    maxTurns: z.number(),\n    currentAgentSpan: SerializedSpan.nullable().optional(),\n    noActiveAgentRun: z.boolean(),\n    inputGuardrailResults: z.array(inputGuardrailResultSchema),\n    outputGuardrailResults: z.array(outputGuardrailResultSchema),\n    currentStep: nextStepSchema.optional(),\n    lastModelResponse: modelResponseSchema.optional(),\n    generatedItems: z.array(itemSchema),\n    lastProcessedResponse: serializedProcessedResponseSchema.optional(),\n    trace: serializedTraceSchema.nullable(),\n});\n/**\n * Serializable snapshot of an agent's run, including context, usage and trace.\n * While this class has publicly writable properties (prefixed with `_`), they are not meant to be\n * used directly. To read these properties, use the `RunResult` instead.\n *\n * Manipulation of the state directly can lead to unexpected behavior and should be avoided.\n * Instead, use the `approve` and `reject` methods to interact with the state.\n */\nexport class RunState {\n    /**\n     * Current turn number in the conversation.\n     */\n    _currentTurn = 0;\n    /**\n     * The agent currently handling the conversation.\n     */\n    _currentAgent;\n    /**\n     * Original user input prior to any processing.\n     */\n    _originalInput;\n    /**\n     * Responses from the model so far.\n     */\n    _modelResponses;\n    /**\n     * Active tracing span for the current agent if tracing is enabled.\n     */\n    _currentAgentSpan;\n    /**\n     * Run context tracking approvals, usage, and other metadata.\n     */\n    _context;\n    /**\n     * Tracks what tools each agent has used.\n     */\n    _toolUseTracker;\n    /**\n     * Items generated by the agent during the run.\n     */\n    _generatedItems;\n    /**\n     * Maximum allowed turns before forcing termination.\n     */\n    _maxTurns;\n    /**\n     * Whether the run has an active agent step in progress.\n     */\n    _noActiveAgentRun = true;\n    /**\n     * Last model response for the previous turn.\n     */\n    _lastTurnResponse;\n    /**\n     * Results from input guardrails applied to the run.\n     */\n    _inputGuardrailResults;\n    /**\n     * Results from output guardrails applied to the run.\n     */\n    _outputGuardrailResults;\n    /**\n     * Next step computed for the agent to take.\n     */\n    _currentStep = undefined;\n    /**\n     * Parsed model response after applying guardrails and tools.\n     */\n    _lastProcessedResponse = undefined;\n    /**\n     * Trace associated with this run if tracing is enabled.\n     */\n    _trace = null;\n    constructor(context, originalInput, startingAgent, maxTurns) {\n        this._context = context;\n        this._originalInput = structuredClone(originalInput);\n        this._modelResponses = [];\n        this._currentAgentSpan = undefined;\n        this._currentAgent = startingAgent;\n        this._toolUseTracker = new AgentToolUseTracker();\n        this._generatedItems = [];\n        this._maxTurns = maxTurns;\n        this._inputGuardrailResults = [];\n        this._outputGuardrailResults = [];\n        this._trace = getCurrentTrace();\n    }\n    /**\n     * Returns all interruptions if the current step is an interruption otherwise returns an empty array.\n     */\n    getInterruptions() {\n        if (this._currentStep?.type !== 'next_step_interruption') {\n            return [];\n        }\n        return this._currentStep.data.interruptions;\n    }\n    /**\n     * Approves a tool call requested by the agent through an interruption and approval item request.\n     *\n     * To approve the request use this method and then run the agent again with the same state object\n     * to continue the execution.\n     *\n     * By default it will only approve the current tool call. To allow the tool to be used multiple\n     * times throughout the run, set the `alwaysApprove` option to `true`.\n     *\n     * @param approvalItem - The tool call approval item to approve.\n     * @param options - Options for the approval.\n     */\n    approve(approvalItem, options = { alwaysApprove: false }) {\n        this._context.approveTool(approvalItem, options);\n    }\n    /**\n     * Rejects a tool call requested by the agent through an interruption and approval item request.\n     *\n     * To reject the request use this method and then run the agent again with the same state object\n     * to continue the execution.\n     *\n     * By default it will only reject the current tool call. To allow the tool to be used multiple\n     * times throughout the run, set the `alwaysReject` option to `true`.\n     *\n     * @param approvalItem - The tool call approval item to reject.\n     * @param options - Options for the rejection.\n     */\n    reject(approvalItem, options = { alwaysReject: false }) {\n        this._context.rejectTool(approvalItem, options);\n    }\n    /**\n     * Serializes the run state to a JSON object.\n     *\n     * This method is used to serialize the run state to a JSON object that can be used to\n     * resume the run later.\n     *\n     * @returns The serialized run state.\n     */\n    toJSON() {\n        const output = {\n            $schemaVersion: CURRENT_SCHEMA_VERSION,\n            currentTurn: this._currentTurn,\n            currentAgent: {\n                name: this._currentAgent.name,\n            },\n            originalInput: this._originalInput,\n            modelResponses: this._modelResponses.map((response) => {\n                return {\n                    usage: {\n                        requests: response.usage.requests,\n                        inputTokens: response.usage.inputTokens,\n                        outputTokens: response.usage.outputTokens,\n                        totalTokens: response.usage.totalTokens,\n                    },\n                    output: response.output,\n                    responseId: response.responseId,\n                    providerData: response.providerData,\n                };\n            }),\n            context: this._context.toJSON(),\n            toolUseTracker: this._toolUseTracker.toJSON(),\n            maxTurns: this._maxTurns,\n            currentAgentSpan: this._currentAgentSpan?.toJSON(),\n            noActiveAgentRun: this._noActiveAgentRun,\n            inputGuardrailResults: this._inputGuardrailResults,\n            outputGuardrailResults: this._outputGuardrailResults.map((r) => ({\n                ...r,\n                agent: r.agent.toJSON(),\n            })),\n            currentStep: this._currentStep,\n            lastModelResponse: this._lastTurnResponse,\n            generatedItems: this._generatedItems.map((item) => item.toJSON()),\n            lastProcessedResponse: this._lastProcessedResponse,\n            trace: this._trace ? this._trace.toJSON() : null,\n        };\n        // parsing the schema to ensure the output is valid for reparsing\n        const parsed = SerializedRunState.safeParse(output);\n        if (!parsed.success) {\n            throw new SystemError(`Failed to serialize run state. ${parsed.error.message}`);\n        }\n        return parsed.data;\n    }\n    /**\n     * Serializes the run state to a string.\n     *\n     * This method is used to serialize the run state to a string that can be used to\n     * resume the run later.\n     *\n     * @returns The serialized run state.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n    /**\n     * Deserializes a run state from a string.\n     *\n     * This method is used to deserialize a run state from a string that was serialized using the\n     * `toString` method.\n     */\n    static async fromString(initialAgent, str) {\n        const [parsingError, jsonResult] = await safeExecute(() => JSON.parse(str));\n        if (parsingError) {\n            throw new UserError(`Failed to parse run state. ${parsingError instanceof Error ? parsingError.message : String(parsingError)}`);\n        }\n        const currentSchemaVersion = jsonResult.$schemaVersion;\n        if (!currentSchemaVersion) {\n            throw new UserError('Run state is missing schema version');\n        }\n        if (currentSchemaVersion !== CURRENT_SCHEMA_VERSION) {\n            throw new UserError(`Run state schema version ${currentSchemaVersion} is not supported. Please use version ${CURRENT_SCHEMA_VERSION}`);\n        }\n        const stateJson = SerializedRunState.parse(JSON.parse(str));\n        const agentMap = buildAgentMap(initialAgent);\n        //\n        // Rebuild the context\n        //\n        const context = new RunContext(stateJson.context.context);\n        context._rebuildApprovals(stateJson.context.approvals);\n        //\n        // Find the current agent from the initial agent\n        //\n        const currentAgent = agentMap.get(stateJson.currentAgent.name);\n        if (!currentAgent) {\n            throw new UserError(`Agent ${stateJson.currentAgent.name} not found`);\n        }\n        const state = new RunState(context, '', currentAgent, stateJson.maxTurns);\n        state._currentTurn = stateJson.currentTurn;\n        // rebuild tool use tracker\n        state._toolUseTracker = new AgentToolUseTracker();\n        for (const [agentName, toolNames] of Object.entries(stateJson.toolUseTracker)) {\n            state._toolUseTracker.addToolUse(agentMap.get(agentName), toolNames);\n        }\n        // rebuild current agent span\n        if (stateJson.currentAgentSpan) {\n            if (!stateJson.trace) {\n                logger.warn('Trace is not set, skipping tracing setup');\n            }\n            const trace = getGlobalTraceProvider().createTrace({\n                traceId: stateJson.trace?.id,\n                name: stateJson.trace?.workflow_name,\n                groupId: stateJson.trace?.group_id ?? undefined,\n                metadata: stateJson.trace?.metadata,\n            });\n            state._currentAgentSpan = deserializeSpan(trace, stateJson.currentAgentSpan);\n            state._trace = trace;\n        }\n        state._noActiveAgentRun = stateJson.noActiveAgentRun;\n        state._inputGuardrailResults =\n            stateJson.inputGuardrailResults;\n        state._outputGuardrailResults = stateJson.outputGuardrailResults.map((r) => ({\n            ...r,\n            agent: agentMap.get(r.agent.name),\n        }));\n        state._currentStep = stateJson.currentStep;\n        state._originalInput = stateJson.originalInput;\n        state._modelResponses = stateJson.modelResponses.map(deserializeModelResponse);\n        state._lastTurnResponse = stateJson.lastModelResponse\n            ? deserializeModelResponse(stateJson.lastModelResponse)\n            : undefined;\n        state._generatedItems = stateJson.generatedItems.map((item) => deserializeItem(item, agentMap));\n        state._lastProcessedResponse = stateJson.lastProcessedResponse\n            ? await deserializeProcessedResponse(agentMap, state._currentAgent, stateJson.lastProcessedResponse)\n            : undefined;\n        if (stateJson.currentStep?.type === 'next_step_handoff') {\n            state._currentStep = {\n                type: 'next_step_handoff',\n                newAgent: agentMap.get(stateJson.currentStep.newAgent.name),\n            };\n        }\n        return state;\n    }\n}\n/**\n * @internal\n */\nexport function buildAgentMap(initialAgent) {\n    const map = new Map();\n    const queue = [initialAgent];\n    while (queue.length > 0) {\n        const currentAgent = queue.shift();\n        if (map.has(currentAgent.name)) {\n            continue;\n        }\n        map.set(currentAgent.name, currentAgent);\n        for (const handoff of currentAgent.handoffs) {\n            if (handoff instanceof Agent) {\n                if (!map.has(handoff.name)) {\n                    queue.push(handoff);\n                }\n            }\n            else if (handoff.agent) {\n                if (!map.has(handoff.agent.name)) {\n                    queue.push(handoff.agent);\n                }\n            }\n        }\n    }\n    return map;\n}\n/**\n * @internal\n */\nexport function deserializeSpan(trace, serializedSpan) {\n    const spanData = serializedSpan.span_data;\n    const previousSpan = serializedSpan.previous_span\n        ? deserializeSpan(trace, serializedSpan.previous_span)\n        : undefined;\n    const span = getGlobalTraceProvider().createSpan({\n        spanId: serializedSpan.id,\n        traceId: serializedSpan.trace_id,\n        parentId: serializedSpan.parent_id ?? undefined,\n        startedAt: serializedSpan.started_at ?? undefined,\n        endedAt: serializedSpan.ended_at ?? undefined,\n        data: spanData,\n    }, trace);\n    span.previousSpan = previousSpan;\n    return span;\n}\n/**\n * @internal\n */\nexport function deserializeModelResponse(serializedModelResponse) {\n    const usage = new Usage();\n    usage.requests = serializedModelResponse.usage.requests;\n    usage.inputTokens = serializedModelResponse.usage.inputTokens;\n    usage.outputTokens = serializedModelResponse.usage.outputTokens;\n    usage.totalTokens = serializedModelResponse.usage.totalTokens;\n    return {\n        usage,\n        output: serializedModelResponse.output.map((item) => protocol.OutputModelItem.parse(item)),\n        responseId: serializedModelResponse.responseId,\n        providerData: serializedModelResponse.providerData,\n    };\n}\n/**\n * @internal\n */\nexport function deserializeItem(serializedItem, agentMap) {\n    switch (serializedItem.type) {\n        case 'message_output_item':\n            return new RunMessageOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'tool_call_item':\n            return new RunToolCallItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'tool_call_output_item':\n            return new RunToolCallOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name), serializedItem.output);\n        case 'reasoning_item':\n            return new RunReasoningItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'handoff_call_item':\n            return new RunHandoffCallItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'handoff_output_item':\n            return new RunHandoffOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.sourceAgent.name), agentMap.get(serializedItem.targetAgent.name));\n        case 'tool_approval_item':\n            return new RunToolApprovalItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n    }\n}\n/**\n * @internal\n */\nasync function deserializeProcessedResponse(agentMap, currentAgent, serializedProcessedResponse) {\n    const allTools = await currentAgent.getAllTools();\n    const tools = new Map(allTools\n        .filter((tool) => tool.type === 'function')\n        .map((tool) => [tool.name, tool]));\n    const computerTools = new Map(allTools\n        .filter((tool) => tool.type === 'computer')\n        .map((tool) => [tool.name, tool]));\n    const handoffs = new Map(currentAgent.handoffs.map((entry) => {\n        if (entry instanceof Agent) {\n            return [entry.name, handoff(entry)];\n        }\n        return [entry.toolName, entry];\n    }));\n    const result = {\n        newItems: serializedProcessedResponse.newItems.map((item) => deserializeItem(item, agentMap)),\n        toolsUsed: serializedProcessedResponse.toolsUsed,\n        handoffs: serializedProcessedResponse.handoffs.map((handoff) => {\n            if (!handoffs.has(handoff.handoff.toolName)) {\n                throw new UserError(`Handoff ${handoff.handoff.toolName} not found`);\n            }\n            return {\n                toolCall: handoff.toolCall,\n                handoff: handoffs.get(handoff.handoff.toolName),\n            };\n        }),\n        functions: await Promise.all(serializedProcessedResponse.functions.map(async (functionCall) => {\n            if (!tools.has(functionCall.tool.name)) {\n                throw new UserError(`Tool ${functionCall.tool.name} not found`);\n            }\n            return {\n                toolCall: functionCall.toolCall,\n                tool: tools.get(functionCall.tool.name),\n            };\n        })),\n        computerActions: serializedProcessedResponse.computerActions.map((computerAction) => {\n            const toolName = computerAction.computer.name;\n            if (!computerTools.has(toolName)) {\n                throw new UserError(`Computer tool ${toolName} not found`);\n            }\n            return {\n                toolCall: computerAction.toolCall,\n                computer: computerTools.get(toolName),\n            };\n        }),\n        mcpApprovalRequests: (serializedProcessedResponse.mcpApprovalRequests ?? []).map((approvalRequest) => ({\n            requestItem: new RunToolApprovalItem(approvalRequest.requestItem\n                .rawItem, currentAgent),\n            mcpTool: approvalRequest.mcpTool,\n        })),\n    };\n    return {\n        ...result,\n        hasToolsOrApprovalsToRun() {\n            return (result.handoffs.length > 0 ||\n                result.functions.length > 0 ||\n                result.mcpApprovalRequests.length > 0 ||\n                result.computerActions.length > 0);\n        },\n    };\n}\n//# sourceMappingURL=runState.mjs.map","import { Agent } from \"./agent.mjs\";\nimport { defineInputGuardrail, defineOutputGuardrail, } from \"./guardrail.mjs\";\nimport { getHandoff } from \"./handoff.mjs\";\nimport { getDefaultModelProvider } from \"./providers.mjs\";\nimport { RunContext } from \"./runContext.mjs\";\nimport { RunResult, StreamedRunResult } from \"./result.mjs\";\nimport { RunHooks } from \"./lifecycle.mjs\";\nimport logger from \"./logger.mjs\";\nimport { serializeTool, serializeHandoff } from \"./utils/serialize.mjs\";\nimport { GuardrailExecutionError, InputGuardrailTripwireTriggered, MaxTurnsExceededError, ModelBehaviorError, OutputGuardrailTripwireTriggered, UserError, } from \"./errors.mjs\";\nimport { addStepToRunResult, executeInterruptedToolsAndSideEffects, executeToolsAndSideEffects, maybeResetToolChoice, processModelResponse, } from \"./runImplementation.mjs\";\nimport { getOrCreateTrace, resetCurrentSpan, setCurrentSpan, withNewSpanContext, withTrace, } from \"./tracing/context.mjs\";\nimport { createAgentSpan, withGuardrailSpan } from \"./tracing/index.mjs\";\nimport { Usage } from \"./usage.mjs\";\nimport { RunAgentUpdatedStreamEvent, RunRawModelStreamEvent } from \"./events.mjs\";\nimport { RunState } from \"./runState.mjs\";\nimport { StreamEventResponseCompleted } from \"./types/protocol.mjs\";\nimport { convertAgentOutputTypeToSerializable } from \"./utils/tools.mjs\";\nconst DEFAULT_MAX_TURNS = 10;\n/**\n * @internal\n */\nexport function getTracing(tracingDisabled, traceIncludeSensitiveData) {\n    if (tracingDisabled) {\n        return false;\n    }\n    if (traceIncludeSensitiveData) {\n        return true;\n    }\n    return 'enabled_without_data';\n}\nexport function getTurnInput(originalInput, generatedItems) {\n    const rawItems = generatedItems\n        .filter((item) => item.type !== 'tool_approval_item') // don't include approval items to avoid double function calls\n        .map((item) => item.rawItem);\n    if (typeof originalInput === 'string') {\n        originalInput = [{ type: 'message', role: 'user', content: originalInput }];\n    }\n    return [...originalInput, ...rawItems];\n}\n/**\n * A Runner is responsible for running an agent workflow.\n */\nexport class Runner extends RunHooks {\n    config;\n    inputGuardrailDefs;\n    outputGuardrailDefs;\n    constructor(config = {}) {\n        super();\n        this.config = {\n            modelProvider: config.modelProvider ?? getDefaultModelProvider(),\n            model: config.model,\n            modelSettings: config.modelSettings,\n            handoffInputFilter: config.handoffInputFilter,\n            inputGuardrails: config.inputGuardrails,\n            outputGuardrails: config.outputGuardrails,\n            tracingDisabled: config.tracingDisabled ?? false,\n            traceIncludeSensitiveData: config.traceIncludeSensitiveData ?? true,\n            workflowName: config.workflowName ?? 'Agent workflow',\n            traceId: config.traceId,\n            groupId: config.groupId,\n            traceMetadata: config.traceMetadata,\n        };\n        this.inputGuardrailDefs = (config.inputGuardrails ?? []).map(defineInputGuardrail);\n        this.outputGuardrailDefs = (config.outputGuardrails ?? []).map(defineOutputGuardrail);\n    }\n    /**\n     * @internal\n     */\n    async #runIndividualNonStream(startingAgent, input, options) {\n        return withNewSpanContext(async () => {\n            // if we have a saved state we use that one, otherwise we create a new one\n            const state = input instanceof RunState\n                ? input\n                : new RunState(options.context instanceof RunContext\n                    ? options.context\n                    : new RunContext(options.context), input, startingAgent, options.maxTurns ?? DEFAULT_MAX_TURNS);\n            try {\n                while (true) {\n                    let model = selectModel(state._currentAgent.model, this.config.model);\n                    if (typeof model === 'string') {\n                        model = await this.config.modelProvider.getModel(model);\n                    }\n                    // if we don't have a current step, we treat this as a new run\n                    state._currentStep = state._currentStep ?? {\n                        type: 'next_step_run_again',\n                    };\n                    if (state._currentStep.type === 'next_step_interruption') {\n                        logger.debug('Continuing from interruption');\n                        if (!state._lastTurnResponse || !state._lastProcessedResponse) {\n                            throw new UserError('No model response found in previous state', state);\n                        }\n                        const turnResult = await executeInterruptedToolsAndSideEffects(state._currentAgent, state._originalInput, state._generatedItems, state._lastTurnResponse, state._lastProcessedResponse, this, state);\n                        state._toolUseTracker.addToolUse(state._currentAgent, state._lastProcessedResponse.toolsUsed);\n                        state._originalInput = turnResult.originalInput;\n                        state._generatedItems = turnResult.generatedItems;\n                        state._currentStep = turnResult.nextStep;\n                        if (turnResult.nextStep.type === 'next_step_interruption') {\n                            // we are still in an interruption, so we need to avoid an infinite loop\n                            return new RunResult(state);\n                        }\n                        continue;\n                    }\n                    if (state._currentStep.type === 'next_step_run_again') {\n                        const handoffs = [];\n                        if (state._currentAgent.handoffs) {\n                            // While this array usually must not be undefined,\n                            // we've added this check to prevent unexpected runtime errors like https://github.com/openai/openai-agents-js/issues/138\n                            handoffs.push(...state._currentAgent.handoffs.map(getHandoff));\n                        }\n                        if (!state._currentAgentSpan) {\n                            const handoffNames = handoffs.map((h) => h.agentName);\n                            state._currentAgentSpan = createAgentSpan({\n                                data: {\n                                    name: state._currentAgent.name,\n                                    handoffs: handoffNames,\n                                    output_type: state._currentAgent.outputSchemaName,\n                                },\n                            });\n                            state._currentAgentSpan.start();\n                            setCurrentSpan(state._currentAgentSpan);\n                        }\n                        const tools = await state._currentAgent.getAllTools();\n                        const serializedTools = tools.map((t) => serializeTool(t));\n                        const serializedHandoffs = handoffs.map((h) => serializeHandoff(h));\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.spanData.tools = tools.map((t) => t.name);\n                        }\n                        state._currentTurn++;\n                        if (state._currentTurn > state._maxTurns) {\n                            state._currentAgentSpan?.setError({\n                                message: 'Max turns exceeded',\n                                data: { max_turns: state._maxTurns },\n                            });\n                            throw new MaxTurnsExceededError(`Max turns (${state._maxTurns}) exceeded`, state);\n                        }\n                        logger.debug(`Running agent ${state._currentAgent.name} (turn ${state._currentTurn})`);\n                        if (state._currentTurn === 1) {\n                            await this.#runInputGuardrails(state);\n                        }\n                        const turnInput = getTurnInput(state._originalInput, state._generatedItems);\n                        if (state._noActiveAgentRun) {\n                            state._currentAgent.emit('agent_start', state._context, state._currentAgent);\n                            this.emit('agent_start', state._context, state._currentAgent);\n                        }\n                        let modelSettings = {\n                            ...this.config.modelSettings,\n                            ...state._currentAgent.modelSettings,\n                        };\n                        modelSettings = maybeResetToolChoice(state._currentAgent, state._toolUseTracker, modelSettings);\n                        state._lastTurnResponse = await model.getResponse({\n                            systemInstructions: await state._currentAgent.getSystemPrompt(state._context),\n                            prompt: await state._currentAgent.getPrompt(state._context),\n                            input: turnInput,\n                            previousResponseId: options.previousResponseId,\n                            modelSettings,\n                            tools: serializedTools,\n                            outputType: convertAgentOutputTypeToSerializable(state._currentAgent.outputType),\n                            handoffs: serializedHandoffs,\n                            tracing: getTracing(this.config.tracingDisabled, this.config.traceIncludeSensitiveData),\n                            signal: options.signal,\n                        });\n                        state._modelResponses.push(state._lastTurnResponse);\n                        state._context.usage.add(state._lastTurnResponse.usage);\n                        state._noActiveAgentRun = false;\n                        const processedResponse = processModelResponse(state._lastTurnResponse, state._currentAgent, tools, handoffs);\n                        state._lastProcessedResponse = processedResponse;\n                        const turnResult = await executeToolsAndSideEffects(state._currentAgent, state._originalInput, state._generatedItems, state._lastTurnResponse, state._lastProcessedResponse, this, state);\n                        state._toolUseTracker.addToolUse(state._currentAgent, state._lastProcessedResponse.toolsUsed);\n                        state._originalInput = turnResult.originalInput;\n                        state._generatedItems = turnResult.generatedItems;\n                        state._currentStep = turnResult.nextStep;\n                    }\n                    if (state._currentStep &&\n                        state._currentStep.type === 'next_step_final_output') {\n                        await this.#runOutputGuardrails(state, state._currentStep.output);\n                        this.emit('agent_end', state._context, state._currentAgent, state._currentStep.output);\n                        state._currentAgent.emit('agent_end', state._context, state._currentStep.output);\n                        return new RunResult(state);\n                    }\n                    else if (state._currentStep &&\n                        state._currentStep.type === 'next_step_handoff') {\n                        state._currentAgent = state._currentStep.newAgent;\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.end();\n                            resetCurrentSpan();\n                            state._currentAgentSpan = undefined;\n                        }\n                        state._noActiveAgentRun = true;\n                        // we've processed the handoff, so we need to run the loop again\n                        state._currentStep = { type: 'next_step_run_again' };\n                    }\n                    else if (state._currentStep &&\n                        state._currentStep.type === 'next_step_interruption') {\n                        // interrupted. Don't run any guardrails\n                        return new RunResult(state);\n                    }\n                    else {\n                        logger.debug('Running next loop');\n                    }\n                }\n            }\n            catch (err) {\n                if (state._currentAgentSpan) {\n                    state._currentAgentSpan.setError({\n                        message: 'Error in agent run',\n                        data: { error: String(err) },\n                    });\n                }\n                throw err;\n            }\n            finally {\n                if (state._currentAgentSpan) {\n                    if (state._currentStep?.type !== 'next_step_interruption') {\n                        // don't end the span if the run was interrupted\n                        state._currentAgentSpan.end();\n                    }\n                    resetCurrentSpan();\n                }\n            }\n        });\n    }\n    async #runInputGuardrails(state) {\n        const guardrails = this.inputGuardrailDefs.concat(state._currentAgent.inputGuardrails.map(defineInputGuardrail));\n        if (guardrails.length > 0) {\n            const guardrailArgs = {\n                agent: state._currentAgent,\n                input: state._originalInput,\n                context: state._context,\n            };\n            try {\n                const results = await Promise.all(guardrails.map(async (guardrail) => {\n                    return withGuardrailSpan(async (span) => {\n                        const result = await guardrail.run(guardrailArgs);\n                        span.spanData.triggered = result.output.tripwireTriggered;\n                        return result;\n                    }, { data: { name: guardrail.name } }, state._currentAgentSpan);\n                }));\n                for (const result of results) {\n                    if (result.output.tripwireTriggered) {\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.setError({\n                                message: 'Guardrail tripwire triggered',\n                                data: { guardrail: result.guardrail.name },\n                            });\n                        }\n                        throw new InputGuardrailTripwireTriggered(`Input guardrail triggered: ${JSON.stringify(result.output.outputInfo)}`, result, state);\n                    }\n                }\n            }\n            catch (e) {\n                if (e instanceof InputGuardrailTripwireTriggered) {\n                    throw e;\n                }\n                // roll back the current turn to enable reruns\n                state._currentTurn--;\n                throw new GuardrailExecutionError(`Input guardrail failed to complete: ${e}`, e, state);\n            }\n        }\n    }\n    async #runOutputGuardrails(state, output) {\n        const guardrails = this.outputGuardrailDefs.concat(state._currentAgent.outputGuardrails.map(defineOutputGuardrail));\n        if (guardrails.length > 0) {\n            const agentOutput = state._currentAgent.processFinalOutput(output);\n            const guardrailArgs = {\n                agent: state._currentAgent,\n                agentOutput,\n                context: state._context,\n                details: { modelResponse: state._lastTurnResponse },\n            };\n            try {\n                const results = await Promise.all(guardrails.map(async (guardrail) => {\n                    return withGuardrailSpan(async (span) => {\n                        const result = await guardrail.run(guardrailArgs);\n                        span.spanData.triggered = result.output.tripwireTriggered;\n                        return result;\n                    }, { data: { name: guardrail.name } }, state._currentAgentSpan);\n                }));\n                for (const result of results) {\n                    if (result.output.tripwireTriggered) {\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.setError({\n                                message: 'Guardrail tripwire triggered',\n                                data: { guardrail: result.guardrail.name },\n                            });\n                        }\n                        throw new OutputGuardrailTripwireTriggered(`Output guardrail triggered: ${JSON.stringify(result.output.outputInfo)}`, result, state);\n                    }\n                }\n            }\n            catch (e) {\n                if (e instanceof OutputGuardrailTripwireTriggered) {\n                    throw e;\n                }\n                throw new GuardrailExecutionError(`Output guardrail failed to complete: ${e}`, e, state);\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    async #runStreamLoop(result, options) {\n        try {\n            while (true) {\n                const currentAgent = result.state._currentAgent;\n                const handoffs = currentAgent.handoffs.map(getHandoff);\n                const tools = await currentAgent.getAllTools();\n                const serializedTools = tools.map((t) => serializeTool(t));\n                const serializedHandoffs = handoffs.map((h) => serializeHandoff(h));\n                result.state._currentStep = result.state._currentStep ?? {\n                    type: 'next_step_run_again',\n                };\n                if (result.state._currentStep.type === 'next_step_interruption') {\n                    logger.debug('Continuing from interruption');\n                    if (!result.state._lastTurnResponse ||\n                        !result.state._lastProcessedResponse) {\n                        throw new UserError('No model response found in previous state', result.state);\n                    }\n                    const turnResult = await executeInterruptedToolsAndSideEffects(result.state._currentAgent, result.state._originalInput, result.state._generatedItems, result.state._lastTurnResponse, result.state._lastProcessedResponse, this, result.state);\n                    addStepToRunResult(result, turnResult);\n                    result.state._toolUseTracker.addToolUse(result.state._currentAgent, result.state._lastProcessedResponse.toolsUsed);\n                    result.state._originalInput = turnResult.originalInput;\n                    result.state._generatedItems = turnResult.generatedItems;\n                    result.state._currentStep = turnResult.nextStep;\n                    if (turnResult.nextStep.type === 'next_step_interruption') {\n                        // we are still in an interruption, so we need to avoid an infinite loop\n                        return;\n                    }\n                    continue;\n                }\n                if (result.state._currentStep.type === 'next_step_run_again') {\n                    if (!result.state._currentAgentSpan) {\n                        const handoffNames = handoffs.map((h) => h.agentName);\n                        result.state._currentAgentSpan = createAgentSpan({\n                            data: {\n                                name: currentAgent.name,\n                                handoffs: handoffNames,\n                                tools: tools.map((t) => t.name),\n                                output_type: currentAgent.outputSchemaName,\n                            },\n                        });\n                        result.state._currentAgentSpan.start();\n                        setCurrentSpan(result.state._currentAgentSpan);\n                    }\n                    result.state._currentTurn++;\n                    if (result.state._currentTurn > result.state._maxTurns) {\n                        result.state._currentAgentSpan?.setError({\n                            message: 'Max turns exceeded',\n                            data: { max_turns: result.state._maxTurns },\n                        });\n                        throw new MaxTurnsExceededError(`Max turns (${result.state._maxTurns}) exceeded`, result.state);\n                    }\n                    logger.debug(`Running agent ${currentAgent.name} (turn ${result.state._currentTurn})`);\n                    let model = selectModel(currentAgent.model, this.config.model);\n                    if (typeof model === 'string') {\n                        model = await this.config.modelProvider.getModel(model);\n                    }\n                    if (result.state._currentTurn === 1) {\n                        await this.#runInputGuardrails(result.state);\n                    }\n                    let modelSettings = {\n                        ...this.config.modelSettings,\n                        ...currentAgent.modelSettings,\n                    };\n                    modelSettings = maybeResetToolChoice(currentAgent, result.state._toolUseTracker, modelSettings);\n                    const turnInput = getTurnInput(result.input, result.newItems);\n                    if (result.state._noActiveAgentRun) {\n                        currentAgent.emit('agent_start', result.state._context, currentAgent);\n                        this.emit('agent_start', result.state._context, currentAgent);\n                    }\n                    let finalResponse = undefined;\n                    for await (const event of model.getStreamedResponse({\n                        systemInstructions: await currentAgent.getSystemPrompt(result.state._context),\n                        prompt: await currentAgent.getPrompt(result.state._context),\n                        input: turnInput,\n                        previousResponseId: options.previousResponseId,\n                        modelSettings,\n                        tools: serializedTools,\n                        handoffs: serializedHandoffs,\n                        outputType: convertAgentOutputTypeToSerializable(currentAgent.outputType),\n                        tracing: getTracing(this.config.tracingDisabled, this.config.traceIncludeSensitiveData),\n                        signal: options.signal,\n                    })) {\n                        if (event.type === 'response_done') {\n                            const parsed = StreamEventResponseCompleted.parse(event);\n                            finalResponse = {\n                                usage: new Usage(parsed.response.usage),\n                                output: parsed.response.output,\n                                responseId: parsed.response.id,\n                            };\n                        }\n                        if (result.cancelled) {\n                            // When the user's code exits a loop to consume the stream, we need to break\n                            // this loop to prevent internal false errors and unnecessary processing\n                            return;\n                        }\n                        result._addItem(new RunRawModelStreamEvent(event));\n                    }\n                    result.state._noActiveAgentRun = false;\n                    if (!finalResponse) {\n                        throw new ModelBehaviorError('Model did not produce a final response!', result.state);\n                    }\n                    result.state._lastTurnResponse = finalResponse;\n                    result.state._modelResponses.push(result.state._lastTurnResponse);\n                    const processedResponse = processModelResponse(result.state._lastTurnResponse, currentAgent, tools, handoffs);\n                    result.state._lastProcessedResponse = processedResponse;\n                    const turnResult = await executeToolsAndSideEffects(currentAgent, result.state._originalInput, result.state._generatedItems, result.state._lastTurnResponse, result.state._lastProcessedResponse, this, result.state);\n                    addStepToRunResult(result, turnResult);\n                    result.state._toolUseTracker.addToolUse(currentAgent, processedResponse.toolsUsed);\n                    result.state._originalInput = turnResult.originalInput;\n                    result.state._generatedItems = turnResult.generatedItems;\n                    result.state._currentStep = turnResult.nextStep;\n                }\n                if (result.state._currentStep.type === 'next_step_final_output') {\n                    await this.#runOutputGuardrails(result.state, result.state._currentStep.output);\n                    return;\n                }\n                else if (result.state._currentStep.type === 'next_step_interruption') {\n                    // we are done for now. Don't run any output guardrails\n                    return;\n                }\n                else if (result.state._currentStep.type === 'next_step_handoff') {\n                    result.state._currentAgent = result.state._currentStep\n                        ?.newAgent;\n                    if (result.state._currentAgentSpan) {\n                        result.state._currentAgentSpan.end();\n                        resetCurrentSpan();\n                    }\n                    result.state._currentAgentSpan = undefined;\n                    result._addItem(new RunAgentUpdatedStreamEvent(result.state._currentAgent));\n                    result.state._noActiveAgentRun = true;\n                    // we've processed the handoff, so we need to run the loop again\n                    result.state._currentStep = {\n                        type: 'next_step_run_again',\n                    };\n                }\n                else {\n                    logger.debug('Running next loop');\n                }\n            }\n        }\n        catch (error) {\n            if (result.state._currentAgentSpan) {\n                result.state._currentAgentSpan.setError({\n                    message: 'Error in agent run',\n                    data: { error: String(error) },\n                });\n            }\n            throw error;\n        }\n        finally {\n            if (result.state._currentAgentSpan) {\n                if (result.state._currentStep?.type !== 'next_step_interruption') {\n                    result.state._currentAgentSpan.end();\n                }\n                resetCurrentSpan();\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    async #runIndividualStream(agent, input, options) {\n        options = options ?? {};\n        return withNewSpanContext(async () => {\n            // Initialize or reuse existing state\n            const state = input instanceof RunState\n                ? input\n                : new RunState(options.context instanceof RunContext\n                    ? options.context\n                    : new RunContext(options.context), input, agent, options.maxTurns ?? DEFAULT_MAX_TURNS);\n            // Initialize the streamed result with existing state\n            const result = new StreamedRunResult({\n                signal: options.signal,\n                state,\n            });\n            // Setup defaults\n            result.maxTurns = options.maxTurns ?? state._maxTurns;\n            // Continue the stream loop without blocking\n            this.#runStreamLoop(result, options).then(() => {\n                result._done();\n            }, (err) => {\n                result._raiseError(err);\n            });\n            return result;\n        });\n    }\n    run(agent, input, options = {\n        stream: false,\n        context: undefined,\n    }) {\n        if (input instanceof RunState && input._trace) {\n            return withTrace(input._trace, async () => {\n                if (input._currentAgentSpan) {\n                    setCurrentSpan(input._currentAgentSpan);\n                }\n                if (options?.stream) {\n                    return this.#runIndividualStream(agent, input, options);\n                }\n                else {\n                    return this.#runIndividualNonStream(agent, input, options);\n                }\n            });\n        }\n        return getOrCreateTrace(async () => {\n            if (options?.stream) {\n                return this.#runIndividualStream(agent, input, options);\n            }\n            else {\n                return this.#runIndividualNonStream(agent, input, options);\n            }\n        }, {\n            traceId: this.config.traceId,\n            name: this.config.workflowName,\n            groupId: this.config.groupId,\n            metadata: this.config.traceMetadata,\n        });\n    }\n}\nlet _defaultRunner = undefined;\nfunction getDefaultRunner() {\n    if (_defaultRunner) {\n        return _defaultRunner;\n    }\n    _defaultRunner = new Runner();\n    return _defaultRunner;\n}\nexport function selectModel(agentModel, runConfigModel) {\n    // When initializing an agent without model name, the model property is set to an empty string. So,\n    // * agentModel === '' & runConfigModel exists, runConfigModel will be used\n    // * agentModel is set, the agentModel will be used over runConfigModel\n    if ((typeof agentModel === 'string' &&\n        agentModel !== Agent.DEFAULT_MODEL_PLACEHOLDER) ||\n        agentModel // any truthy value\n    ) {\n        return agentModel;\n    }\n    return runConfigModel ?? agentModel ?? Agent.DEFAULT_MODEL_PLACEHOLDER;\n}\nexport async function run(agent, input, options) {\n    const runner = getDefaultRunner();\n    if (options?.stream) {\n        return await runner.run(agent, input, options);\n    }\n    else {\n        return await runner.run(agent, input, options);\n    }\n}\n//# sourceMappingURL=run.mjs.map","import { AgentHooks } from \"./lifecycle.mjs\";\nimport { getAllMcpTools } from \"./mcp.mjs\";\nimport { tool, } from \"./tool.mjs\";\nimport { Runner } from \"./run.mjs\";\nimport { toFunctionToolName } from \"./utils/tools.mjs\";\nimport { getOutputText } from \"./utils/messages.mjs\";\nimport { isAgentToolInput } from \"./utils/typeGuards.mjs\";\nimport { isZodObject } from \"./utils/typeGuards.mjs\";\nimport { ModelBehaviorError, UserError } from \"./errors.mjs\";\nimport logger from \"./logger.mjs\";\n/**\n * The class representing an AI agent configured with instructions, tools, guardrails, handoffs and more.\n *\n * We strongly recommend passing `instructions`, which is the \"system prompt\" for the agent. In\n * addition, you can pass `handoffDescription`, which is a human-readable description of the\n * agent, used when the agent is used inside tools/handoffs.\n *\n * Agents are generic on the context type. The context is a (mutable) object you create. It is\n * passed to tool functions, handoffs, guardrails, etc.\n */\nexport class Agent extends AgentHooks {\n    /**\n     * Create an Agent with handoffs and automatically infer the union type for TOutput from the handoff agents' output types.\n     */\n    static create(config) {\n        return new Agent({\n            ...config,\n            handoffs: config.handoffs,\n            outputType: config.outputType,\n            handoffOutputTypeWarningEnabled: false,\n        });\n    }\n    static DEFAULT_MODEL_PLACEHOLDER = '';\n    name;\n    instructions;\n    prompt;\n    handoffDescription;\n    handoffs;\n    model;\n    modelSettings;\n    tools;\n    mcpServers;\n    inputGuardrails;\n    outputGuardrails;\n    outputType = 'text';\n    toolUseBehavior;\n    resetToolChoice;\n    constructor(config) {\n        super();\n        if (typeof config.name !== 'string' || config.name.trim() === '') {\n            throw new UserError('Agent must have a name.');\n        }\n        this.name = config.name;\n        this.instructions = config.instructions ?? Agent.DEFAULT_MODEL_PLACEHOLDER;\n        this.prompt = config.prompt;\n        this.handoffDescription = config.handoffDescription ?? '';\n        this.handoffs = config.handoffs ?? [];\n        this.model = config.model ?? '';\n        this.modelSettings = config.modelSettings ?? {};\n        this.tools = config.tools ?? [];\n        this.mcpServers = config.mcpServers ?? [];\n        this.inputGuardrails = config.inputGuardrails ?? [];\n        this.outputGuardrails = config.outputGuardrails ?? [];\n        if (config.outputType) {\n            this.outputType = config.outputType;\n        }\n        this.toolUseBehavior = config.toolUseBehavior ?? 'run_llm_again';\n        this.resetToolChoice = config.resetToolChoice ?? true;\n        // --- Runtime warning for handoff output type compatibility ---\n        if (config.handoffOutputTypeWarningEnabled === undefined ||\n            config.handoffOutputTypeWarningEnabled) {\n            if (this.handoffs && this.outputType) {\n                const outputTypes = new Set([JSON.stringify(this.outputType)]);\n                for (const h of this.handoffs) {\n                    if ('outputType' in h && h.outputType) {\n                        outputTypes.add(JSON.stringify(h.outputType));\n                    }\n                    else if ('agent' in h && h.agent.outputType) {\n                        outputTypes.add(JSON.stringify(h.agent.outputType));\n                    }\n                }\n                if (outputTypes.size > 1) {\n                    logger.warn(`[Agent] Warning: Handoff agents have different output types: ${Array.from(outputTypes).join(', ')}. You can make it type-safe by using Agent.create({ ... }) method instead.`);\n                }\n            }\n        }\n    }\n    /**\n     * Output schema name.\n     */\n    get outputSchemaName() {\n        if (this.outputType === 'text') {\n            return 'text';\n        }\n        else if (isZodObject(this.outputType)) {\n            return 'ZodOutput';\n        }\n        else if (typeof this.outputType === 'object') {\n            return this.outputType.name;\n        }\n        throw new Error(`Unknown output type: ${this.outputType}`);\n    }\n    /**\n     * Makes a copy of the agent, with the given arguments changed. For example, you could do:\n     *\n     * ```\n     * const newAgent = agent.clone({ instructions: 'New instructions' })\n     * ```\n     *\n     * @param config - A partial configuration to change.\n     * @returns A new agent with the given changes.\n     */\n    clone(config) {\n        return new Agent({\n            ...this,\n            ...config,\n        });\n    }\n    /**\n     * Transform this agent into a tool, callable by other agents.\n     *\n     * This is different from handoffs in two ways:\n     * 1. In handoffs, the new agent receives the conversation history. In this tool, the new agent\n     *    receives generated input.\n     * 2. In handoffs, the new agent takes over the conversation. In this tool, the new agent is\n     *    called as a tool, and the conversation is continued by the original agent.\n     *\n     * @param options - Options for the tool.\n     * @returns A tool that runs the agent and returns the output text.\n     */\n    asTool(options) {\n        const { toolName, toolDescription, customOutputExtractor } = options;\n        return tool({\n            name: toolName ?? toFunctionToolName(this.name),\n            description: toolDescription ?? '',\n            parameters: {\n                type: 'object',\n                properties: {\n                    input: {\n                        type: 'string',\n                    },\n                },\n                required: ['input'],\n                additionalProperties: false,\n            },\n            strict: true,\n            execute: async (data, context) => {\n                if (!isAgentToolInput(data)) {\n                    throw new ModelBehaviorError('Agent tool called with invalid input');\n                }\n                const runner = new Runner();\n                const result = await runner.run(this, data.input, {\n                    context: context?.context,\n                });\n                if (typeof customOutputExtractor === 'function') {\n                    return customOutputExtractor(result);\n                }\n                return getOutputText(result.rawResponses[result.rawResponses.length - 1]);\n            },\n        });\n    }\n    /**\n     * Returns the system prompt for the agent.\n     *\n     * If the agent has a function as its instructions, this function will be called with the\n     * runContext and the agent instance.\n     */\n    async getSystemPrompt(runContext) {\n        if (typeof this.instructions === 'function') {\n            return await this.instructions(runContext, this);\n        }\n        return this.instructions;\n    }\n    /**\n     * Returns the prompt template for the agent, if defined.\n     *\n     * If the agent has a function as its prompt, this function will be called with the\n     * runContext and the agent instance.\n     */\n    async getPrompt(runContext) {\n        if (typeof this.prompt === 'function') {\n            return await this.prompt(runContext, this);\n        }\n        return this.prompt;\n    }\n    /**\n     * Fetches the available tools from the MCP servers.\n     * @returns the MCP powered tools\n     */\n    async getMcpTools() {\n        if (this.mcpServers.length > 0) {\n            return getAllMcpTools(this.mcpServers);\n        }\n        return [];\n    }\n    /**\n     * ALl agent tools, including the MCPl and function tools.\n     *\n     * @returns all configured tools\n     */\n    async getAllTools() {\n        return [...(await this.getMcpTools()), ...this.tools];\n    }\n    /**\n     * Processes the final output of the agent.\n     *\n     * @param output - The output of the agent.\n     * @returns The parsed out.\n     */\n    processFinalOutput(output) {\n        if (this.outputType === 'text') {\n            return output;\n        }\n        if (typeof this.outputType === 'object') {\n            const parsed = JSON.parse(output);\n            if (isZodObject(this.outputType)) {\n                return this.outputType.parse(parsed);\n            }\n            return parsed;\n        }\n        throw new Error(`Unknown output type: ${this.outputType}`);\n    }\n    /**\n     * Returns a JSON representation of the agent, which is serializable.\n     *\n     * @returns A JSON object containing the agent's name.\n     */\n    toJSON() {\n        return {\n            name: this.name,\n        };\n    }\n}\n//# sourceMappingURL=agent.mjs.map","/**\n * Creates a user message entry\n *\n * @param input The input message from the user\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nexport function user(input, options) {\n    return {\n        type: 'message',\n        role: 'user',\n        content: typeof input === 'string'\n            ? [\n                {\n                    type: 'input_text',\n                    text: input,\n                },\n            ]\n            : input,\n        providerData: options,\n    };\n}\n/**\n * Creates a system message entry\n *\n * @param input The system prompt\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nexport function system(input, options) {\n    return {\n        type: 'message',\n        role: 'system',\n        content: input,\n        providerData: options,\n    };\n}\n/**\n * Creates an assistant message entry for example for multi-shot prompting\n *\n * @param input The assistant response\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nexport function assistant(content, options) {\n    return {\n        type: 'message',\n        role: 'assistant',\n        content: typeof content === 'string'\n            ? [\n                {\n                    type: 'output_text',\n                    text: content,\n                },\n            ]\n            : content,\n        status: 'completed',\n        providerData: options,\n    };\n}\n//# sourceMappingURL=message.mjs.map","function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\")\n        throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nexport { __classPrivateFieldSet, __classPrivateFieldGet };\n","import { addTraceProcessor } from \"./tracing/index.mjs\";\nimport { defaultProcessor } from \"./tracing/processor.mjs\";\nexport { RuntimeEventEmitter } from '@openai/agents-core/_shims';\nexport { Agent, } from \"./agent.mjs\";\nexport { AgentsError, GuardrailExecutionError, InputGuardrailTripwireTriggered, MaxTurnsExceededError, ModelBehaviorError, OutputGuardrailTripwireTriggered, ToolCallError, UserError, SystemError, } from \"./errors.mjs\";\nexport { RunAgentUpdatedStreamEvent, RunRawModelStreamEvent, RunItemStreamEvent, } from \"./events.mjs\";\nexport { defineOutputGuardrail, } from \"./guardrail.mjs\";\nexport { getHandoff, getTransferMessage, Handoff, handoff, } from \"./handoff.mjs\";\nexport { assistant, system, user } from \"./helpers/message.mjs\";\nexport { extractAllTextOutput, RunHandoffCallItem, RunMessageOutputItem, RunReasoningItem, RunToolApprovalItem, RunToolCallItem, RunToolCallOutputItem, } from \"./items.mjs\";\nexport { AgentHooks } from \"./lifecycle.mjs\";\nexport { getLogger } from \"./logger.mjs\";\nexport { getAllMcpTools, invalidateServerToolsCache, MCPServerStdio, MCPServerStreamableHttp, } from \"./mcp.mjs\";\nexport { setDefaultModelProvider } from \"./providers.mjs\";\nexport { RunResult, StreamedRunResult } from \"./result.mjs\";\nexport { run, Runner, } from \"./run.mjs\";\nexport { RunContext } from \"./runContext.mjs\";\nexport { RunState } from \"./runState.mjs\";\nexport { computerTool, hostedMcpTool, tool, } from \"./tool.mjs\";\nexport * from \"./tracing/index.mjs\";\nexport { getGlobalTraceProvider, TraceProvider } from \"./tracing/provider.mjs\";\nexport { Usage } from \"./usage.mjs\";\nexport * as protocol from \"./types/protocol.mjs\";\n/**\n * Add the default processor, which exports traces and spans to the backend in batches. You can\n * change the default behavior by either:\n * 1. calling addTraceProcessor, which adds additional processors, or\n * 2. calling setTraceProcessors, which sets the processors and discards the default one\n */\naddTraceProcessor(defaultProcessor());\n//# sourceMappingURL=index.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * https://stackoverflow.com/a/2117523\n */\nexport let uuid4 = function () {\n    const { crypto } = globalThis;\n    if (crypto?.randomUUID) {\n        uuid4 = crypto.randomUUID.bind(crypto);\n        return crypto.randomUUID();\n    }\n    const u8 = new Uint8Array(1);\n    const randomByte = crypto ? () => crypto.getRandomValues(u8)[0] : () => (Math.random() * 0xff) & 0xff;\n    return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, (c) => (+c ^ (randomByte() & (15 >> (+c / 4)))).toString(16));\n};\n//# sourceMappingURL=uuid.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nexport const isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport let isArray = (val) => ((isArray = Array.isArray), isArray(val));\nexport let isReadonlyArray = isArray;\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x) {\n    if (typeof x !== 'object') {\n        return {};\n    }\n    return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nexport const ensurePresent = (value) => {\n    if (value == null) {\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    }\n    return value;\n};\nexport const validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n//# sourceMappingURL=values.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n//# sourceMappingURL=sleep.mjs.map","export const VERSION = '5.10.1'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { VERSION } from \"../version.mjs\";\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */\nfunction getDetectedPlatform() {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return 'deno';\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return 'edge';\n    }\n    if (Object.prototype.toString.call(typeof globalThis.process !== 'undefined' ? globalThis.process : 0) === '[object process]') {\n        return 'node';\n    }\n    return 'unknown';\n}\nconst getPlatformProperties = () => {\n    const detectedPlatform = getDetectedPlatform();\n    if (detectedPlatform === 'deno') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': globalThis.process.version,\n        };\n    }\n    // Check if Node.js\n    if (detectedPlatform === 'node') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(globalThis.process.platform ?? 'unknown'),\n            'X-Stainless-Arch': normalizeArch(globalThis.process.arch ?? 'unknown'),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': globalThis.process.version ?? 'unknown',\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nexport const getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\n//# sourceMappingURL=detect-platform.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function getDefaultFetch() {\n    if (typeof fetch !== 'undefined') {\n        return fetch;\n    }\n    throw new Error('`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`');\n}\nexport function makeReadableStream(...args) {\n    const ReadableStream = globalThis.ReadableStream;\n    if (typeof ReadableStream === 'undefined') {\n        // Note: All of the platforms / runtimes we officially support already define\n        // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n        throw new Error('`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`');\n    }\n    return new ReadableStream(...args);\n}\nexport function ReadableStreamFrom(iterable) {\n    let iter = Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n    return makeReadableStream({\n        start() { },\n        async pull(controller) {\n            const { done, value } = await iter.next();\n            if (done) {\n                controller.close();\n            }\n            else {\n                controller.enqueue(value);\n            }\n        },\n        async cancel() {\n            await iter.return?.();\n        },\n    });\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */\nexport async function CancelReadableStream(stream) {\n    if (stream === null || typeof stream !== 'object')\n        return;\n    if (stream[Symbol.asyncIterator]) {\n        await stream[Symbol.asyncIterator]().return?.();\n        return;\n    }\n    const reader = stream.getReader();\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n}\n//# sourceMappingURL=shims.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const FallbackEncoder = ({ headers, body }) => {\n    return {\n        bodyHeaders: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    };\n};\n//# sourceMappingURL=request-options.mjs.map","export const default_format = 'RFC3986';\nexport const default_formatter = (v) => String(v);\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: default_formatter,\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nexport let has = (obj, key) => ((has = Object.hasOwn ?? Function.prototype.call.bind(Object.prototype.hasOwnProperty)),\n    has(obj, key));\nconst hex_table = /* @__PURE__ */ (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (isArray(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (isArray(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map, has } from \"./utils.mjs\";\nimport { default_format, default_formatter, formatters } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst push_to_array = function (arr, value_or_array) {\n    Array.prototype.push.apply(arr, isArray(value_or_array) ? value_or_array : [value_or_array]);\n};\nlet toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: default_formatter,\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return (toISOString ?? (toISOString = Function.prototype.call.bind(Date.prototype.toISOString)))(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (isArray(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = isArray(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (isArray(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export function concatBytes(buffers) {\n    let length = 0;\n    for (const buffer of buffers) {\n        length += buffer.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const buffer of buffers) {\n        output.set(buffer, index);\n        index += buffer.length;\n    }\n    return output;\n}\nlet encodeUTF8_;\nexport function encodeUTF8(str) {\n    let encoder;\n    return (encodeUTF8_ ??\n        ((encoder = new globalThis.TextEncoder()), (encodeUTF8_ = encoder.encode.bind(encoder))))(str);\n}\nlet decodeUTF8_;\nexport function decodeUTF8(bytes) {\n    let decoder;\n    return (decodeUTF8_ ??\n        ((decoder = new globalThis.TextDecoder()), (decodeUTF8_ = decoder.decode.bind(decoder))))(bytes);\n}\n//# sourceMappingURL=bytes.mjs.map","var _LineDecoder_buffer, _LineDecoder_carriageReturnIndex;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../tslib.mjs\";\nimport { concatBytes, decodeUTF8, encodeUTF8 } from \"../utils/bytes.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_buffer.set(this, void 0);\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        __classPrivateFieldSet(this, _LineDecoder_buffer, new Uint8Array(), \"f\");\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        __classPrivateFieldSet(this, _LineDecoder_buffer, concatBytes([__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), binaryChunk]), \"f\");\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, endIndex));\n            lines.push(line);\n            __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(patternIndex.index), \"f\");\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    flush() {\n        if (!__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_buffer = new WeakMap(), _LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { hasOwn } from \"./values.mjs\";\nconst levelNumbers = {\n    off: 0,\n    error: 200,\n    warn: 300,\n    info: 400,\n    debug: 500,\n};\nexport const parseLogLevel = (maybeLevel, sourceName, client) => {\n    if (!maybeLevel) {\n        return undefined;\n    }\n    if (hasOwn(levelNumbers, maybeLevel)) {\n        return maybeLevel;\n    }\n    loggerFor(client).warn(`${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(Object.keys(levelNumbers))}`);\n    return undefined;\n};\nfunction noop() { }\nfunction makeLogFn(fnLevel, logger, logLevel) {\n    if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n        return noop;\n    }\n    else {\n        // Don't wrap logger functions, we want the stacktrace intact!\n        return logger[fnLevel].bind(logger);\n    }\n}\nconst noopLogger = {\n    error: noop,\n    warn: noop,\n    info: noop,\n    debug: noop,\n};\nlet cachedLoggers = /* @__PURE__ */ new WeakMap();\nexport function loggerFor(client) {\n    const logger = client.logger;\n    const logLevel = client.logLevel ?? 'off';\n    if (!logger) {\n        return noopLogger;\n    }\n    const cachedLogger = cachedLoggers.get(logger);\n    if (cachedLogger && cachedLogger[0] === logLevel) {\n        return cachedLogger[1];\n    }\n    const levelLogger = {\n        error: makeLogFn('error', logger, logLevel),\n        warn: makeLogFn('warn', logger, logLevel),\n        info: makeLogFn('info', logger, logLevel),\n        debug: makeLogFn('debug', logger, logLevel),\n    };\n    cachedLoggers.set(logger, [logLevel, levelLogger]);\n    return levelLogger;\n}\nexport const formatRequestDetails = (details) => {\n    if (details.options) {\n        details.options = { ...details.options };\n        delete details.options['headers']; // redundant + leaks internals\n    }\n    if (details.headers) {\n        details.headers = Object.fromEntries((details.headers instanceof Headers ? [...details.headers] : Object.entries(details.headers)).map(([name, value]) => [\n            name,\n            (name.toLowerCase() === 'authorization' ||\n                name.toLowerCase() === 'cookie' ||\n                name.toLowerCase() === 'set-cookie') ?\n                '***'\n                : value,\n        ]));\n    }\n    if ('retryOfRequestLogID' in details) {\n        if (details.retryOfRequestLogID) {\n            details.retryOf = details.retryOfRequestLogID;\n        }\n        delete details.retryOfRequestLogID;\n    }\n    return details;\n};\n//# sourceMappingURL=log.mjs.map","var _Stream_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { makeReadableStream } from \"../internal/shims.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"../internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"../internal/shims.mjs\";\nimport { isAbortError } from \"../internal/errors.mjs\";\nimport { encodeUTF8 } from \"../internal/utils/bytes.mjs\";\nimport { loggerFor } from \"../internal/utils/log.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller, client) {\n        this.iterator = iterator;\n        _Stream_client.set(this, void 0);\n        this.controller = controller;\n        __classPrivateFieldSet(this, _Stream_client, client, \"f\");\n    }\n    static fromSSEResponse(response, controller, client) {\n        let consumed = false;\n        const logger = client ? loggerFor(client) : console;\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null ||\n                        sse.event.startsWith('response.') ||\n                        sse.event.startsWith('image_edit.') ||\n                        sse.event.startsWith('image_generation.') ||\n                        sse.event.startsWith('transcript.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            logger.error(`Could not parse message into JSON:`, sse.data);\n                            logger.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, response.headers);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller, client) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    [(_Stream_client = new WeakMap(), Symbol.asyncIterator)]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller, __classPrivateFieldGet(this, _Stream_client, \"f\")),\n            new Stream(() => teeIterator(right), this.controller, __classPrivateFieldGet(this, _Stream_client, \"f\")),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        return makeReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encodeUTF8(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        if (typeof globalThis.navigator !== 'undefined' &&\n            globalThis.navigator.product === 'ReactNative') {\n            throw new OpenAIError(`The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`);\n        }\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _APIPromise_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { defaultParseResponse, addRequestID, } from \"../internal/parse.mjs\";\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(client, responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n        _APIPromise_client.set(this, void 0);\n        __classPrivateFieldSet(this, _APIPromise_client, client, \"f\");\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), this.responsePromise, async (client, props) => addRequestID(transform(await this.parseResponse(client, props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then((data) => this.parseResponse(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), data));\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\n_APIPromise_client = new WeakMap();\n//# sourceMappingURL=api-promise.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _AbstractPage_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { defaultParseResponse } from \"../internal/parse.mjs\";\nimport { APIPromise } from \"./api-promise.mjs\";\nimport { maybeObj } from \"../internal/utils/values.mjs\";\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageRequestOptions() != null;\n    }\n    async getNextPage() {\n        const nextOptions = this.nextPageRequestOptions();\n        if (!nextOptions) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(client, request, async (client, props) => new Page(client, props.response, await defaultParseResponse(client, props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    nextPageRequestOptions() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const data = this.getPaginatedItems();\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...maybeObj(this.options.query),\n                after: id,\n            },\n        };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { Stream } from \"../core/streaming.mjs\";\nimport { formatRequestDetails, loggerFor } from \"./utils/log.mjs\";\nexport async function defaultParseResponse(client, props) {\n    const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n    const body = await (async () => {\n        if (props.options.stream) {\n            loggerFor(client).debug('response', response.status, response.url, response.headers, response.body);\n            // Note: there is an invariant here that isn't represented in the type system\n            // that if you set `stream: true` the response type must also be `Stream<T>`\n            if (props.options.__streamClass) {\n                return props.options.__streamClass.fromSSEResponse(response, props.controller, client);\n            }\n            return Stream.fromSSEResponse(response, props.controller, client);\n        }\n        // fetch refuses to read the body when the status code is 204.\n        if (response.status === 204) {\n            return null;\n        }\n        if (props.options.__binaryResponse) {\n            return response;\n        }\n        const contentType = response.headers.get('content-type');\n        const mediaType = contentType?.split(';')[0]?.trim();\n        const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n        if (isJSON) {\n            const json = await response.json();\n            return addRequestID(json, response);\n        }\n        const text = await response.text();\n        return text;\n    })();\n    loggerFor(client).debug(`[${requestLogID}] response parsed`, formatRequestDetails({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        body,\n        durationMs: Date.now() - startTime,\n    }));\n    return body;\n}\nexport function addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n//# sourceMappingURL=parse.mjs.map","import { ReadableStreamFrom } from \"./shims.mjs\";\nexport const checkFileSupport = () => {\n    if (typeof File === 'undefined') {\n        const { process } = globalThis;\n        const isOldNode = typeof process?.versions?.node === 'string' && parseInt(process.versions.node.split('.')) < 20;\n        throw new Error('`File` is not defined as a global, which is required for file uploads.' +\n            (isOldNode ?\n                \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\"\n                : ''));\n    }\n};\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */\nexport function makeFile(fileBits, fileName, options) {\n    checkFileSupport();\n    return new File(fileBits, fileName ?? 'unknown_file', options);\n}\nexport function getName(value) {\n    return (((typeof value === 'object' &&\n        value !== null &&\n        (('name' in value && value.name && String(value.name)) ||\n            ('url' in value && value.url && String(value.url)) ||\n            ('filename' in value && value.filename && String(value.filename)) ||\n            ('path' in value && value.path && String(value.path)))) ||\n        '')\n        .split(/[\\\\/]/)\n        .pop() || undefined);\n}\nexport const isAsyncIterable = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts, fetch) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nexport const multipartFormRequestOptions = async (opts, fetch) => {\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nconst supportsFormDataMap = /* @__PURE__ */ new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */\nfunction supportsFormData(fetchObject) {\n    const fetch = typeof fetchObject === 'function' ? fetchObject : fetchObject.fetch;\n    const cached = supportsFormDataMap.get(fetch);\n    if (cached)\n        return cached;\n    const promise = (async () => {\n        try {\n            const FetchResponse = ('Response' in fetch ?\n                fetch.Response\n                : (await fetch('data:,')).constructor);\n            const data = new FormData();\n            if (data.toString() === (await new FetchResponse(data).text())) {\n                return false;\n            }\n            return true;\n        }\n        catch {\n            // avoid false negatives\n            return true;\n        }\n    })();\n    supportsFormDataMap.set(fetch, promise);\n    return promise;\n}\nexport const createForm = async (body, fetch) => {\n    if (!(await supportsFormData(fetch))) {\n        throw new TypeError('The provided fetch function does not support file uploads with the current global FormData class.');\n    }\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value) => value instanceof Blob && 'name' in value;\nconst isUploadable = (value) => typeof value === 'object' &&\n    value !== null &&\n    (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (value instanceof Response) {\n        form.append(key, makeFile([await value.blob()], getName(value)));\n    }\n    else if (isAsyncIterable(value)) {\n        form.append(key, makeFile([await new Response(ReadableStreamFrom(value)).blob()], getName(value)));\n    }\n    else if (isNamedBlob(value)) {\n        form.append(key, value, getName(value));\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","import { getName, makeFile, isAsyncIterable } from \"./uploads.mjs\";\nimport { checkFileSupport } from \"./uploads.mjs\";\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\nconst isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    checkFileSupport();\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        if (value instanceof File) {\n            return value;\n        }\n        return makeFile([await value.arrayBuffer()], value.name);\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop());\n        return makeFile(await getBytes(blob), name, options);\n    }\n    const parts = await getBytes(value);\n    name || (name = getName(value));\n    if (!options?.type) {\n        const type = parts.find((part) => typeof part === 'object' && 'type' in part && part.type);\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return makeFile(parts, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n    }\n    else if (isAsyncIterable(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(...(await getBytes(chunk))); // TODO, consider validating?\n        }\n    }\n    else {\n        const constructor = value?.constructor?.name;\n        throw new Error(`Unexpected data type: ${typeof value}${constructor ? `; constructor: ${constructor}` : ''}${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    if (typeof value !== 'object' || value === null)\n        return '';\n    const props = Object.getOwnPropertyNames(value);\n    return `; props: [${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n//# sourceMappingURL=to-file.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","import { OpenAIError } from \"../../core/error.mjs\";\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */\nexport function encodeURIPath(str) {\n    return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nconst EMPTY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.create(null));\nexport const createPathTagFunction = (pathEncoder = encodeURIPath) => function path(statics, ...params) {\n    // If there are no params, no processing is needed.\n    if (statics.length === 1)\n        return statics[0];\n    let postPath = false;\n    const invalidSegments = [];\n    const path = statics.reduce((previousValue, currentValue, index) => {\n        if (/[?#]/.test(currentValue)) {\n            postPath = true;\n        }\n        const value = params[index];\n        let encoded = (postPath ? encodeURIComponent : pathEncoder)('' + value);\n        if (index !== params.length &&\n            (value == null ||\n                (typeof value === 'object' &&\n                    // handle values from other realms\n                    value.toString ===\n                        Object.getPrototypeOf(Object.getPrototypeOf(value.hasOwnProperty ?? EMPTY) ?? EMPTY)\n                            ?.toString))) {\n            encoded = value + '';\n            invalidSegments.push({\n                start: previousValue.length + currentValue.length,\n                length: encoded.length,\n                error: `Value of type ${Object.prototype.toString\n                    .call(value)\n                    .slice(8, -1)} is not a valid path parameter`,\n            });\n        }\n        return previousValue + currentValue + (index === params.length ? '' : encoded);\n    }, '');\n    const pathOnly = path.split(/[?#]/, 1)[0];\n    const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n    let match;\n    // Find all invalid segments\n    while ((match = invalidSegmentPattern.exec(pathOnly)) !== null) {\n        invalidSegments.push({\n            start: match.index,\n            length: match[0].length,\n            error: `Value \"${match[0]}\" can\\'t be safely passed as a path parameter`,\n        });\n    }\n    invalidSegments.sort((a, b) => a.start - b.start);\n    if (invalidSegments.length > 0) {\n        let lastEnd = 0;\n        const underline = invalidSegments.reduce((acc, segment) => {\n            const spaces = ' '.repeat(segment.start - lastEnd);\n            const arrows = '^'.repeat(segment.length);\n            lastEnd = segment.start + segment.length;\n            return acc + spaces + arrows;\n        }, '');\n        throw new OpenAIError(`Path parameters result in path with invalid segments:\\n${invalidSegments\n            .map((e) => e.error)\n            .join('\\n')}\\n${path}\\n${underline}`);\n    }\n    return path;\n};\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */\nexport const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath);\n//# sourceMappingURL=path.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Get the messages in a stored chat completion. Only Chat Completions that have\n     * been created with the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n     *   'completion_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(completionID, query = {}, options) {\n        return this._client.getAPIList(path `/chat/completions/${completionID}/messages`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","var _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionToolCall, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"../error.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if (isToolMessage(message) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionToolCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionToolCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionToolCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n    }\n    async finalFunctionToolCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionToolCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionToolCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            // TODO: support audio here\n            const ret = {\n                ...message,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCall = function _AbstractChatCompletionRunner_getFinalFunctionToolCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult = function _AbstractChatCompletionRunner_getFinalFunctionToolCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError, } from \"../error.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */\n    retrieve(completionID, options) {\n        return this._client.get(path `/chat/completions/${completionID}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */\n    update(completionID, body, options) {\n        return this._client.post(path `/chat/completions/${completionID}`, { body, ...options });\n    }\n    /**\n     * List stored Chat Completions. Only Chat Completions that have been stored with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletion of client.chat.completions.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/chat/completions', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.delete('completion_id');\n     * ```\n     */\n    delete(completionID, options) {\n        return this._client.delete(path `/chat/completions/${completionID}`, options);\n    }\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\nexport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { isReadonlyArray } from \"./utils/values.mjs\";\nconst brand_privateNullableHeaders = /* @__PURE__ */ Symbol('brand.privateNullableHeaders');\nfunction* iterateHeaders(headers) {\n    if (!headers)\n        return;\n    if (brand_privateNullableHeaders in headers) {\n        const { values, nulls } = headers;\n        yield* values.entries();\n        for (const name of nulls) {\n            yield [name, null];\n        }\n        return;\n    }\n    let shouldClear = false;\n    let iter;\n    if (headers instanceof Headers) {\n        iter = headers.entries();\n    }\n    else if (isReadonlyArray(headers)) {\n        iter = headers;\n    }\n    else {\n        shouldClear = true;\n        iter = Object.entries(headers ?? {});\n    }\n    for (let row of iter) {\n        const name = row[0];\n        if (typeof name !== 'string')\n            throw new TypeError('expected header name to be a string');\n        const values = isReadonlyArray(row[1]) ? row[1] : [row[1]];\n        let didClear = false;\n        for (const value of values) {\n            if (value === undefined)\n                continue;\n            // Objects keys always overwrite older headers, they never append.\n            // Yield a null to clear the header before adding the new values.\n            if (shouldClear && !didClear) {\n                didClear = true;\n                yield [name, null];\n            }\n            yield [name, value];\n        }\n    }\n}\nexport const buildHeaders = (newHeaders) => {\n    const targetHeaders = new Headers();\n    const nullHeaders = new Set();\n    for (const headers of newHeaders) {\n        const seenHeaders = new Set();\n        for (const [name, value] of iterateHeaders(headers)) {\n            const lowerName = name.toLowerCase();\n            if (!seenHeaders.has(lowerName)) {\n                targetHeaders.delete(name);\n                seenHeaders.add(lowerName);\n            }\n            if (value === null) {\n                targetHeaders.delete(name);\n                nullHeaders.add(lowerName);\n            }\n            else {\n                targetHeaders.append(name, value);\n                nullHeaders.delete(lowerName);\n            }\n        }\n    }\n    return { [brand_privateNullableHeaders]: true, values: targetHeaders, nulls: nullHeaders };\n};\nexport const isEmptyHeaders = (headers) => {\n    for (const _ of iterateHeaders(headers))\n        return false;\n    return true;\n};\n//# sourceMappingURL=headers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/octet-stream' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', multipartFormRequestOptions({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: { model: body.model },\n        }, this._client));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }, this._client));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchID, options) {\n        return this._client.get(path `/batches/${batchID}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/batches', (CursorPage), { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchID, options) {\n        return this._client.post(path `/batches/${batchID}/cancel`, options);\n    }\n}\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    retrieve(assistantID, options) {\n        return this._client.get(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    update(assistantID, body, options) {\n        return this._client.post(path `/assistants/${assistantID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of assistants.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const assistant of client.beta.assistants.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/assistants', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted =\n     *   await client.beta.assistants.delete('assistant_id');\n     * ```\n     */\n    delete(assistantID, options) {\n        return this._client.delete(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=assistants.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class TranscriptionSessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/transcription_sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=transcription-sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nimport * as TranscriptionSessionsAPI from \"./transcription-sessions.mjs\";\nimport { TranscriptionSessions, } from \"./transcription-sessions.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n        this.transcriptionSessions = new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n//# sourceMappingURL=realtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}/messages`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(messageID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/messages/${messageID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of messages for a given thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/messages`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.delete(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Steps extends APIResource {\n    /**\n     * Retrieves a run step.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(stepID, params, options) {\n        const { thread_id, run_id, ...query } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of run steps belonging to a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(runID, params, options) {\n        const { thread_id, ...query } = params;\n        return this._client.getAPIList(path `/threads/${thread_id}/runs/${runID}/steps`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\nimport { encodeUTF8 } from \"./bytes.mjs\";\nexport const toBase64 = (data) => {\n    if (!data)\n        return '';\n    if (typeof globalThis.Buffer !== 'undefined') {\n        return globalThis.Buffer.from(data).toString('base64');\n    }\n    if (typeof data === 'string') {\n        data = encodeUTF8(data);\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(String.fromCharCode.apply(null, data));\n    }\n    throw new OpenAIError('Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport const fromBase64 = (str) => {\n    if (typeof globalThis.Buffer !== 'undefined') {\n        const buf = globalThis.Buffer.from(str, 'base64');\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    if (typeof atob !== 'undefined') {\n        const bstr = atob(str);\n        const buf = new Uint8Array(bstr.length);\n        for (let i = 0; i < bstr.length; i++) {\n            buf[i] = bstr.charCodeAt(i);\n        }\n        return buf;\n    }\n    throw new OpenAIError('Cannot decode base64 string; Expected `Buffer` or `atob` to be defined');\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */\nexport const toFloat32Array = (base64Str) => {\n    if (typeof Buffer !== 'undefined') {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, 'base64');\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    }\n    else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n};\n//# sourceMappingURL=base64.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof globalThis.process !== 'undefined') {\n        return globalThis.process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof globalThis.Deno !== 'undefined') {\n        return globalThis.Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\n//# sourceMappingURL=env.mjs.map","var _AssistantStream_instances, _a, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isObj } from \"../internal/utils.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new _a();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(runId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runToolAssistantStream(runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new _a();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (isObj(accValue) && isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, runId, params, options);\n    }\n}\n_a = AssistantStream, _AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = _a.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return _a.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n        case 'thread.run.incomplete':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","var _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createOrRetrieveResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if ('response_id' in params) {\n            stream = await client.responses.retrieve(params.response_id, { stream: true }, { ...options, signal: this.controller.signal, stream: true });\n            starting_after = params.starting_after ?? null;\n        }\n        else {\n            stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        }\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended)\n            return;\n        const maybeEmit = (name, event) => {\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    maybeEmit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    maybeEmit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    output.content.push(event.part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _Webhooks_instances, _Webhooks_validateSecret, _Webhooks_getRequiredHeader;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { InvalidWebhookSignatureError } from \"../error.mjs\";\nimport { APIResource } from \"../core/resource.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nexport class Webhooks extends APIResource {\n    constructor() {\n        super(...arguments);\n        _Webhooks_instances.add(this);\n    }\n    /**\n     * Validates that the given payload was sent by OpenAI and parses the payload.\n     */\n    async unwrap(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        await this.verifySignature(payload, headers, secret, tolerance);\n        return JSON.parse(payload);\n    }\n    /**\n     * Validates whether or not the webhook payload was sent by OpenAI.\n     *\n     * An error will be raised if the webhook payload was not sent by OpenAI.\n     *\n     * @param payload - The webhook payload\n     * @param headers - The webhook headers\n     * @param secret - The webhook secret (optional, will use client secret if not provided)\n     * @param tolerance - Maximum age of the webhook in seconds (default: 300 = 5 minutes)\n     */\n    async verifySignature(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        if (typeof crypto === 'undefined' ||\n            typeof crypto.subtle.importKey !== 'function' ||\n            typeof crypto.subtle.verify !== 'function') {\n            throw new Error('Webhook signature verification is only supported when the `crypto` global is defined');\n        }\n        __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_validateSecret).call(this, secret);\n        const headersObj = buildHeaders([headers]).values;\n        const signatureHeader = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-signature');\n        const timestamp = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-timestamp');\n        const webhookId = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-id');\n        // Validate timestamp to prevent replay attacks\n        const timestampSeconds = parseInt(timestamp, 10);\n        if (isNaN(timestampSeconds)) {\n            throw new InvalidWebhookSignatureError('Invalid webhook timestamp format');\n        }\n        const nowSeconds = Math.floor(Date.now() / 1000);\n        if (nowSeconds - timestampSeconds > tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too old');\n        }\n        if (timestampSeconds > nowSeconds + tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too new');\n        }\n        // Extract signatures from v1,<base64> format\n        // The signature header can have multiple values, separated by spaces.\n        // Each value is in the format v1,<base64>. We should accept if any match.\n        const signatures = signatureHeader\n            .split(' ')\n            .map((part) => (part.startsWith('v1,') ? part.substring(3) : part));\n        // Decode the secret if it starts with whsec_\n        const decodedSecret = secret.startsWith('whsec_') ?\n            Buffer.from(secret.replace('whsec_', ''), 'base64')\n            : Buffer.from(secret, 'utf-8');\n        // Create the signed payload: {webhook_id}.{timestamp}.{payload}\n        const signedPayload = webhookId ? `${webhookId}.${timestamp}.${payload}` : `${timestamp}.${payload}`;\n        // Import the secret as a cryptographic key for HMAC\n        const key = await crypto.subtle.importKey('raw', decodedSecret, { name: 'HMAC', hash: 'SHA-256' }, false, ['verify']);\n        // Check if any signature matches using timing-safe WebCrypto verify\n        for (const signature of signatures) {\n            try {\n                const signatureBytes = Buffer.from(signature, 'base64');\n                const isValid = await crypto.subtle.verify('HMAC', key, signatureBytes, new TextEncoder().encode(signedPayload));\n                if (isValid) {\n                    return; // Valid signature found\n                }\n            }\n            catch {\n                // Invalid base64 or signature format, continue to next signature\n                continue;\n            }\n        }\n        throw new InvalidWebhookSignatureError('The given webhook signature does not match the expected signature');\n    }\n}\n_Webhooks_instances = new WeakSet(), _Webhooks_validateSecret = function _Webhooks_validateSecret(secret) {\n    if (typeof secret !== 'string' || secret.length === 0) {\n        throw new Error(`The webhook secret must either be set using the env var, OPENAI_WEBHOOK_SECRET, on the client class, OpenAI({ webhookSecret: '123' }), or passed to this function`);\n    }\n}, _Webhooks_getRequiredHeader = function _Webhooks_getRequiredHeader(headers, name) {\n    if (!headers) {\n        throw new Error(`Headers are required`);\n    }\n    const value = headers.get(name);\n    if (value === null || value === undefined) {\n        throw new Error(`Missing required header: ${name}`);\n    }\n    return value;\n};\n//# sourceMappingURL=webhooks.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _OpenAI_instances, _a, _OpenAI_encoder, _OpenAI_baseURLOverridden;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"./internal/tslib.mjs\";\nimport { uuid4 } from \"./internal/utils/uuid.mjs\";\nimport { validatePositiveInteger, isAbsoluteURL, safeJSON } from \"./internal/utils/values.mjs\";\nimport { sleep } from \"./internal/utils/sleep.mjs\";\nimport { castToError, isAbortError } from \"./internal/errors.mjs\";\nimport { getPlatformHeaders } from \"./internal/detect-platform.mjs\";\nimport * as Shims from \"./internal/shims.mjs\";\nimport * as Opts from \"./internal/request-options.mjs\";\nimport * as qs from \"./internal/qs/index.mjs\";\nimport { VERSION } from \"./version.mjs\";\nimport * as Errors from \"./core/error.mjs\";\nimport * as Pagination from \"./core/pagination.mjs\";\nimport * as Uploads from \"./core/uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { APIPromise } from \"./core/api-promise.mjs\";\nimport { Batches, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Webhooks } from \"./resources/webhooks.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { Containers, } from \"./resources/containers/containers.mjs\";\nimport { Evals, } from \"./resources/evals/evals.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Graders } from \"./resources/graders/graders.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStores, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { isRunningInBrowser } from \"./internal/detect-platform.mjs\";\nimport { buildHeaders } from \"./internal/headers.mjs\";\nimport { readEnv } from \"./internal/utils/env.mjs\";\nimport { formatRequestDetails, loggerFor, parseLogLevel, } from \"./internal/utils/log.mjs\";\nimport { isEmptyObj } from \"./internal/utils/values.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string | null | undefined} [opts.webhookSecret=process.env['OPENAI_WEBHOOK_SECRET'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = readEnv('OPENAI_BASE_URL'), apiKey = readEnv('OPENAI_API_KEY'), organization = readEnv('OPENAI_ORG_ID') ?? null, project = readEnv('OPENAI_PROJECT_ID') ?? null, webhookSecret = readEnv('OPENAI_WEBHOOK_SECRET') ?? null, ...opts } = {}) {\n        _OpenAI_instances.add(this);\n        _OpenAI_encoder.set(this, void 0);\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.graders = new API.Graders(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.webhooks = new API.Webhooks(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this.evals = new API.Evals(this);\n        this.containers = new API.Containers(this);\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            webhookSecret,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        this.baseURL = options.baseURL;\n        this.timeout = options.timeout ?? _a.DEFAULT_TIMEOUT /* 10 minutes */;\n        this.logger = options.logger ?? console;\n        const defaultLogLevel = 'warn';\n        // Set default logLevel early so that we can log a warning in parseLogLevel.\n        this.logLevel = defaultLogLevel;\n        this.logLevel =\n            parseLogLevel(options.logLevel, 'ClientOptions.logLevel', this) ??\n                parseLogLevel(readEnv('OPENAI_LOG'), \"process.env['OPENAI_LOG']\", this) ??\n                defaultLogLevel;\n        this.fetchOptions = options.fetchOptions;\n        this.maxRetries = options.maxRetries ?? 2;\n        this.fetch = options.fetch ?? Shims.getDefaultFetch();\n        __classPrivateFieldSet(this, _OpenAI_encoder, Opts.FallbackEncoder, \"f\");\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n        this.webhookSecret = webhookSecret;\n    }\n    /**\n     * Create a new client instance re-using the same options given to the current client with optional overriding.\n     */\n    withOptions(options) {\n        const client = new this.constructor({\n            ...this._options,\n            baseURL: this.baseURL,\n            maxRetries: this.maxRetries,\n            timeout: this.timeout,\n            logger: this.logger,\n            logLevel: this.logLevel,\n            fetch: this.fetch,\n            fetchOptions: this.fetchOptions,\n            apiKey: this.apiKey,\n            organization: this.organization,\n            project: this.project,\n            webhookSecret: this.webhookSecret,\n            ...options,\n        });\n        return client;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    validateHeaders({ values, nulls }) {\n        return;\n    }\n    async authHeaders(opts) {\n        return buildHeaders([{ Authorization: `Bearer ${this.apiKey}` }]);\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    makeStatusError(status, error, message, headers) {\n        return Errors.APIError.generate(status, error, message, headers);\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = (!__classPrivateFieldGet(this, _OpenAI_instances, \"m\", _OpenAI_baseURLOverridden).call(this) && defaultBaseURL) || this.baseURL;\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => {\n            return { method, path, ...opts };\n        }));\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n    }\n    async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = await this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining,\n        });\n        await this.prepareRequest(req, { url, options });\n        /** Not an API request ID, just for correlating local log entries. */\n        const requestLogID = 'log_' + ((Math.random() * (1 << 24)) | 0).toString(16).padStart(6, '0');\n        const retryLogStr = retryOfRequestLogID === undefined ? '' : `, retryOf: ${retryOfRequestLogID}`;\n        const startTime = Date.now();\n        loggerFor(this).debug(`[${requestLogID}] sending request`, formatRequestDetails({\n            retryOfRequestLogID,\n            method: options.method,\n            url,\n            options,\n            headers: req.headers,\n        }));\n        if (options.signal?.aborted) {\n            throw new Errors.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        const headersTime = Date.now();\n        if (response instanceof Error) {\n            const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n            if (options.signal?.aborted) {\n                throw new Errors.APIUserAbortError();\n            }\n            // detect native connection timeout errors\n            // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n            // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n            // others do not provide enough information to distinguish timeouts from other connection errors\n            const isTimeout = isAbortError(response) ||\n                /timed? ?out/i.test(String(response) + ('cause' in response ? String(response.cause) : ''));\n            if (retriesRemaining) {\n                loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url,\n                    durationMs: headersTime - startTime,\n                    message: response.message,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n            }\n            loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - error; no more retries left`);\n            loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (error; no more retries left)`, formatRequestDetails({\n                retryOfRequestLogID,\n                url,\n                durationMs: headersTime - startTime,\n                message: response.message,\n            }));\n            if (isTimeout) {\n                throw new Errors.APIConnectionTimeoutError();\n            }\n            throw new Errors.APIConnectionError({ cause: response });\n        }\n        const specialHeaders = [...response.headers.entries()]\n            .filter(([name]) => name === 'x-request-id')\n            .map(([name, value]) => ', ' + name + ': ' + JSON.stringify(value))\n            .join('');\n        const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${response.ok ? 'succeeded' : 'failed'} with status ${response.status} in ${headersTime - startTime}ms`;\n        if (!response.ok) {\n            const shouldRetry = await this.shouldRetry(response);\n            if (retriesRemaining && shouldRetry) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                // We don't need the body of this response.\n                await Shims.CancelReadableStream(response.body);\n                loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url: response.url,\n                    status: response.status,\n                    headers: response.headers,\n                    durationMs: headersTime - startTime,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID, response.headers);\n            }\n            const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n            loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n            const errText = await response.text().catch((err) => castToError(err).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                retryOfRequestLogID,\n                url: response.url,\n                status: response.status,\n                headers: response.headers,\n                message: errMessage,\n                durationMs: Date.now() - startTime,\n            }));\n            const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n            throw err;\n        }\n        loggerFor(this).info(responseInfo);\n        loggerFor(this).debug(`[${requestLogID}] response start`, formatRequestDetails({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime,\n        }));\n        return { response, options, controller, requestLogID, retryOfRequestLogID, startTime };\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null, undefined);\n        return new Pagination.PagePromise(this, request, Page);\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, method, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const isReadableBody = (globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream) ||\n            (typeof options.body === 'object' && options.body !== null && Symbol.asyncIterator in options.body);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...(isReadableBody ? { duplex: 'half' } : {}),\n            method: 'GET',\n            ...options,\n        };\n        if (method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = method.toUpperCase();\n        }\n        try {\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            return await this.fetch.call(undefined, url, fetchOptions);\n        }\n        finally {\n            clearTimeout(timeout);\n        }\n    }\n    async shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.get('retry-after-ms');\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.get('retry-after');\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    async buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, defaultBaseURL } = options;\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const { bodyHeaders, body } = this.buildBody({ options });\n        const reqHeaders = await this.buildHeaders({ options: inputOptions, method, bodyHeaders, retryCount });\n        const req = {\n            method,\n            headers: reqHeaders,\n            ...(options.signal && { signal: options.signal }),\n            ...(globalThis.ReadableStream &&\n                body instanceof globalThis.ReadableStream && { duplex: 'half' }),\n            ...(body && { body }),\n            ...(this.fetchOptions ?? {}),\n            ...(options.fetchOptions ?? {}),\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    async buildHeaders({ options, method, bodyHeaders, retryCount, }) {\n        let idempotencyHeaders = {};\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const headers = buildHeaders([\n            idempotencyHeaders,\n            {\n                Accept: 'application/json',\n                'User-Agent': this.getUserAgent(),\n                'X-Stainless-Retry-Count': String(retryCount),\n                ...(options.timeout ? { 'X-Stainless-Timeout': String(Math.trunc(options.timeout / 1000)) } : {}),\n                ...getPlatformHeaders(),\n                'OpenAI-Organization': this.organization,\n                'OpenAI-Project': this.project,\n            },\n            await this.authHeaders(options),\n            this._options.defaultHeaders,\n            bodyHeaders,\n            options.headers,\n        ]);\n        this.validateHeaders(headers);\n        return headers.values;\n    }\n    buildBody({ options: { body, headers: rawHeaders } }) {\n        if (!body) {\n            return { bodyHeaders: undefined, body: undefined };\n        }\n        const headers = buildHeaders([rawHeaders]);\n        if (\n        // Pass raw type verbatim\n        ArrayBuffer.isView(body) ||\n            body instanceof ArrayBuffer ||\n            body instanceof DataView ||\n            (typeof body === 'string' &&\n                // Preserve legacy string encoding behavior for now\n                headers.values.has('content-type')) ||\n            // `Blob` is superset of `File`\n            body instanceof Blob ||\n            // `FormData` -> `multipart/form-data`\n            body instanceof FormData ||\n            // `URLSearchParams` -> `application/x-www-form-urlencoded`\n            body instanceof URLSearchParams ||\n            // Send chunked stream (each chunk has own `length`)\n            (globalThis.ReadableStream && body instanceof globalThis.ReadableStream)) {\n            return { bodyHeaders: undefined, body: body };\n        }\n        else if (typeof body === 'object' &&\n            (Symbol.asyncIterator in body ||\n                (Symbol.iterator in body && 'next' in body && typeof body.next === 'function'))) {\n            return { bodyHeaders: undefined, body: Shims.ReadableStreamFrom(body) };\n        }\n        else {\n            return __classPrivateFieldGet(this, _OpenAI_encoder, \"f\").call(this, { body, headers });\n        }\n    }\n}\n_a = OpenAI, _OpenAI_encoder = new WeakMap(), _OpenAI_instances = new WeakSet(), _OpenAI_baseURLOverridden = function _OpenAI_baseURLOverridden() {\n    return this.baseURL !== 'https://api.openai.com/v1';\n};\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.InvalidWebhookSignatureError = Errors.InvalidWebhookSignatureError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Graders = Graders;\nOpenAI.VectorStores = VectorStores;\nOpenAI.Webhooks = Webhooks;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\nOpenAI.Evals = Evals;\nOpenAI.Containers = Containers;\n//# sourceMappingURL=client.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../internal/utils/sleep.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(path `/threads/${threadID}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${runID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of runs belonging to a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/runs`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    cancel(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(run.id, { thread_id: threadId }, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(runId, params, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: run, response } = await this.retrieve(runId, params, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(runId, params, options) {\n        const run = await this.submitToolOutputs(runId, params, options);\n        return await this.poll(run.id, params, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(runId, params, options) {\n        return AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n    }\n}\nRuns.Steps = Steps;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    /**\n     * Create a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(body = {}, options) {\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(threadID, options) {\n        return this._client.get(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(threadID, options) {\n        return this._client.delete(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.id, { thread_id: run.thread_id }, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.Messages = Messages;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport { Assistants, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime, } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Content extends APIResource {\n    /**\n     * Retrieve Container File Content\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=content.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as ContentAPI from \"./content.mjs\";\nimport { Content } from \"./content.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { multipartFormRequestOptions } from \"../../../internal/uploads.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.content = new ContentAPI.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */\n    create(containerID, body, options) {\n        return this._client.post(path `/containers/${containerID}/files`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Retrieve Container File\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}`, options);\n    }\n    /**\n     * List Container files\n     */\n    list(containerID, query = {}, options) {\n        return this._client.getAPIList(path `/containers/${containerID}/files`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete Container File\n     */\n    delete(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.delete(path `/containers/${container_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nFiles.Content = Content;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FilesAPI from \"./files/files.mjs\";\nimport { Files, } from \"./files/files.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Containers extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create Container\n     */\n    create(body, options) {\n        return this._client.post('/containers', { body, ...options });\n    }\n    /**\n     * Retrieve Container\n     */\n    retrieve(containerID, options) {\n        return this._client.get(path `/containers/${containerID}`, options);\n    }\n    /**\n     * List Containers\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/containers', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete Container\n     */\n    delete(containerID, options) {\n        return this._client.delete(path `/containers/${containerID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nContainers.Files = Files;\n//# sourceMappingURL=containers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { loggerFor, toFloat32Array } from \"../internal/utils.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */\n    create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : 'base64';\n        if (hasUserProvidedEncodingFormat) {\n            loggerFor(this._client).debug('embeddings/user defined encoding_format:', body.encoding_format);\n        }\n        const response = this._client.post('/embeddings', {\n            body: {\n                ...body,\n                encoding_format: encoding_format,\n            },\n            ...options,\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        loggerFor(this._client).debug('embeddings/decoding base64 embeddings from base64');\n        return response._thenUnwrap((response) => {\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj) => {\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = toFloat32Array(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class OutputItems extends APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */\n    retrieve(outputItemID, params, options) {\n        const { eval_id, run_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n    }\n    /**\n     * Get a list of output items for an evaluation run.\n     */\n    list(runID, params, options) {\n        const { eval_id, ...query } = params;\n        return this._client.getAPIList(path `/evals/${eval_id}/runs/${runID}/output_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=output-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as OutputItemsAPI from \"./output-items.mjs\";\nimport { OutputItems, } from \"./output-items.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.outputItems = new OutputItemsAPI.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */\n    create(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}/runs`, { body, ...options });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */\n    retrieve(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Get a list of runs for an evaluation.\n     */\n    list(evalID, query = {}, options) {\n        return this._client.getAPIList(path `/evals/${evalID}/runs`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete an eval run.\n     */\n    delete(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.delete(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */\n    cancel(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.post(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n}\nRuns.OutputItems = OutputItems;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Evals extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */\n    create(body, options) {\n        return this._client.post('/evals', { body, ...options });\n    }\n    /**\n     * Get an evaluation by ID.\n     */\n    retrieve(evalID, options) {\n        return this._client.get(path `/evals/${evalID}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */\n    update(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}`, { body, ...options });\n    }\n    /**\n     * List evaluations for a project.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/evals', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete an evaluation.\n     */\n    delete(evalID, options) {\n        return this._client.delete(path `/evals/${evalID}`, options);\n    }\n}\nEvals.Runs = Runs;\n//# sourceMappingURL=evals.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nimport { sleep } from \"../internal/utils/sleep.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileID, options) {\n        return this._client.get(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns a list of files.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/files', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    delete(fileID, options) {\n        return this._client.delete(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileID, options) {\n        return this._client.get(path `/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class Methods extends APIResource {\n}\n//# sourceMappingURL=methods.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nexport class Graders extends APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     * });\n     * ```\n     */\n    run(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/run', { body, ...options });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */\n    validate(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/validate', { body, ...options });\n    }\n}\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as GradersAPI from \"./graders.mjs\";\nimport { Graders, } from \"./graders.mjs\";\nexport class Alpha extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graders = new GradersAPI.Graders(this._client);\n    }\n}\nAlpha.Graders = Graders;\n//# sourceMappingURL=alpha.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { Page } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Permissions extends APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, (Page), { body, method: 'post', ...options });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to view all permissions for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.retrieve(\n     *     'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     *   );\n     * ```\n     */\n    retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        return this._client.get(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.delete(\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *     {\n     *       fine_tuned_model_checkpoint:\n     *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     },\n     *   );\n     * ```\n     */\n    delete(permissionID, params, options) {\n        const { fine_tuned_model_checkpoint } = params;\n        return this._client.delete(path `/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`, options);\n    }\n}\n//# sourceMappingURL=permissions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as PermissionsAPI from \"./permissions.mjs\";\nimport { Permissions, } from \"./permissions.mjs\";\nexport class Checkpoints extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.permissions = new PermissionsAPI.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = Permissions;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Checkpoints extends APIResource {\n    /**\n     * List checkpoints for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/checkpoints`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    retrieve(fineTuningJobID, options) {\n        return this._client.get(path `/fine_tuning/jobs/${fineTuningJobID}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/fine_tuning/jobs', (CursorPage), { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    cancel(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n    }\n    /**\n     * Get status updates for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    listEvents(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/events`, (CursorPage), { query, ...options });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    pause(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    resume(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n    }\n}\nJobs.Checkpoints = Checkpoints;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as MethodsAPI from \"./methods.mjs\";\nimport { Methods, } from \"./methods.mjs\";\nimport * as AlphaAPI from \"./alpha/alpha.mjs\";\nimport { Alpha } from \"./alpha/alpha.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints/checkpoints.mjs\";\nimport { Checkpoints } from \"./checkpoints/checkpoints.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.methods = new MethodsAPI.Methods(this._client);\n        this.jobs = new JobsAPI.Jobs(this._client);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n        this.alpha = new AlphaAPI.Alpha(this._client);\n    }\n}\nFineTuning.Methods = Methods;\nFineTuning.Jobs = Jobs;\nFineTuning.Checkpoints = Checkpoints;\nFineTuning.Alpha = Alpha;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class GraderModels extends APIResource {\n}\n//# sourceMappingURL=grader-models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as GraderModelsAPI from \"./grader-models.mjs\";\nimport { GraderModels, } from \"./grader-models.mjs\";\nexport class Graders extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graderModels = new GraderModelsAPI.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = GraderModels;\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    edit(body, options) {\n        return this._client.post('/images/edits', multipartFormRequestOptions({ body, ...options, stream: body.stream ?? false }, this._client));\n    }\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { Page } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(path `/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', (Page), options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    delete(model, options) {\n        return this._client.delete(path `/models/${model}`, options);\n    }\n}\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class InputItems extends APIResource {\n    /**\n     * Returns a list of input items for a given response.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const responseItem of client.responses.inputItems.list(\n     *   'response_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(responseID, query = {}, options) {\n        return this._client.getAPIList(path `/responses/${responseID}/input_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=input-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseID, query = {}, options) {\n        return this._client.get(path `/responses/${responseID}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false,\n        })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.delete(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    delete(responseID, options) {\n        return this._client.delete(path `/responses/${responseID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    cancel(responseID, options) {\n        return this._client.post(path `/responses/${responseID}/cancel`, options);\n    }\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/parts`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadID, options) {\n        return this._client.post(path `/uploads/${uploadID}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils/sleep.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/file_batches`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    /**\n     * Returns a list of vector store files in a batch.\n     */\n    listFiles(batchID, params, options) {\n        const { vector_store_id, ...query } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/files`, (CursorPage), { query, ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreID, batchID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: batch, response } = await this.retrieve(batchID, { vector_store_id: vectorStoreID }, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\n//# sourceMappingURL=file-batches.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/files`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(fileID, params, options) {\n        const { vector_store_id, ...body } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector store files.\n     */\n    list(vectorStoreID, query = {}, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/files`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    delete(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.delete(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreID, fileID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const fileResponse = await this.retrieve(fileID, {\n                vector_store_id: vectorStoreID,\n            }, { ...options, headers }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/files/${fileID}/content`, (Page), { ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Files, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreID, options) {\n        return this._client.get(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector stores.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/vector_stores', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    delete(vectorStoreID, options) {\n        return this._client.delete(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreID, body, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/search`, (Page), {\n            body,\n            method: 'post',\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\nVectorStores.Files = Files;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","import * as Errors from \"./error.mjs\";\nimport { isObj, readEnv } from \"./internal/utils.mjs\";\nimport { OpenAI } from \"./client.mjs\";\nimport { buildHeaders } from \"./internal/headers.mjs\";\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = readEnv('OPENAI_BASE_URL'), apiKey = readEnv('AZURE_OPENAI_API_KEY'), apiVersion = readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    async buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === 'function') {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== 'string') {\n                throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    async authHeaders(opts) {\n        return;\n    }\n    async prepareOptions(opts) {\n        opts.headers = buildHeaders([opts.headers]);\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */\n        if (opts.headers.values.get('Authorization') || opts.headers.values.get('api-key')) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        if (token) {\n            opts.headers.values.set('Authorization', `Bearer ${token}`);\n        }\n        else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers.values.set('api-key', this.apiKey);\n        }\n        else {\n            throw new Errors.OpenAIError('Unable to handle auth');\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n    '/batches',\n    '/images/edits',\n]);\nconst API_KEY_SENTINEL = '<Missing Key>';\n//# sourceMappingURL=azure.mjs.map","import { loadEnv } from '@openai/agents-core/_shims';\nimport METADATA from \"./metadata.mjs\";\nexport const DEFAULT_OPENAI_API = 'responses';\nexport const DEFAULT_OPENAI_MODEL = 'gpt-4.1';\nlet _defaultOpenAIAPI = DEFAULT_OPENAI_API;\nlet _defaultOpenAIClient;\nlet _defaultOpenAIKey = undefined;\nlet _defaultTracingApiKey = undefined;\nexport function setTracingExportApiKey(key) {\n    _defaultTracingApiKey = key;\n}\nexport function getTracingExportApiKey() {\n    return _defaultTracingApiKey ?? loadEnv().OPENAI_API_KEY;\n}\nexport function shouldUseResponsesByDefault() {\n    return _defaultOpenAIAPI === 'responses';\n}\nexport function setOpenAIAPI(value) {\n    _defaultOpenAIAPI = value;\n}\nexport function setDefaultOpenAIClient(client) {\n    _defaultOpenAIClient = client;\n}\nexport function getDefaultOpenAIClient() {\n    return _defaultOpenAIClient;\n}\nexport function setDefaultOpenAIKey(key) {\n    _defaultOpenAIKey = key;\n}\nexport function getDefaultOpenAIKey() {\n    return _defaultOpenAIKey ?? loadEnv().OPENAI_API_KEY;\n}\nexport const HEADERS = {\n    'User-Agent': `Agents/JavaScript ${METADATA.version}`,\n};\n//# sourceMappingURL=defaults.mjs.map","import { getLogger } from '@openai/agents-core';\nconst logger = getLogger('openai-agents:openai');\nexport default logger;\n//# sourceMappingURL=logger.mjs.map","import { z } from '@openai/zod/v3';\n// -----------------------------------------------------\n// Status enums\n// -----------------------------------------------------\nexport const WebSearchStatus = z\n    .enum(['in_progress', 'completed', 'searching', 'failed'])\n    .default('failed');\nexport const FileSearchStatus = z\n    .enum(['in_progress', 'completed', 'searching', 'failed', 'incomplete'])\n    .default('failed');\nexport const CodeInterpreterStatus = z\n    .enum(['in_progress', 'completed', 'interpreting'])\n    .default('in_progress');\nexport const ImageGenerationStatus = z\n    .enum(['in_progress', 'completed', 'generating', 'failed'])\n    .default('failed');\n/**\n * Adds web search abilities to your agent\n * @param options Additional configuration for the web search like specifying the location of your agent\n * @returns a web search tool definition\n */\nexport function webSearchTool(options = {}) {\n    const providerData = {\n        type: 'web_search',\n        name: options.name ?? 'web_search_preview',\n        user_location: options.userLocation,\n        search_context_size: options.searchContextSize ?? 'medium',\n    };\n    return {\n        type: 'hosted_tool',\n        name: options.name ?? 'web_search_preview',\n        providerData,\n    };\n}\n/**\n * Adds file search abilities to your agent\n * @param vectorStoreIds The IDs of the vector stores to search.\n * @param options Additional configuration for the file search like specifying the maximum number of results to return.\n * @returns a file search tool definition\n */\nexport function fileSearchTool(vectorStoreIds, options = {}) {\n    const vectorIds = Array.isArray(vectorStoreIds)\n        ? vectorStoreIds\n        : [vectorStoreIds];\n    const providerData = {\n        type: 'file_search',\n        name: options.name ?? 'file_search',\n        vector_store_ids: vectorIds,\n        max_num_results: options.maxNumResults,\n        include_search_results: options.includeSearchResults,\n        ranking_options: options.rankingOptions,\n        filters: options.filters,\n    };\n    return {\n        type: 'hosted_tool',\n        name: options.name ?? 'file_search',\n        providerData,\n    };\n}\n/**\n * Adds code interpreter abilities to your agent\n * @param options Additional configuration for the code interpreter\n * @returns a code interpreter tool definition\n */\nexport function codeInterpreterTool(options = {}) {\n    const providerData = {\n        type: 'code_interpreter',\n        name: options.name ?? 'code_interpreter',\n        container: options.container ?? { type: 'auto' },\n    };\n    return {\n        type: 'hosted_tool',\n        name: options.name ?? 'code_interpreter',\n        providerData,\n    };\n}\n/**\n * Adds image generation abilities to your agent\n * @param options Additional configuration for the image generation\n * @returns an image generation tool definition\n */\nexport function imageGenerationTool(options = {}) {\n    const providerData = {\n        type: 'image_generation',\n        name: options.name ?? 'image_generation',\n        background: options.background,\n        input_fidelity: options.inputFidelity,\n        input_image_mask: options.inputImageMask,\n        model: options.model,\n        moderation: options.moderation,\n        output_compression: options.outputCompression,\n        output_format: options.outputFormat,\n        partial_images: options.partialImages,\n        quality: options.quality,\n        size: options.size,\n    };\n    return {\n        type: 'hosted_tool',\n        name: options.name ?? 'image_generation',\n        providerData,\n    };\n}\n// HostedMCPTool exists in agents-core package\n//# sourceMappingURL=tools.mjs.map","/**\n * Converts camelCase or snake_case keys of an object to snake_case recursively.\n */\nexport function camelOrSnakeToSnakeCase(providerData) {\n    if (!providerData ||\n        typeof providerData !== 'object' ||\n        Array.isArray(providerData)) {\n        return providerData;\n    }\n    const result = {};\n    for (const [key, value] of Object.entries(providerData)) {\n        const snakeKey = key.replace(/([A-Z])/g, '_$1').toLowerCase();\n        result[snakeKey] = camelOrSnakeToSnakeCase(value);\n    }\n    return result;\n}\n//# sourceMappingURL=providerData.mjs.map","import { Usage, withResponseSpan, createResponseSpan, setCurrentSpan, resetCurrentSpan, UserError, } from '@openai/agents-core';\nimport logger from \"./logger.mjs\";\nimport { z } from '@openai/zod/v3';\nimport { HEADERS } from \"./defaults.mjs\";\nimport { CodeInterpreterStatus, FileSearchStatus, ImageGenerationStatus, WebSearchStatus, } from \"./tools.mjs\";\nimport { camelOrSnakeToSnakeCase } from \"./utils/providerData.mjs\";\nconst HostedToolChoice = z.enum([\n    'file_search',\n    'web_search_preview',\n    'computer_use_preview',\n    'code_interpreter',\n    'image_generation',\n    'mcp',\n]);\nconst DefaultToolChoice = z.enum(['auto', 'required', 'none']);\nfunction getToolChoice(toolChoice) {\n    if (typeof toolChoice === 'undefined') {\n        return undefined;\n    }\n    const resultDefaultCheck = DefaultToolChoice.safeParse(toolChoice);\n    if (resultDefaultCheck.success) {\n        return resultDefaultCheck.data;\n    }\n    const result = HostedToolChoice.safeParse(toolChoice);\n    if (result.success) {\n        return { type: result.data };\n    }\n    return { type: 'function', name: toolChoice };\n}\nfunction getResponseFormat(outputType) {\n    if (outputType === 'text') {\n        return undefined;\n    }\n    return {\n        format: outputType,\n    };\n}\nfunction getTools(tools, handoffs) {\n    const openaiTools = [];\n    const include = [];\n    for (const tool of tools) {\n        const { tool: openaiTool, include: openaiIncludes } = converTool(tool);\n        openaiTools.push(openaiTool);\n        if (openaiIncludes && openaiIncludes.length > 0) {\n            for (const item of openaiIncludes) {\n                include.push(item);\n            }\n        }\n    }\n    return {\n        tools: [...openaiTools, ...handoffs.map(getHandoffTool)],\n        include,\n    };\n}\nfunction converTool(tool) {\n    if (tool.type === 'function') {\n        return {\n            tool: {\n                type: 'function',\n                name: tool.name,\n                description: tool.description,\n                parameters: tool.parameters,\n                strict: tool.strict,\n            },\n            include: undefined,\n        };\n    }\n    else if (tool.type === 'computer') {\n        return {\n            tool: {\n                type: 'computer_use_preview',\n                environment: tool.environment,\n                display_width: tool.dimensions[0],\n                display_height: tool.dimensions[1],\n            },\n            include: undefined,\n        };\n    }\n    else if (tool.type === 'hosted_tool') {\n        if (tool.providerData?.type === 'web_search') {\n            return {\n                tool: {\n                    type: 'web_search_preview',\n                    user_location: tool.providerData.user_location,\n                    search_context_size: tool.providerData.search_context_size,\n                },\n                include: undefined,\n            };\n        }\n        else if (tool.providerData?.type === 'file_search') {\n            return {\n                tool: {\n                    type: 'file_search',\n                    vector_store_ids: tool.providerData.vector_store_ids ||\n                        // for backwards compatibility\n                        (typeof tool.providerData.vector_store_id === 'string'\n                            ? [tool.providerData.vector_store_id]\n                            : tool.providerData.vector_store_id),\n                    max_num_results: tool.providerData.max_num_results,\n                    ranking_options: tool.providerData.ranking_options,\n                    filters: tool.providerData.filters,\n                },\n                include: tool.providerData.include_search_results\n                    ? ['file_search_call.results']\n                    : undefined,\n            };\n        }\n        else if (tool.providerData?.type === 'code_interpreter') {\n            return {\n                tool: {\n                    type: 'code_interpreter',\n                    container: tool.providerData.container,\n                },\n                include: undefined,\n            };\n        }\n        else if (tool.providerData?.type === 'image_generation') {\n            return {\n                tool: {\n                    type: 'image_generation',\n                    background: tool.providerData.background,\n                    input_fidelity: tool.providerData.input_fidelity,\n                    input_image_mask: tool.providerData.input_image_mask,\n                    model: tool.providerData.model,\n                    moderation: tool.providerData.moderation,\n                    output_compression: tool.providerData.output_compression,\n                    output_format: tool.providerData.output_format,\n                    partial_images: tool.providerData.partial_images,\n                    quality: tool.providerData.quality,\n                    size: tool.providerData.size,\n                },\n                include: undefined,\n            };\n        }\n        else if (tool.providerData?.type === 'mcp') {\n            return {\n                tool: {\n                    type: 'mcp',\n                    server_label: tool.providerData.server_label,\n                    server_url: tool.providerData.server_url,\n                    allowed_tools: tool.providerData.allowed_tools,\n                    headers: tool.providerData.headers,\n                    require_approval: convertMCPRequireApproval(tool.providerData.require_approval),\n                },\n                include: undefined,\n            };\n        }\n        else if (tool.providerData) {\n            return {\n                tool: tool.providerData,\n                include: undefined,\n            };\n        }\n    }\n    throw new Error(`Unsupported tool type: ${JSON.stringify(tool)}`);\n}\nfunction convertMCPRequireApproval(requireApproval) {\n    if (requireApproval === 'never' || requireApproval === undefined) {\n        return 'never';\n    }\n    if (requireApproval === 'always') {\n        return 'always';\n    }\n    return {\n        never: { tool_names: requireApproval.never?.tool_names },\n        always: { tool_names: requireApproval.always?.tool_names },\n    };\n}\nfunction getHandoffTool(handoff) {\n    return {\n        name: handoff.toolName,\n        description: handoff.toolDescription,\n        parameters: handoff.inputJsonSchema,\n        strict: handoff.strictJsonSchema,\n        type: 'function',\n    };\n}\nfunction getInputMessageContent(entry) {\n    if (entry.type === 'input_text') {\n        return {\n            type: 'input_text',\n            text: entry.text,\n            ...camelOrSnakeToSnakeCase(entry.providerData),\n        };\n    }\n    else if (entry.type === 'input_image') {\n        const imageEntry = {\n            type: 'input_image',\n            detail: 'auto',\n        };\n        if (typeof entry.image === 'string') {\n            imageEntry.image_url = entry.image;\n        }\n        else {\n            imageEntry.file_id = entry.image.id;\n        }\n        return {\n            ...imageEntry,\n            ...camelOrSnakeToSnakeCase(entry.providerData),\n        };\n    }\n    else if (entry.type === 'input_file') {\n        const fileEntry = {\n            type: 'input_file',\n        };\n        if (typeof entry.file === 'string') {\n            if (entry.file.startsWith('data:')) {\n                fileEntry.file_data = entry.file;\n            }\n            else if (entry.file.startsWith('https://')) {\n                fileEntry.file_url = entry.file;\n            }\n            else {\n                throw new UserError(`Unsupported string data for file input. If you're trying to pass an uploaded file's ID, use an object with the ID property instead.`);\n            }\n        }\n        else if ('id' in entry.file) {\n            fileEntry.file_id = entry.file.id;\n        }\n        else if ('url' in entry.file) {\n            fileEntry.file_url = entry.file.url;\n        }\n        return {\n            ...fileEntry,\n            ...camelOrSnakeToSnakeCase(entry.providerData),\n        };\n    }\n    throw new UserError(`Unsupported input content type: ${JSON.stringify(entry)}`);\n}\nfunction getOutputMessageContent(entry) {\n    if (entry.type === 'output_text') {\n        return {\n            type: 'output_text',\n            text: entry.text,\n            annotations: [],\n            ...camelOrSnakeToSnakeCase(entry.providerData),\n        };\n    }\n    if (entry.type === 'refusal') {\n        return {\n            type: 'refusal',\n            refusal: entry.refusal,\n            ...camelOrSnakeToSnakeCase(entry.providerData),\n        };\n    }\n    throw new UserError(`Unsupported output content type: ${JSON.stringify(entry)}`);\n}\nfunction getMessageItem(item) {\n    if (item.role === 'system') {\n        return {\n            id: item.id,\n            role: 'system',\n            content: item.content,\n            ...camelOrSnakeToSnakeCase(item.providerData),\n        };\n    }\n    if (item.role === 'user') {\n        if (typeof item.content === 'string') {\n            return {\n                id: item.id,\n                role: 'user',\n                content: item.content,\n                ...camelOrSnakeToSnakeCase(item.providerData),\n            };\n        }\n        return {\n            id: item.id,\n            role: 'user',\n            content: item.content.map(getInputMessageContent),\n            ...camelOrSnakeToSnakeCase(item.providerData),\n        };\n    }\n    if (item.role === 'assistant') {\n        const assistantMessage = {\n            type: 'message',\n            id: item.id,\n            role: 'assistant',\n            content: item.content.map(getOutputMessageContent),\n            status: item.status,\n            ...camelOrSnakeToSnakeCase(item.providerData),\n        };\n        return assistantMessage;\n    }\n    throw new UserError(`Unsupported item ${JSON.stringify(item)}`);\n}\nfunction isMessageItem(item) {\n    if (item.type === 'message') {\n        return true;\n    }\n    if (typeof item.type === 'undefined' && typeof item.role === 'string') {\n        return true;\n    }\n    return false;\n}\nfunction getPrompt(prompt) {\n    if (!prompt) {\n        return undefined;\n    }\n    const transformedVariables = {};\n    for (const [key, value] of Object.entries(prompt.variables ?? {})) {\n        if (typeof value === 'string') {\n            transformedVariables[key] = value;\n        }\n        else if (typeof value === 'object') {\n            transformedVariables[key] = getInputMessageContent(value);\n        }\n    }\n    return {\n        id: prompt.promptId,\n        version: prompt.version,\n        variables: transformedVariables,\n    };\n}\nfunction getInputItems(input) {\n    if (typeof input === 'string') {\n        return [\n            {\n                role: 'user',\n                content: input,\n            },\n        ];\n    }\n    return input.map((item) => {\n        if (isMessageItem(item)) {\n            return getMessageItem(item);\n        }\n        if (item.type === 'function_call') {\n            const entry = {\n                id: item.id,\n                type: 'function_call',\n                name: item.name,\n                call_id: item.callId,\n                arguments: item.arguments,\n                status: item.status,\n                ...camelOrSnakeToSnakeCase(item.providerData),\n            };\n            return entry;\n        }\n        if (item.type === 'function_call_result') {\n            if (item.output.type !== 'text') {\n                throw new UserError(`Unsupported tool result type: ${JSON.stringify(item.output)}`);\n            }\n            const entry = {\n                type: 'function_call_output',\n                id: item.id,\n                call_id: item.callId,\n                output: item.output.text,\n                status: item.status,\n                ...camelOrSnakeToSnakeCase(item.providerData),\n            };\n            return entry;\n        }\n        if (item.type === 'reasoning') {\n            const entry = {\n                id: item.id,\n                type: 'reasoning',\n                summary: item.content.map((content) => ({\n                    type: 'summary_text',\n                    text: content.text,\n                    ...camelOrSnakeToSnakeCase(content.providerData),\n                })),\n                encrypted_content: item.providerData?.encryptedContent,\n                ...camelOrSnakeToSnakeCase(item.providerData),\n            };\n            return entry;\n        }\n        if (item.type === 'computer_call') {\n            const entry = {\n                type: 'computer_call',\n                call_id: item.callId,\n                id: item.id,\n                action: item.action,\n                status: item.status,\n                pending_safety_checks: [],\n                ...camelOrSnakeToSnakeCase(item.providerData),\n            };\n            return entry;\n        }\n        if (item.type === 'computer_call_result') {\n            const entry = {\n                type: 'computer_call_output',\n                id: item.id,\n                call_id: item.callId,\n                output: buildResponseOutput(item),\n                status: item.providerData?.status,\n                acknowledged_safety_checks: item.providerData?.acknowledgedSafetyChecks,\n                ...camelOrSnakeToSnakeCase(item.providerData),\n            };\n            return entry;\n        }\n        if (item.type === 'hosted_tool_call') {\n            if (item.providerData?.type === 'web_search_call' ||\n                item.providerData?.type === 'web_search' // for backward compatibility\n            ) {\n                const entry = {\n                    ...camelOrSnakeToSnakeCase(item.providerData), // place here to prioritize the below fields\n                    type: 'web_search_call',\n                    id: item.id,\n                    status: WebSearchStatus.parse(item.status ?? 'failed'),\n                };\n                return entry;\n            }\n            if (item.providerData?.type === 'file_search_call' ||\n                item.providerData?.type === 'file_search' // for backward compatibility\n            ) {\n                const entry = {\n                    ...camelOrSnakeToSnakeCase(item.providerData), // place here to prioritize the below fields\n                    type: 'file_search_call',\n                    id: item.id,\n                    status: FileSearchStatus.parse(item.status ?? 'failed'),\n                    queries: item.providerData?.queries ?? [],\n                    results: item.providerData?.results,\n                };\n                return entry;\n            }\n            if (item.providerData?.type === 'code_interpreter_call' ||\n                item.providerData?.type === 'code_interpreter' // for backward compatibility\n            ) {\n                const entry = {\n                    ...camelOrSnakeToSnakeCase(item.providerData), // place here to prioritize the below fields\n                    type: 'code_interpreter_call',\n                    id: item.id,\n                    code: item.providerData?.code ?? '',\n                    // This property used to be results, so keeping both for backward compatibility\n                    // That said, this property cannot be passed from a user, so it's just API's internal data.\n                    outputs: item.providerData?.outputs ?? item.providerData?.results ?? [],\n                    status: CodeInterpreterStatus.parse(item.status ?? 'failed'),\n                    container_id: item.providerData?.containerId,\n                };\n                return entry;\n            }\n            if (item.providerData?.type === 'image_generation_call' ||\n                item.providerData?.type === 'image_generation' // for backward compatibility\n            ) {\n                const entry = {\n                    ...camelOrSnakeToSnakeCase(item.providerData), // place here to prioritize the below fields\n                    type: 'image_generation_call',\n                    id: item.id,\n                    result: item.providerData?.result ?? null,\n                    status: ImageGenerationStatus.parse(item.status ?? 'failed'),\n                };\n                return entry;\n            }\n            if (item.providerData?.type === 'mcp_list_tools' ||\n                item.name === 'mcp_list_tools') {\n                const providerData = item.providerData;\n                const entry = {\n                    ...camelOrSnakeToSnakeCase(item.providerData),\n                    type: 'mcp_list_tools',\n                    id: item.id,\n                    tools: camelOrSnakeToSnakeCase(providerData.tools),\n                    server_label: providerData.server_label,\n                    error: providerData.error,\n                };\n                return entry;\n            }\n            else if (item.providerData?.type === 'mcp_approval_request' ||\n                item.name === 'mcp_approval_request') {\n                const providerData = item.providerData;\n                const entry = {\n                    ...camelOrSnakeToSnakeCase(item.providerData), // place here to prioritize the below fields\n                    type: 'mcp_approval_request',\n                    id: providerData.id ?? item.id,\n                    name: providerData.name,\n                    arguments: providerData.arguments,\n                    server_label: providerData.server_label,\n                };\n                return entry;\n            }\n            else if (item.providerData?.type === 'mcp_approval_response' ||\n                item.name === 'mcp_approval_response') {\n                const providerData = item.providerData;\n                const entry = {\n                    ...camelOrSnakeToSnakeCase(providerData),\n                    type: 'mcp_approval_response',\n                    id: providerData.id,\n                    approve: providerData.approve,\n                    approval_request_id: providerData.approval_request_id,\n                    reason: providerData.reason,\n                };\n                return entry;\n            }\n            else if (item.providerData?.type === 'mcp_call' ||\n                item.name === 'mcp_call') {\n                const providerData = item.providerData;\n                const entry = {\n                    // output, which can be a large text string, is optional here, so we don't include it\n                    // output: item.output,\n                    ...camelOrSnakeToSnakeCase(providerData), // place here to prioritize the below fields\n                    type: 'mcp_call',\n                    id: providerData.id ?? item.id,\n                    name: providerData.name,\n                    arguments: providerData.arguments,\n                    server_label: providerData.server_label,\n                    error: providerData.error,\n                };\n                return entry;\n            }\n            throw new UserError(`Unsupported built-in tool call type: ${JSON.stringify(item)}`);\n        }\n        if (item.type === 'unknown') {\n            return {\n                ...camelOrSnakeToSnakeCase(item.providerData), // place here to prioritize the below fields\n                id: item.id,\n            };\n        }\n        const exhaustive = item;\n        throw new UserError(`Unsupported item ${JSON.stringify(exhaustive)}`);\n    });\n}\n// As of May 29, the output is always screenshot putput\nfunction buildResponseOutput(item) {\n    return {\n        type: 'computer_screenshot',\n        image_url: item.output.data,\n    };\n}\nfunction convertToMessageContentItem(item) {\n    if (item.type === 'output_text') {\n        const { type, text, ...remainingItem } = item;\n        return {\n            type,\n            text,\n            ...remainingItem,\n        };\n    }\n    if (item.type === 'refusal') {\n        const { type, refusal, ...remainingItem } = item;\n        return {\n            type,\n            refusal,\n            ...remainingItem,\n        };\n    }\n    throw new Error(`Unsupported message content type: ${JSON.stringify(item)}`);\n}\nfunction convertToOutputItem(items) {\n    return items.map((item) => {\n        if (item.type === 'message') {\n            const { id, type, role, content, status, ...providerData } = item;\n            return {\n                id,\n                type,\n                role,\n                content: content.map(convertToMessageContentItem),\n                status,\n                providerData,\n            };\n        }\n        else if (item.type === 'file_search_call' ||\n            item.type === 'web_search_call' ||\n            item.type === 'image_generation_call' ||\n            item.type === 'code_interpreter_call') {\n            const { status, ...remainingItem } = item;\n            let outputData = undefined;\n            if ('result' in remainingItem && remainingItem.result !== null) {\n                // type: \"image_generation_call\"\n                outputData = remainingItem.result;\n                delete remainingItem.result;\n            }\n            const output = {\n                type: 'hosted_tool_call',\n                id: item.id,\n                name: item.type,\n                status,\n                output: outputData,\n                providerData: remainingItem,\n            };\n            return output;\n        }\n        else if (item.type === 'function_call') {\n            const { call_id, name, status, arguments: args, ...providerData } = item;\n            const output = {\n                type: 'function_call',\n                id: item.id,\n                callId: call_id,\n                name,\n                status,\n                arguments: args,\n                providerData,\n            };\n            return output;\n        }\n        else if (item.type === 'computer_call') {\n            const { call_id, status, action, ...providerData } = item;\n            const output = {\n                type: 'computer_call',\n                id: item.id,\n                callId: call_id,\n                status,\n                action,\n                providerData,\n            };\n            return output;\n        }\n        else if (item.type === 'mcp_list_tools') {\n            const { ...providerData } = item;\n            const output = {\n                type: 'hosted_tool_call',\n                id: item.id,\n                name: item.type,\n                status: 'completed',\n                output: undefined,\n                providerData,\n            };\n            return output;\n        }\n        else if (item.type === 'mcp_approval_request') {\n            const { ...providerData } = item;\n            const output = {\n                type: 'hosted_tool_call',\n                id: item.id,\n                name: 'mcp_approval_request',\n                status: 'completed',\n                output: undefined,\n                providerData,\n            };\n            return output;\n        }\n        else if (item.type === 'mcp_call') {\n            // Avoiding to duplicate potentially large output data\n            const { output: outputData, ...providerData } = item;\n            const output = {\n                type: 'hosted_tool_call',\n                id: item.id,\n                name: item.type,\n                status: 'completed',\n                output: outputData || undefined,\n                providerData,\n            };\n            return output;\n        }\n        else if (item.type === 'reasoning') {\n            // Avoiding to duplicate potentially large summary data\n            const { summary, ...providerData } = item;\n            const output = {\n                type: 'reasoning',\n                id: item.id,\n                content: summary.map((content) => {\n                    // Avoiding to duplicate potentially large text\n                    const { text, ...remainingContent } = content;\n                    return {\n                        type: 'input_text',\n                        text,\n                        providerData: remainingContent,\n                    };\n                }),\n                providerData,\n            };\n            return output;\n        }\n        return {\n            type: 'unknown',\n            providerData: item,\n        };\n    });\n}\nexport { getToolChoice, converTool, getInputItems, convertToOutputItem };\n/**\n * Model implementation that uses OpenAI's Responses API to generate responses.\n */\nexport class OpenAIResponsesModel {\n    #client;\n    #model;\n    constructor(client, model) {\n        this.#client = client;\n        this.#model = model;\n    }\n    async #fetchResponse(request, stream) {\n        const input = getInputItems(request.input);\n        const { tools, include } = getTools(request.tools, request.handoffs);\n        const toolChoice = getToolChoice(request.modelSettings.toolChoice);\n        const responseFormat = getResponseFormat(request.outputType);\n        const prompt = getPrompt(request.prompt);\n        let parallelToolCalls = undefined;\n        if (typeof request.modelSettings.parallelToolCalls === 'boolean') {\n            if (request.modelSettings.parallelToolCalls && tools.length === 0) {\n                throw new Error('Parallel tool calls are not supported without tools');\n            }\n            parallelToolCalls = request.modelSettings.parallelToolCalls;\n        }\n        const requestData = {\n            instructions: request.systemInstructions,\n            model: this.#model,\n            input,\n            include,\n            tools,\n            previous_response_id: request.previousResponseId,\n            prompt,\n            temperature: request.modelSettings.temperature,\n            top_p: request.modelSettings.topP,\n            truncation: request.modelSettings.truncation,\n            max_output_tokens: request.modelSettings.maxTokens,\n            tool_choice: toolChoice,\n            parallel_tool_calls: parallelToolCalls,\n            stream,\n            text: responseFormat,\n            store: request.modelSettings.store,\n            ...request.modelSettings.providerData,\n        };\n        if (logger.dontLogModelData) {\n            logger.debug('Calling LLM');\n        }\n        else {\n            logger.debug(`Calling LLM. Request data: ${JSON.stringify(requestData, null, 2)}`);\n        }\n        const response = await this.#client.responses.create(requestData, {\n            headers: HEADERS,\n            signal: request.signal,\n        });\n        if (logger.dontLogModelData) {\n            logger.debug('Response received');\n        }\n        else {\n            logger.debug(`Response received: ${JSON.stringify(response, null, 2)}`);\n        }\n        return response;\n    }\n    /**\n     * Get a response from the OpenAI model using the Responses API.\n     * @param request - The request to send to the model.\n     * @returns A promise that resolves to the response from the model.\n     */\n    async getResponse(request) {\n        const response = await withResponseSpan(async (span) => {\n            const response = await this.#fetchResponse(request, false);\n            if (request.tracing) {\n                span.spanData.response_id = response.id;\n                span.spanData._input = request.input;\n                span.spanData._response = response;\n            }\n            return response;\n        });\n        const output = {\n            usage: new Usage({\n                inputTokens: response.usage?.input_tokens ?? 0,\n                outputTokens: response.usage?.output_tokens ?? 0,\n                totalTokens: response.usage?.total_tokens ?? 0,\n                inputTokensDetails: { ...response.usage?.input_tokens_details },\n                outputTokensDetails: { ...response.usage?.output_tokens_details },\n            }),\n            output: convertToOutputItem(response.output),\n            responseId: response.id,\n            providerData: response,\n        };\n        return output;\n    }\n    /**\n     * Get a streamed response from the OpenAI model using the Responses API.\n     * @param request - The request to send to the model.\n     * @returns An async iterable of the response from the model.\n     */\n    async *getStreamedResponse(request) {\n        const span = request.tracing ? createResponseSpan() : undefined;\n        try {\n            if (span) {\n                span.start();\n                setCurrentSpan(span);\n                if (request.tracing === true) {\n                    span.spanData._input = request.input;\n                }\n            }\n            const response = await this.#fetchResponse(request, true);\n            let finalResponse;\n            for await (const event of response) {\n                if (event.type === 'response.created') {\n                    yield {\n                        type: 'response_started',\n                        providerData: {\n                            ...event,\n                        },\n                    };\n                }\n                else if (event.type === 'response.completed') {\n                    finalResponse = event.response;\n                    const { response, ...remainingEvent } = event;\n                    const { output, usage, id, ...remainingResponse } = response;\n                    yield {\n                        type: 'response_done',\n                        response: {\n                            id: id,\n                            output: convertToOutputItem(output),\n                            usage: {\n                                inputTokens: usage?.input_tokens ?? 0,\n                                outputTokens: usage?.output_tokens ?? 0,\n                                totalTokens: usage?.total_tokens ?? 0,\n                                inputTokensDetails: {\n                                    ...usage?.input_tokens_details,\n                                },\n                                outputTokensDetails: {\n                                    ...usage?.output_tokens_details,\n                                },\n                            },\n                            providerData: remainingResponse,\n                        },\n                        providerData: remainingEvent,\n                    };\n                    yield {\n                        type: 'model',\n                        event: event,\n                    };\n                }\n                else if (event.type === 'response.output_text.delta') {\n                    const { delta, ...remainingEvent } = event;\n                    yield {\n                        type: 'output_text_delta',\n                        delta: delta,\n                        providerData: remainingEvent,\n                    };\n                }\n                yield {\n                    type: 'model',\n                    event: event,\n                };\n            }\n            if (request.tracing && span && finalResponse) {\n                span.spanData.response_id = finalResponse.id;\n                span.spanData._response = finalResponse;\n            }\n        }\n        catch (error) {\n            if (span) {\n                span.setError({\n                    message: 'Error streaming response',\n                    data: {\n                        error: request.tracing\n                            ? String(error)\n                            : error instanceof Error\n                                ? error.name\n                                : undefined,\n                    },\n                });\n            }\n            throw error;\n        }\n        finally {\n            if (span) {\n                span.end();\n                resetCurrentSpan();\n            }\n        }\n    }\n}\n//# sourceMappingURL=openaiResponsesModel.mjs.map","import { UserError, } from '@openai/agents-core';\nexport function convertToolChoice(toolChoice) {\n    if (toolChoice == undefined || toolChoice == null)\n        return undefined;\n    if (toolChoice === 'auto' ||\n        toolChoice === 'required' ||\n        toolChoice === 'none')\n        return toolChoice;\n    return {\n        type: 'function',\n        function: { name: toolChoice },\n    };\n}\nexport function extractAllAssistantContent(content) {\n    if (typeof content === 'string') {\n        return content;\n    }\n    const out = [];\n    for (const c of content) {\n        if (c.type === 'output_text' || c.type === 'input_text') {\n            out.push({\n                type: 'text',\n                text: c.text,\n                ...c.providerData,\n            });\n        }\n        else if (c.type === 'refusal') {\n            out.push({\n                type: 'refusal',\n                refusal: c.refusal,\n                ...c.providerData,\n            });\n        }\n        else if (c.type === 'audio' || c.type === 'image') {\n            // ignoring audio as it is handled on the assistant message level\n            continue;\n        }\n        else {\n            const exhaustive = c; // ensures that the type is exhaustive\n            throw new Error(`Unknown content: ${JSON.stringify(exhaustive)}`);\n        }\n    }\n    return out;\n}\nexport function extractAllUserContent(content) {\n    if (typeof content === 'string') {\n        return content;\n    }\n    const out = [];\n    for (const c of content) {\n        if (c.type === 'input_text') {\n            out.push({ type: 'text', text: c.text, ...c.providerData });\n        }\n        else if (c.type === 'input_image') {\n            if (typeof c.image !== 'string') {\n                throw new Error(`Only image URLs are supported for input_image: ${JSON.stringify(c)}`);\n            }\n            const { image_url, ...rest } = c.providerData || {};\n            out.push({\n                type: 'image_url',\n                image_url: {\n                    url: c.image,\n                    ...image_url,\n                },\n                ...rest,\n            });\n        }\n        else if (c.type === 'input_file') {\n            throw new Error(`File uploads are not supported for chat completions: ${JSON.stringify(c)}`);\n        }\n        else if (c.type === 'audio') {\n            const { input_audio, ...rest } = c.providerData || {};\n            out.push({\n                type: 'input_audio',\n                input_audio: {\n                    data: c.audio,\n                    ...input_audio,\n                },\n                ...rest,\n            });\n        }\n        else {\n            const exhaustive = c; // ensures that the type is exhaustive\n            throw new Error(`Unknown content: ${JSON.stringify(exhaustive)}`);\n        }\n    }\n    return out;\n}\nfunction isMessageItem(item) {\n    if (item.type === 'message') {\n        return true;\n    }\n    if (typeof item.type === 'undefined' && typeof item.role === 'string') {\n        return true;\n    }\n    return false;\n}\nexport function itemsToMessages(items) {\n    if (typeof items === 'string') {\n        return [{ role: 'user', content: items }];\n    }\n    const result = [];\n    let currentAssistantMsg = null;\n    const flushAssistantMessage = () => {\n        if (currentAssistantMsg) {\n            if (!currentAssistantMsg.tool_calls ||\n                currentAssistantMsg.tool_calls.length === 0) {\n                delete currentAssistantMsg.tool_calls;\n            }\n            result.push(currentAssistantMsg);\n            currentAssistantMsg = null;\n        }\n    };\n    const ensureAssistantMessage = () => {\n        if (!currentAssistantMsg) {\n            currentAssistantMsg = { role: 'assistant', tool_calls: [] };\n        }\n        return currentAssistantMsg;\n    };\n    for (const item of items) {\n        if (isMessageItem(item)) {\n            const { content, role, providerData } = item;\n            flushAssistantMessage();\n            if (role === 'assistant') {\n                const assistant = {\n                    role: 'assistant',\n                    content: extractAllAssistantContent(content),\n                    ...providerData,\n                };\n                const audio = content.find((c) => c.type === 'audio');\n                if (audio) {\n                    assistant.audio = {\n                        id: '', // setting this to empty ID and expecting that the user sets providerData.id\n                        ...audio.providerData,\n                    };\n                }\n                result.push(assistant);\n            }\n            else if (role === 'user') {\n                result.push({\n                    role,\n                    content: extractAllUserContent(content),\n                    ...providerData,\n                });\n            }\n            else if (role === 'system') {\n                result.push({\n                    role: 'system',\n                    content: content,\n                    ...providerData,\n                });\n            }\n        }\n        else if (item.type === 'reasoning') {\n            throw new UserError('Reasoning is not supported for chat completions. Got item: ' +\n                JSON.stringify(item));\n        }\n        else if (item.type === 'hosted_tool_call') {\n            if (item.name === 'file_search_call') {\n                const asst = ensureAssistantMessage();\n                const toolCalls = asst.tool_calls ?? [];\n                const fileSearch = item;\n                const { function: functionData, ...rest } = fileSearch.providerData ?? {};\n                const { arguments: argumentData, ...remainingFunctionData } = functionData ?? {};\n                toolCalls.push({\n                    id: fileSearch.id || '',\n                    type: 'function',\n                    function: {\n                        name: 'file_search_call',\n                        arguments: JSON.stringify({\n                            queries: fileSearch.providerData?.queries ?? [],\n                            status: fileSearch.status,\n                            ...argumentData,\n                        }),\n                        ...remainingFunctionData,\n                    },\n                    ...rest,\n                });\n                asst.tool_calls = toolCalls;\n                continue;\n            }\n            else {\n                throw new UserError('Hosted tool calls are not supported for chat completions. Got item: ' +\n                    JSON.stringify(item));\n            }\n        }\n        else if (item.type === 'computer_call' ||\n            item.type === 'computer_call_result') {\n            throw new UserError('Computer use calls are not supported for chat completions. Got item: ' +\n                JSON.stringify(item));\n        }\n        else if (item.type === 'function_call') {\n            const asst = ensureAssistantMessage();\n            const toolCalls = asst.tool_calls ?? [];\n            const funcCall = item;\n            toolCalls.push({\n                id: funcCall.callId,\n                type: 'function',\n                function: {\n                    name: funcCall.name,\n                    arguments: funcCall.arguments ?? '{}',\n                },\n            });\n            asst.tool_calls = toolCalls;\n        }\n        else if (item.type === 'function_call_result') {\n            flushAssistantMessage();\n            const funcOutput = item;\n            if (funcOutput.output.type !== 'text') {\n                throw new UserError('Only text output is supported for chat completions. Got item: ' +\n                    JSON.stringify(item));\n            }\n            result.push({\n                role: 'tool',\n                tool_call_id: funcOutput.callId,\n                content: funcOutput.output.text,\n                ...funcOutput.providerData,\n            });\n        }\n        else if (item.type === 'unknown') {\n            result.push({\n                ...item.providerData,\n            });\n        }\n        else {\n            const exhaustive = item; // ensures that the type is exhaustive\n            throw new Error(`Unknown item type: ${JSON.stringify(exhaustive)}`);\n        }\n    }\n    flushAssistantMessage();\n    return result;\n}\nexport function toolToOpenAI(tool) {\n    if (tool.type === 'function') {\n        return {\n            type: 'function',\n            function: {\n                name: tool.name,\n                description: tool.description || '',\n                parameters: tool.parameters,\n            },\n        };\n    }\n    throw new Error(`Hosted tools are not supported with the ChatCompletions API. Got tool type: ${tool.type}, tool: ${JSON.stringify(tool)}`);\n}\nexport function convertHandoffTool(handoff) {\n    return {\n        type: 'function',\n        function: {\n            name: handoff.toolName,\n            description: handoff.toolDescription || '',\n            parameters: handoff.inputJsonSchema,\n        },\n    };\n}\n//# sourceMappingURL=openaiChatCompletionsConverter.mjs.map","import { Usage, withGenerationSpan, resetCurrentSpan, createGenerationSpan, setCurrentSpan, } from '@openai/agents-core';\nimport logger from \"./logger.mjs\";\nimport { HEADERS } from \"./defaults.mjs\";\nimport { convertChatCompletionsStreamToResponses } from \"./openaiChatCompletionsStreaming.mjs\";\nimport { convertToolChoice, toolToOpenAI, convertHandoffTool, itemsToMessages, } from \"./openaiChatCompletionsConverter.mjs\";\nexport const FAKE_ID = 'FAKE_ID';\n/**\n * A model that uses (or is compatible with) OpenAI's Chat Completions API.\n */\nexport class OpenAIChatCompletionsModel {\n    #client;\n    #model;\n    constructor(client, model) {\n        this.#client = client;\n        this.#model = model;\n    }\n    async getResponse(request) {\n        const response = await withGenerationSpan(async (span) => {\n            span.spanData.model = this.#model;\n            span.spanData.model_config = request.modelSettings\n                ? {\n                    temperature: request.modelSettings.temperature,\n                    top_p: request.modelSettings.topP,\n                    frequency_penalty: request.modelSettings.frequencyPenalty,\n                    presence_penalty: request.modelSettings.presencePenalty,\n                }\n                : { base_url: this.#client.baseURL };\n            const response = await this.#fetchResponse(request, span, false);\n            if (span && request.tracing === true) {\n                span.spanData.output = [response];\n            }\n            return response;\n        });\n        const output = [];\n        if (response.choices && response.choices[0]) {\n            const message = response.choices[0].message;\n            if (message.content !== undefined &&\n                message.content !== null &&\n                // Azure OpenAI returns empty string instead of null for tool calls, causing parser rejection\n                !(message.tool_calls && message.content === '')) {\n                const { content, ...rest } = message;\n                output.push({\n                    id: response.id,\n                    type: 'message',\n                    role: 'assistant',\n                    content: [\n                        {\n                            type: 'output_text',\n                            text: content || '',\n                            providerData: rest,\n                        },\n                    ],\n                    status: 'completed',\n                });\n            }\n            else if (message.refusal) {\n                const { refusal, ...rest } = message;\n                output.push({\n                    id: response.id,\n                    type: 'message',\n                    role: 'assistant',\n                    content: [\n                        {\n                            type: 'refusal',\n                            refusal: refusal || '',\n                            providerData: rest,\n                        },\n                    ],\n                    status: 'completed',\n                });\n            }\n            else if (message.audio) {\n                const { data, ...remainingAudioData } = message.audio;\n                output.push({\n                    id: response.id,\n                    type: 'message',\n                    role: 'assistant',\n                    content: [\n                        {\n                            type: 'audio',\n                            audio: data,\n                            providerData: remainingAudioData,\n                        },\n                    ],\n                    status: 'completed',\n                });\n            }\n            else if (message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    const { id: callId, ...remainingToolCallData } = tool_call;\n                    const { arguments: args, name, ...remainingFunctionData } = tool_call.function;\n                    output.push({\n                        id: response.id,\n                        type: 'function_call',\n                        arguments: args,\n                        name: name,\n                        callId: callId,\n                        status: 'completed',\n                        providerData: {\n                            ...remainingToolCallData,\n                            ...remainingFunctionData,\n                        },\n                    });\n                }\n            }\n        }\n        const modelResponse = {\n            usage: response.usage\n                ? new Usage(toResponseUsage(response.usage))\n                : new Usage(),\n            output,\n            responseId: response.id,\n            providerData: response,\n        };\n        return modelResponse;\n    }\n    async *getStreamedResponse(request) {\n        const span = request.tracing ? createGenerationSpan() : undefined;\n        try {\n            if (span) {\n                span.start();\n                setCurrentSpan(span);\n            }\n            const stream = await this.#fetchResponse(request, span, true);\n            const response = {\n                id: FAKE_ID,\n                created: Math.floor(Date.now() / 1000),\n                model: this.#model,\n                object: 'chat.completion',\n                choices: [],\n                usage: {\n                    prompt_tokens: 0,\n                    completion_tokens: 0,\n                    total_tokens: 0,\n                },\n            };\n            for await (const event of convertChatCompletionsStreamToResponses(response, stream)) {\n                yield event;\n            }\n            if (span && response && request.tracing === true) {\n                span.spanData.output = [response];\n            }\n        }\n        catch (error) {\n            if (span) {\n                span.setError({\n                    message: 'Error streaming response',\n                    data: {\n                        error: request.tracing === true\n                            ? String(error)\n                            : error instanceof Error\n                                ? error.name\n                                : undefined,\n                    },\n                });\n            }\n            throw error;\n        }\n        finally {\n            if (span) {\n                span.end();\n                resetCurrentSpan();\n            }\n        }\n    }\n    async #fetchResponse(request, span, stream) {\n        const tools = [];\n        if (request.tools) {\n            for (const tool of request.tools) {\n                tools.push(toolToOpenAI(tool));\n            }\n        }\n        if (request.handoffs) {\n            for (const handoff of request.handoffs) {\n                tools.push(convertHandoffTool(handoff));\n            }\n        }\n        const responseFormat = getResponseFormat(request.outputType);\n        let parallelToolCalls = undefined;\n        if (typeof request.modelSettings.parallelToolCalls === 'boolean') {\n            if (request.modelSettings.parallelToolCalls && tools.length === 0) {\n                throw new Error('Parallel tool calls are not supported without tools');\n            }\n            parallelToolCalls = request.modelSettings.parallelToolCalls;\n        }\n        const messages = itemsToMessages(request.input);\n        if (request.systemInstructions) {\n            messages.unshift({\n                content: request.systemInstructions,\n                role: 'system',\n            });\n        }\n        if (span && request.tracing === true) {\n            span.spanData.input = messages;\n        }\n        const requestData = {\n            model: this.#model,\n            messages,\n            tools: tools.length ? tools : undefined,\n            temperature: request.modelSettings.temperature,\n            top_p: request.modelSettings.topP,\n            frequency_penalty: request.modelSettings.frequencyPenalty,\n            presence_penalty: request.modelSettings.presencePenalty,\n            max_tokens: request.modelSettings.maxTokens,\n            tool_choice: convertToolChoice(request.modelSettings.toolChoice),\n            response_format: responseFormat,\n            parallel_tool_calls: parallelToolCalls,\n            stream,\n            store: request.modelSettings.store,\n            ...request.modelSettings.providerData,\n        };\n        if (logger.dontLogModelData) {\n            logger.debug('Calling LLM');\n        }\n        else {\n            logger.debug(`Calling LLM. Request data: ${JSON.stringify(requestData, null, 2)}`);\n        }\n        const completion = await this.#client.chat.completions.create(requestData, {\n            headers: HEADERS,\n            signal: request.signal,\n        });\n        if (logger.dontLogModelData) {\n            logger.debug('Response received');\n        }\n        else {\n            logger.debug(`Response received: ${JSON.stringify(completion, null, 2)}`);\n        }\n        return completion;\n    }\n}\nfunction getResponseFormat(outputType) {\n    if (outputType === 'text') {\n        return { type: 'text' };\n    }\n    if (outputType.type === 'json_schema') {\n        return {\n            type: 'json_schema',\n            json_schema: {\n                name: outputType.name,\n                strict: outputType.strict,\n                schema: outputType.schema,\n            },\n        };\n    }\n    return { type: 'json_object' };\n}\nfunction toResponseUsage(usage) {\n    return {\n        requests: 1,\n        input_tokens: usage.prompt_tokens,\n        output_tokens: usage.completion_tokens,\n        total_tokens: usage.total_tokens,\n        input_tokens_details: {\n            cached_tokens: usage.prompt_tokens_details?.cached_tokens || 0,\n        },\n        output_tokens_details: {\n            reasoning_tokens: usage.completion_tokens_details?.reasoning_tokens || 0,\n        },\n    };\n}\n//# sourceMappingURL=openaiChatCompletionsModel.mjs.map","import { FAKE_ID } from \"./openaiChatCompletionsModel.mjs\";\nexport async function* convertChatCompletionsStreamToResponses(response, stream) {\n    let usage = undefined;\n    const state = {\n        started: false,\n        text_content_index_and_output: null,\n        refusal_content_index_and_output: null,\n        function_calls: {},\n    };\n    for await (const chunk of stream) {\n        if (!state.started) {\n            state.started = true;\n            yield {\n                type: 'response_started',\n                providerData: {\n                    ...chunk,\n                },\n            };\n        }\n        // always yield the raw event\n        yield {\n            type: 'model',\n            event: chunk,\n        };\n        // This is always set by the OpenAI API, but not by others e.g. LiteLLM\n        usage = chunk.usage || undefined;\n        if (!chunk.choices?.[0]?.delta)\n            continue;\n        const delta = chunk.choices[0].delta;\n        // Handle text\n        if (delta.content) {\n            if (!state.text_content_index_and_output) {\n                state.text_content_index_and_output = [\n                    !state.refusal_content_index_and_output ? 0 : 1,\n                    { text: '', type: 'output_text', providerData: { annotations: [] } },\n                ];\n            }\n            yield {\n                type: 'output_text_delta',\n                delta: delta.content,\n                providerData: {\n                    ...chunk,\n                },\n            };\n            state.text_content_index_and_output[1].text += delta.content;\n        }\n        // Handle refusals\n        if ('refusal' in delta && delta.refusal) {\n            if (!state.refusal_content_index_and_output) {\n                state.refusal_content_index_and_output = [\n                    !state.text_content_index_and_output ? 0 : 1,\n                    { refusal: '', type: 'refusal' },\n                ];\n            }\n            state.refusal_content_index_and_output[1].refusal += delta.refusal;\n        }\n        // Handle tool calls\n        if (delta.tool_calls) {\n            for (const tc_delta of delta.tool_calls) {\n                if (!(tc_delta.index in state.function_calls)) {\n                    state.function_calls[tc_delta.index] = {\n                        id: FAKE_ID,\n                        arguments: '',\n                        name: '',\n                        type: 'function_call',\n                        callId: '',\n                    };\n                }\n                const tc_function = tc_delta.function;\n                state.function_calls[tc_delta.index].arguments +=\n                    tc_function?.arguments || '';\n                state.function_calls[tc_delta.index].name += tc_function?.name || '';\n                state.function_calls[tc_delta.index].callId += tc_delta.id || '';\n            }\n        }\n    }\n    // Final output message\n    const outputs = [];\n    if (state.text_content_index_and_output ||\n        state.refusal_content_index_and_output) {\n        const assistant_msg = {\n            id: FAKE_ID,\n            content: [],\n            role: 'assistant',\n            type: 'message',\n            status: 'completed',\n        };\n        if (state.text_content_index_and_output) {\n            assistant_msg.content.push(state.text_content_index_and_output[1]);\n        }\n        if (state.refusal_content_index_and_output) {\n            assistant_msg.content.push(state.refusal_content_index_and_output[1]);\n        }\n        outputs.push(assistant_msg);\n    }\n    for (const function_call of Object.values(state.function_calls)) {\n        outputs.push(function_call);\n    }\n    // Compose final response\n    const finalEvent = {\n        type: 'response_done',\n        response: {\n            id: response.id,\n            usage: {\n                inputTokens: usage?.prompt_tokens ?? 0,\n                outputTokens: usage?.completion_tokens ?? 0,\n                totalTokens: usage?.total_tokens ?? 0,\n                inputTokensDetails: {\n                    cached_tokens: usage?.prompt_tokens_details?.cached_tokens ?? 0,\n                },\n                outputTokensDetails: {\n                    reasoning_tokens: usage?.completion_tokens_details?.reasoning_tokens ?? 0,\n                },\n            },\n            output: outputs,\n        },\n    };\n    yield finalEvent;\n}\n//# sourceMappingURL=openaiChatCompletionsStreaming.mjs.map","import OpenAI from 'openai';\nimport { DEFAULT_OPENAI_MODEL, getDefaultOpenAIClient, getDefaultOpenAIKey, shouldUseResponsesByDefault, } from \"./defaults.mjs\";\nimport { OpenAIResponsesModel } from \"./openaiResponsesModel.mjs\";\nimport { OpenAIChatCompletionsModel } from \"./openaiChatCompletionsModel.mjs\";\n/**\n * The provider of OpenAI's models (or Chat Completions compatible ones)\n */\nexport class OpenAIProvider {\n    #client;\n    #useResponses;\n    #options;\n    constructor(options = {}) {\n        this.#options = options;\n        if (this.#options.openAIClient) {\n            if (this.#options.apiKey) {\n                throw new Error('Cannot provide both apiKey and openAIClient');\n            }\n            if (this.#options.baseURL) {\n                throw new Error('Cannot provide both baseURL and openAIClient');\n            }\n            this.#client = this.#options.openAIClient;\n        }\n        this.#useResponses = this.#options.useResponses;\n    }\n    /**\n     * Lazy loads the OpenAI client to not throw an error if you don't have an API key set but\n     * never actually use the client.\n     */\n    #getClient() {\n        // If the constructor does not accept the OpenAI client,\n        if (!this.#client) {\n            this.#client =\n                // this provider checks if there is the default client first,\n                getDefaultOpenAIClient() ??\n                    // and then manually creates a new one.\n                    new OpenAI({\n                        apiKey: this.#options.apiKey ?? getDefaultOpenAIKey(),\n                        baseURL: this.#options.baseURL,\n                        organization: this.#options.organization,\n                        project: this.#options.project,\n                    });\n        }\n        return this.#client;\n    }\n    async getModel(modelName) {\n        const model = modelName || DEFAULT_OPENAI_MODEL;\n        const useResponses = this.#useResponses ?? shouldUseResponsesByDefault();\n        if (useResponses) {\n            return new OpenAIResponsesModel(this.#getClient(), model);\n        }\n        return new OpenAIChatCompletionsModel(this.#getClient(), model);\n    }\n}\n//# sourceMappingURL=openaiProvider.mjs.map","import { BatchTraceProcessor, setTraceProcessors, } from '@openai/agents-core';\nimport { getTracingExportApiKey, HEADERS } from \"./defaults.mjs\";\nimport logger from \"./logger.mjs\";\n/**\n * A tracing exporter that exports traces to OpenAI's tracing API.\n */\nexport class OpenAITracingExporter {\n    #options;\n    constructor(options = {}) {\n        this.#options = {\n            apiKey: options.apiKey ?? undefined,\n            organization: options.organization ?? '',\n            project: options.project ?? '',\n            endpoint: options.endpoint ?? 'https://api.openai.com/v1/traces/ingest',\n            maxRetries: options.maxRetries ?? 3,\n            baseDelay: options.baseDelay ?? 1000,\n            maxDelay: options.maxDelay ?? 30000,\n        };\n    }\n    async export(items, signal) {\n        const apiKey = this.#options.apiKey ?? getTracingExportApiKey();\n        if (!apiKey) {\n            logger.error('No API key provided for OpenAI tracing exporter. Exports will be skipped');\n            return;\n        }\n        const payload = {\n            data: items.map((items) => items.toJSON()).filter((item) => !!item),\n        };\n        let attempts = 0;\n        let delay = this.#options.baseDelay;\n        while (attempts < this.#options.maxRetries) {\n            try {\n                const response = await fetch(this.#options.endpoint, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${apiKey}`,\n                        'OpenAI-Beta': 'traces=v1',\n                        ...HEADERS,\n                    },\n                    body: JSON.stringify(payload),\n                    signal,\n                });\n                if (response.ok) {\n                    logger.debug(`Exported ${payload.data.length} items`);\n                    return;\n                }\n                if (response.status >= 400 && response.status < 500) {\n                    logger.error(`[non-fatal] Tracing client error ${response.status}: ${await response.text()}`);\n                    return;\n                }\n                logger.warn(`[non-fatal] Tracing: server error ${response.status}, retrying.`);\n            }\n            catch (error) {\n                logger.error('[non-fatal] Tracing: request failed: ', error);\n            }\n            if (signal?.aborted) {\n                logger.error('Tracing: request aborted');\n                return;\n            }\n            const sleepTime = delay + Math.random() * 0.1 * delay; // 10% jitter\n            await new Promise((resolve) => setTimeout(resolve, sleepTime));\n            delay = Math.min(delay * 2, this.#options.maxDelay);\n            attempts++;\n        }\n        logger.error(`Tracing: failed to export traces after ${this.#options.maxRetries} attempts`);\n    }\n}\n/**\n * Sets the OpenAI Tracing exporter as the default exporter with a BatchTraceProcessor handling the\n * traces\n */\nexport function setDefaultOpenAITracingExporter() {\n    const exporter = new OpenAITracingExporter();\n    const processor = new BatchTraceProcessor(exporter);\n    setTraceProcessors([processor]);\n}\n//# sourceMappingURL=openaiTracingExporter.mjs.map","// This file is automatically generated\nexport const METADATA = {\n    \"name\": \"@openai/agents-realtime\",\n    \"version\": \"0.0.12\",\n    \"versions\": {\n        \"@openai/agents-realtime\": \"0.0.12\",\n        \"@openai/agents-core\": \"workspace:*\",\n        \"@openai/zod\": \"npm:zod@3.25.40 - 3.25.67\"\n    }\n};\nexport default METADATA;\n//# sourceMappingURL=metadata.mjs.map","import METADATA from \"./metadata.mjs\";\n/**\n * Converts a base64 string to an ArrayBuffer\n * @param {string} base64\n * @returns {ArrayBuffer}\n */\nexport function base64ToArrayBuffer(base64) {\n    const binaryString = atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n/**\n * Converts an ArrayBuffer to a base64 string\n * @param {ArrayBuffer} arrayBuffer\n * @returns {string}\n */\nexport function arrayBufferToBase64(arrayBuffer) {\n    const binaryString = String.fromCharCode(...new Uint8Array(arrayBuffer));\n    return btoa(binaryString);\n}\n/**\n * Get the last text from an audio output message\n * @param item\n * @returns\n */\nexport function getLastTextFromAudioOutputMessage(item) {\n    if (typeof item === 'undefined' ||\n        item === null ||\n        typeof item !== 'object' ||\n        !('type' in item) ||\n        typeof item.type !== 'string' ||\n        !item.type) {\n        return undefined;\n    }\n    if (item.type !== 'message') {\n        return undefined;\n    }\n    if (!('content' in item) ||\n        !Array.isArray(item.content) ||\n        item.content.length < 1) {\n        return undefined;\n    }\n    const lastContentItem = item.content[item.content.length - 1];\n    if (!('type' in lastContentItem) ||\n        typeof lastContentItem.type !== 'string') {\n        return undefined;\n    }\n    if (lastContentItem.type === 'text') {\n        return typeof lastContentItem.text === 'string'\n            ? lastContentItem.text\n            : undefined;\n    }\n    if (lastContentItem.type === 'audio') {\n        return typeof lastContentItem.transcript === 'string'\n            ? lastContentItem.transcript\n            : undefined;\n    }\n    return undefined;\n}\n/**\n * Compare two conversation histories to determine the removals, additions, and updates.\n * @param oldHistory - The old history.\n * @param newHistory - The new history.\n * @returns A diff of the two histories.\n */\nexport function diffRealtimeHistory(oldHistory, newHistory) {\n    const removals = oldHistory.filter((item) => !newHistory.some((newItem) => newItem.itemId === item.itemId));\n    const additions = newHistory.filter((item) => !oldHistory.some((oldItem) => oldItem.itemId === item.itemId));\n    const updates = newHistory.filter((item) => oldHistory.some((oldItem) => oldItem.itemId === item.itemId &&\n        JSON.stringify(oldItem) !== JSON.stringify(item)));\n    return {\n        removals,\n        additions,\n        updates,\n    };\n}\n/**\n * Check if the browser supports WebRTC.\n * @returns True if WebRTC is supported, false otherwise.\n */\nexport function hasWebRTCSupport() {\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    return typeof window['RTCPeerConnection'] !== 'undefined';\n}\n/**\n * Removes the audio data from all content in a message by setting it to null.\n * @param item\n * @returns\n */\nexport function removeAudioFromContent(item) {\n    if (item.role === 'system') {\n        return item;\n    }\n    if (item.role === 'assistant') {\n        return {\n            ...item,\n            content: item.content.map((entry) => {\n                if (entry.type === 'audio') {\n                    return {\n                        ...entry,\n                        audio: null,\n                    };\n                }\n                return entry;\n            }),\n        };\n    }\n    if (item.role === 'user') {\n        return {\n            ...item,\n            content: item.content.map((entry) => {\n                if (entry.type === 'input_audio') {\n                    return {\n                        ...entry,\n                        audio: null,\n                    };\n                }\n                return entry;\n            }),\n        };\n    }\n    return item;\n}\n/**\n * Updates the realtime history array based on the incoming event and options.\n * @param history - The current history array.\n * @param event - The event to process (RealtimeItem).\n * @param shouldIncludeAudioData - Whether to include audio data in message items.\n * @returns The updated history array.\n */\nexport function updateRealtimeHistory(history, event, shouldIncludeAudioData) {\n    // Merge transcript into placeholder input_audio message\n    if (event.type === 'conversation.item.input_audio_transcription.completed') {\n        return history.map((item) => {\n            if (item.itemId === event.item_id &&\n                item.type === 'message' &&\n                'role' in item &&\n                item.role === 'user') {\n                const updatedContent = item.content.map((entry) => {\n                    if (entry.type === 'input_audio') {\n                        return {\n                            ...entry,\n                            transcript: event.transcript,\n                        };\n                    }\n                    return entry;\n                });\n                return {\n                    ...item,\n                    content: updatedContent,\n                    status: 'completed',\n                };\n            }\n            return item;\n        });\n    }\n    const newEvent = !shouldIncludeAudioData && event.type === 'message'\n        ? removeAudioFromContent(event)\n        : event;\n    const existingIndex = history.findIndex((item) => item.itemId === event.itemId);\n    if (existingIndex !== -1) {\n        // Update existing item\n        return history.map((item, idx) => {\n            if (idx === existingIndex) {\n                return newEvent;\n            }\n            if (!shouldIncludeAudioData && item.type === 'message') {\n                return removeAudioFromContent(item);\n            }\n            return item;\n        });\n    }\n    else if (event.previousItemId) {\n        // Insert after previousItemId if found, else at end\n        const prevIndex = history.findIndex((item) => item.itemId === event.previousItemId);\n        if (prevIndex !== -1) {\n            return [\n                ...history.slice(0, prevIndex + 1),\n                newEvent,\n                ...history.slice(prevIndex + 1),\n            ];\n        }\n        else {\n            return [...history, newEvent];\n        }\n    }\n    else {\n        return [...history, newEvent];\n    }\n}\n/**\n * The headers to use for the Realtime API.\n */\nexport const HEADERS = {\n    'User-Agent': `Agents/JavaScript ${METADATA.version}`,\n    'X-OpenAI-Agents-SDK': `openai-agents-sdk.${METADATA.version}`,\n};\n/**\n * Browser websocket header\n */\nexport const WEBSOCKET_META = `openai-agents-sdk.${METADATA.version}`;\n//# sourceMappingURL=utils.mjs.map","import { Agent, } from '@openai/agents-core';\n/**\n * A specialized agent instance that is meant to be used within a `RealtimeSession` to build\n * voice agents. Due to the nature of this agent, some configuration options are not supported\n * that are supported by regular `Agent` instances. For example:\n * - `model` choice is not supported as all RealtimeAgents will be handled by the same model within\n *   a `RealtimeSession`\n * - `modelSettings` is not supported as all RealtimeAgents will be handled by the same model within\n *   a `RealtimeSession`\n * - `outputType` is not supported as RealtimeAgents do not support structured outputs\n * - `toolUseBehavior` is not supported as all RealtimeAgents will be handled by the same model within\n *   a `RealtimeSession`\n * - `voice` can be configured on an `Agent` level however it cannot be changed after the first\n *    agent within a `RealtimeSession` spoke\n *\n * @example\n * ```ts\n * const agent = new RealtimeAgent({\n *   name: 'my-agent',\n *   instructions: 'You are a helpful assistant that can answer questions and help with tasks.',\n * })\n *\n * const session = new RealtimeSession(agent);\n * ```\n */\nexport class RealtimeAgent extends Agent {\n    /**\n     * The voice intended to be used by the agent. If another agent already spoke during the\n     * RealtimeSession, changing the voice during a handoff will fail.\n     */\n    voice;\n    constructor(config) {\n        super(config);\n        this.voice = config.voice ?? 'ash';\n    }\n}\n//# sourceMappingURL=realtimeAgent.mjs.map","import { defineOutputGuardrail, } from '@openai/agents-core';\nexport function getRealtimeGuardrailSettings(settings) {\n    return {\n        debounceTextLength: settings.debounceTextLength ?? 100,\n    };\n}\nexport function defineRealtimeOutputGuardrail({ policyHint: policyHintInput, ...options }) {\n    const baseGuardrail = defineOutputGuardrail(options);\n    const policyHint = policyHintInput ?? baseGuardrail.name;\n    return {\n        ...baseGuardrail,\n        policyHint,\n        run: async (args) => {\n            const result = await baseGuardrail.run(args);\n            return {\n                ...result,\n                guardrail: { ...result.guardrail, policyHint },\n            };\n        },\n    };\n}\n/**\n * Generates a message that informs the model about why the guardrail was triggered and to\n * correct the behavior.\n */\nexport function getRealtimeGuardrailFeedbackMessage(result) {\n    return `\n⚠️ Your last answer was blocked. \nFailed Guardrail Reason: ${result.guardrail.policyHint}. \nFailure Details: ${JSON.stringify(result.output.outputInfo ?? {})}. \nPlease respond again following policy. Apologize for not being able to answer the question (while avoiding the specific reason) and divert discussion back to an approved topic immediately and not invite more discussion.\n`.trim();\n}\n//# sourceMappingURL=guardrail.mjs.map","import { getLogger } from '@openai/agents-core';\nconst logger = getLogger('openai-agents:realtime');\nexport default logger;\n//# sourceMappingURL=logger.mjs.map","import { z } from '@openai/zod/v3';\nexport const baseItemSchema = z.object({\n    itemId: z.string(),\n});\nexport const realtimeMessageItemSchema = z.discriminatedUnion('role', [\n    z.object({\n        itemId: z.string(),\n        previousItemId: z.string().nullable().optional(),\n        type: z.literal('message'),\n        role: z.literal('system'),\n        content: z.array(z.object({ type: z.literal('input_text'), text: z.string() })),\n    }),\n    z.object({\n        itemId: z.string(),\n        previousItemId: z.string().nullable().optional(),\n        type: z.literal('message'),\n        role: z.literal('user'),\n        status: z.enum(['in_progress', 'completed']),\n        content: z.array(z.object({ type: z.literal('input_text'), text: z.string() }).or(z.object({\n            type: z.literal('input_audio'),\n            audio: z.string().nullable().optional(),\n            transcript: z.string().nullable(),\n        }))),\n    }),\n    z.object({\n        itemId: z.string(),\n        previousItemId: z.string().nullable().optional(),\n        type: z.literal('message'),\n        role: z.literal('assistant'),\n        status: z.enum(['in_progress', 'completed', 'incomplete']),\n        content: z.array(z.object({ type: z.literal('text'), text: z.string() }).or(z.object({\n            type: z.literal('audio'),\n            audio: z.string().nullable().optional(),\n            transcript: z.string().nullable().optional(),\n        }))),\n    }),\n]);\nexport const realtimeToolCallItem = z.object({\n    itemId: z.string(),\n    previousItemId: z.string().nullable().optional(),\n    type: z.literal('function_call'),\n    status: z.enum(['in_progress', 'completed']),\n    arguments: z.string(),\n    name: z.string(),\n    output: z.string().nullable(),\n});\n//# sourceMappingURL=items.mjs.map","import { z } from '@openai/zod/v3';\n// Event schemas mirroring the structures defined in the OpenAI SDK typings.\n// Most fields from the interfaces in `realtime.d.ts` are captured here to\n// provide better runtime validation when parsing events from the server.\nexport const realtimeResponse = z.object({\n    id: z.string().optional().nullable(),\n    conversation_id: z.string().optional().nullable(),\n    max_output_tokens: z.number().or(z.literal('inf')).optional().nullable(),\n    metadata: z.record(z.string(), z.any()).optional().nullable(),\n    modalities: z.array(z.string()).optional().nullable(),\n    object: z.literal('realtime.response').optional().nullable(),\n    output: z.array(z.any()).optional().nullable(),\n    output_audio_format: z.string().optional().nullable(),\n    status: z\n        .enum(['completed', 'incomplete', 'failed', 'cancelled', 'in_progress'])\n        .optional()\n        .nullable(),\n    status_details: z.record(z.string(), z.any()).optional().nullable(),\n    usage: z\n        .object({\n        input_tokens: z.number().optional(),\n        input_tokens_details: z.record(z.string(), z.any()).optional().nullable(),\n        output_tokens: z.number().optional(),\n        output_tokens_details: z\n            .record(z.string(), z.any())\n            .optional()\n            .nullable(),\n    })\n        .optional()\n        .nullable(),\n    voice: z.string().optional().nullable(),\n});\n// Basic content schema used by ConversationItem.\nexport const conversationItemContentSchema = z.object({\n    id: z.string().optional(),\n    audio: z.string().nullable().optional(),\n    text: z.string().nullable().optional(),\n    transcript: z.string().nullable().optional(),\n    type: z.union([\n        z.literal('input_text'),\n        z.literal('input_audio'),\n        z.literal('item_reference'),\n        z.literal('text'),\n        z.literal('audio'),\n    ]),\n});\nexport const conversationItemSchema = z.object({\n    id: z.string().optional(),\n    arguments: z.string().optional(),\n    call_id: z.string().optional(),\n    content: z.array(conversationItemContentSchema).optional(),\n    name: z.string().optional(),\n    object: z.literal('realtime.item').optional(),\n    output: z.string().optional(),\n    role: z.enum(['user', 'assistant', 'system']).optional(),\n    status: z.enum(['completed', 'incomplete', 'in_progress']).optional(),\n    type: z.enum(['message', 'function_call', 'function_call_output']).optional(),\n});\nexport const conversationCreatedEventSchema = z.object({\n    type: z.literal('conversation.created'),\n    event_id: z.string(),\n    conversation: z.object({\n        id: z.string().optional(),\n        object: z.literal('realtime.conversation').optional(),\n    }),\n});\nexport const conversationItemCreatedEventSchema = z.object({\n    type: z.literal('conversation.item.created'),\n    event_id: z.string(),\n    item: conversationItemSchema,\n    previous_item_id: z.string().nullable().optional(),\n});\nexport const conversationItemDeletedEventSchema = z.object({\n    type: z.literal('conversation.item.deleted'),\n    event_id: z.string(),\n    item_id: z.string(),\n});\nexport const conversationItemInputAudioTranscriptionCompletedEventSchema = z.object({\n    type: z.literal('conversation.item.input_audio_transcription.completed'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    transcript: z.string(),\n    logprobs: z.array(z.any()).nullable().optional(),\n});\nexport const conversationItemInputAudioTranscriptionDeltaEventSchema = z.object({\n    type: z.literal('conversation.item.input_audio_transcription.delta'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number().optional(),\n    delta: z.string().optional(),\n    logprobs: z.array(z.any()).nullable().optional(),\n});\nexport const conversationItemInputAudioTranscriptionFailedEventSchema = z.object({\n    type: z.literal('conversation.item.input_audio_transcription.failed'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    error: z.object({\n        code: z.string().optional(),\n        message: z.string().optional(),\n        param: z.string().optional(),\n        type: z.string().optional(),\n    }),\n});\nexport const conversationItemRetrievedEventSchema = z.object({\n    type: z.literal('conversation.item.retrieved'),\n    event_id: z.string(),\n    item: conversationItemSchema,\n});\nexport const conversationItemTruncatedEventSchema = z.object({\n    type: z.literal('conversation.item.truncated'),\n    event_id: z.string(),\n    item_id: z.string(),\n    audio_end_ms: z.number(),\n    content_index: z.number(),\n});\nexport const conversationItemCreateEventSchema = z.object({\n    type: z.literal('conversation.item.create'),\n    item: conversationItemSchema,\n    event_id: z.string().optional(),\n    previous_item_id: z.string().nullable().optional(),\n});\nexport const conversationItemDeleteEventSchema = z.object({\n    type: z.literal('conversation.item.delete'),\n    item_id: z.string(),\n    event_id: z.string().optional(),\n});\nexport const conversationItemRetrieveEventSchema = z.object({\n    type: z.literal('conversation.item.retrieve'),\n    item_id: z.string(),\n    event_id: z.string().optional(),\n});\nexport const conversationItemTruncateEventSchema = z.object({\n    type: z.literal('conversation.item.truncate'),\n    item_id: z.string(),\n    audio_end_ms: z.number(),\n    content_index: z.number(),\n    event_id: z.string().optional(),\n});\nexport const errorEventSchema = z.object({\n    type: z.literal('error'),\n    event_id: z.string().optional(),\n    error: z.any().optional(),\n});\nexport const inputAudioBufferClearedEventSchema = z.object({\n    type: z.literal('input_audio_buffer.cleared'),\n    event_id: z.string(),\n});\nexport const inputAudioBufferAppendEventSchema = z.object({\n    type: z.literal('input_audio_buffer.append'),\n    audio: z.string(),\n    event_id: z.string().optional(),\n});\nexport const inputAudioBufferClearEventSchema = z.object({\n    type: z.literal('input_audio_buffer.clear'),\n    event_id: z.string().optional(),\n});\nexport const inputAudioBufferCommitEventSchema = z.object({\n    type: z.literal('input_audio_buffer.commit'),\n    event_id: z.string().optional(),\n});\nexport const inputAudioBufferCommittedEventSchema = z.object({\n    type: z.literal('input_audio_buffer.committed'),\n    event_id: z.string(),\n    item_id: z.string(),\n    previous_item_id: z.string().nullable().optional(),\n});\nexport const inputAudioBufferSpeechStartedEventSchema = z.object({\n    type: z.literal('input_audio_buffer.speech_started'),\n    event_id: z.string(),\n    item_id: z.string(),\n    audio_start_ms: z.number(),\n});\nexport const inputAudioBufferSpeechStoppedEventSchema = z.object({\n    type: z.literal('input_audio_buffer.speech_stopped'),\n    event_id: z.string(),\n    item_id: z.string(),\n    audio_end_ms: z.number(),\n});\nexport const outputAudioBufferStartedEventSchema = z\n    .object({\n    type: z.literal('output_audio_buffer.started'),\n    event_id: z.string(),\n})\n    .passthrough();\nexport const outputAudioBufferStoppedEventSchema = z\n    .object({\n    type: z.literal('output_audio_buffer.stopped'),\n    event_id: z.string(),\n})\n    .passthrough();\nexport const outputAudioBufferClearedEventSchema = z.object({\n    type: z.literal('output_audio_buffer.cleared'),\n    event_id: z.string(),\n});\nexport const rateLimitsUpdatedEventSchema = z.object({\n    type: z.literal('rate_limits.updated'),\n    event_id: z.string(),\n    rate_limits: z.array(z.object({\n        limit: z.number().optional(),\n        name: z.enum(['requests', 'tokens']).optional(),\n        remaining: z.number().optional(),\n        reset_seconds: z.number().optional(),\n    })),\n});\nexport const responseAudioDeltaEventSchema = z.object({\n    type: z.literal('response.audio.delta'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    delta: z.string(),\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseAudioDoneEventSchema = z.object({\n    type: z.literal('response.audio.done'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseAudioTranscriptDeltaEventSchema = z.object({\n    type: z.literal('response.audio_transcript.delta'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    delta: z.string(),\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseAudioTranscriptDoneEventSchema = z.object({\n    type: z.literal('response.audio_transcript.done'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    transcript: z.string(),\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseContentPartAddedEventSchema = z.object({\n    type: z.literal('response.content_part.added'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    output_index: z.number(),\n    response_id: z.string(),\n    part: z.object({\n        audio: z.string().optional(),\n        text: z.string().optional(),\n        transcript: z.string().optional(),\n        type: z.enum(['text', 'audio']).optional(),\n    }),\n});\nexport const responseContentPartDoneEventSchema = z.object({\n    type: z.literal('response.content_part.done'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    output_index: z.number(),\n    response_id: z.string(),\n    part: z.object({\n        audio: z.string().optional(),\n        text: z.string().optional(),\n        transcript: z.string().optional(),\n        type: z.enum(['text', 'audio']).optional(),\n    }),\n});\nexport const responseCreatedEventSchema = z.object({\n    type: z.literal('response.created'),\n    event_id: z.string(),\n    response: realtimeResponse,\n});\nexport const responseDoneEventSchema = z.object({\n    type: z.literal('response.done'),\n    event_id: z.string(),\n    response: realtimeResponse,\n});\nexport const responseFunctionCallArgumentsDeltaEventSchema = z.object({\n    type: z.literal('response.function_call_arguments.delta'),\n    event_id: z.string(),\n    item_id: z.string(),\n    call_id: z.string(),\n    delta: z.string(),\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseFunctionCallArgumentsDoneEventSchema = z.object({\n    type: z.literal('response.function_call_arguments.done'),\n    event_id: z.string(),\n    item_id: z.string(),\n    call_id: z.string(),\n    arguments: z.string(),\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseOutputItemAddedEventSchema = z.object({\n    type: z.literal('response.output_item.added'),\n    event_id: z.string(),\n    item: conversationItemSchema,\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseOutputItemDoneEventSchema = z.object({\n    type: z.literal('response.output_item.done'),\n    event_id: z.string(),\n    item: conversationItemSchema,\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseTextDeltaEventSchema = z.object({\n    type: z.literal('response.text.delta'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    delta: z.string(),\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const responseTextDoneEventSchema = z.object({\n    type: z.literal('response.text.done'),\n    event_id: z.string(),\n    item_id: z.string(),\n    content_index: z.number(),\n    text: z.string(),\n    output_index: z.number(),\n    response_id: z.string(),\n});\nexport const sessionCreatedEventSchema = z.object({\n    type: z.literal('session.created'),\n    event_id: z.string(),\n    session: z.any(),\n});\nexport const sessionUpdatedEventSchema = z.object({\n    type: z.literal('session.updated'),\n    event_id: z.string(),\n    session: z.any(),\n});\nexport const responseCancelEventSchema = z.object({\n    type: z.literal('response.cancel'),\n    event_id: z.string().optional(),\n    response_id: z.string().optional(),\n});\nexport const responseCreateEventSchema = z.object({\n    type: z.literal('response.create'),\n    event_id: z.string().optional(),\n    response: z.any().optional(),\n});\nexport const sessionUpdateEventSchema = z.object({\n    type: z.literal('session.update'),\n    event_id: z.string().optional(),\n    session: z.any(),\n});\nexport const transcriptionSessionUpdateEventSchema = z.object({\n    type: z.literal('transcription_session.update'),\n    event_id: z.string().optional(),\n    session: z.any(),\n});\nexport const transcriptionSessionUpdatedEventSchema = z.object({\n    type: z.literal('transcription_session.updated'),\n    event_id: z.string(),\n    session: z.any(),\n});\n/**\n * This schema is used if an event is unknown to the client. The Realtime API might introduce\n * new events at some point and we should handle them gracefully by treating them as generic events\n * only requiring a type and an optional event_id.\n */\nexport const genericEventSchema = z\n    .object({\n    type: z.string(),\n    event_id: z.string().optional().nullable(),\n})\n    .passthrough();\nexport const realtimeServerEventSchema = z.discriminatedUnion('type', [\n    conversationCreatedEventSchema,\n    conversationItemCreatedEventSchema,\n    conversationItemDeletedEventSchema,\n    conversationItemInputAudioTranscriptionCompletedEventSchema,\n    conversationItemInputAudioTranscriptionDeltaEventSchema,\n    conversationItemInputAudioTranscriptionFailedEventSchema,\n    conversationItemRetrievedEventSchema,\n    conversationItemTruncatedEventSchema,\n    errorEventSchema,\n    inputAudioBufferClearedEventSchema,\n    inputAudioBufferCommittedEventSchema,\n    inputAudioBufferSpeechStartedEventSchema,\n    inputAudioBufferSpeechStoppedEventSchema,\n    outputAudioBufferStartedEventSchema,\n    outputAudioBufferStoppedEventSchema,\n    outputAudioBufferClearedEventSchema,\n    rateLimitsUpdatedEventSchema,\n    responseAudioDeltaEventSchema,\n    responseAudioDoneEventSchema,\n    responseAudioTranscriptDeltaEventSchema,\n    responseAudioTranscriptDoneEventSchema,\n    responseContentPartAddedEventSchema,\n    responseContentPartDoneEventSchema,\n    responseCreatedEventSchema,\n    responseDoneEventSchema,\n    responseFunctionCallArgumentsDeltaEventSchema,\n    responseFunctionCallArgumentsDoneEventSchema,\n    responseOutputItemAddedEventSchema,\n    responseOutputItemDoneEventSchema,\n    responseTextDeltaEventSchema,\n    responseTextDoneEventSchema,\n    sessionCreatedEventSchema,\n    sessionUpdatedEventSchema,\n    transcriptionSessionUpdatedEventSchema,\n]);\nexport const realtimeClientEventSchema = z.discriminatedUnion('type', [\n    conversationItemCreateEventSchema,\n    conversationItemDeleteEventSchema,\n    conversationItemRetrieveEventSchema,\n    conversationItemTruncateEventSchema,\n    inputAudioBufferAppendEventSchema,\n    inputAudioBufferClearEventSchema,\n    inputAudioBufferCommitEventSchema,\n    responseCancelEventSchema,\n    responseCreateEventSchema,\n    sessionUpdateEventSchema,\n    transcriptionSessionUpdateEventSchema,\n]);\n/**\n * Parses a realtime event from the server. If the event is unknown to the client, it will be treated as a generic event.\n * @param event - The event to parse.\n * @returns The parsed event or null if the event is unknown to the client.\n */\nexport function parseRealtimeEvent(event) {\n    const raw = JSON.parse(event.data.toString());\n    const parsed = realtimeServerEventSchema.safeParse(raw);\n    if (!parsed.success) {\n        const genericParsed = genericEventSchema.safeParse(raw);\n        if (genericParsed.success) {\n            return { data: genericParsed.data, isGeneric: true };\n        }\n        return { data: null, isGeneric: true };\n    }\n    return { data: parsed.data, isGeneric: false };\n}\n//# sourceMappingURL=openaiRealtimeEvents.mjs.map","import { RuntimeEventEmitter, Usage } from '@openai/agents-core';\nimport { realtimeMessageItemSchema, realtimeToolCallItem, } from \"./items.mjs\";\nimport logger from \"./logger.mjs\";\nimport { parseRealtimeEvent, responseDoneEventSchema, } from \"./openaiRealtimeEvents.mjs\";\nimport { arrayBufferToBase64, diffRealtimeHistory } from \"./utils.mjs\";\nimport { EventEmitterDelegate } from '@openai/agents-core/utils';\n/**\n * The default model that is used during the connection if no model is provided.\n */\nexport const DEFAULT_OPENAI_REALTIME_MODEL = 'gpt-4o-realtime-preview';\n/**\n * The default session config that gets send over during session connection unless overridden\n * by the user.\n */\nexport const DEFAULT_OPENAI_REALTIME_SESSION_CONFIG = {\n    voice: 'ash',\n    modalities: ['text', 'audio'],\n    inputAudioFormat: 'pcm16',\n    outputAudioFormat: 'pcm16',\n    inputAudioTranscription: {\n        model: 'gpt-4o-mini-transcribe',\n    },\n    turnDetection: {\n        type: 'semantic_vad',\n    },\n    inputAudioNoiseReduction: null,\n    speed: 1,\n};\nexport class OpenAIRealtimeBase extends EventEmitterDelegate {\n    #model;\n    #apiKey;\n    #tracingConfig = null;\n    #rawSessionConfig = null;\n    eventEmitter = new RuntimeEventEmitter();\n    constructor(options = {}) {\n        super();\n        this.#model = options.model ?? DEFAULT_OPENAI_REALTIME_MODEL;\n        this.#apiKey = options.apiKey;\n    }\n    /**\n     * The current model that is being used by the transport layer.\n     */\n    get currentModel() {\n        return this.#model;\n    }\n    /**\n     * The current model that is being used by the transport layer.\n     * **Note**: The model cannot be changed mid conversation.\n     */\n    set currentModel(model) {\n        this.#model = model;\n    }\n    get _rawSessionConfig() {\n        return this.#rawSessionConfig ?? null;\n    }\n    async _getApiKey(options) {\n        const apiKey = options.apiKey ?? this.#apiKey;\n        if (typeof apiKey === 'function') {\n            return await apiKey();\n        }\n        return apiKey;\n    }\n    _onMessage(event) {\n        const { data: parsed, isGeneric } = parseRealtimeEvent(event);\n        if (parsed === null) {\n            return;\n        }\n        this.emit('*', parsed);\n        if (isGeneric) {\n            return;\n        }\n        if (parsed.type === 'error') {\n            this.emit('error', { type: 'error', error: parsed });\n        }\n        else {\n            this.emit(parsed.type, parsed);\n        }\n        if (parsed.type === 'response.created') {\n            this.emit('turn_started', {\n                type: 'response_started',\n                providerData: {\n                    ...parsed,\n                },\n            });\n            return;\n        }\n        if (parsed.type === 'session.updated') {\n            this.#rawSessionConfig = parsed.session;\n        }\n        if (parsed.type === 'response.done') {\n            const response = responseDoneEventSchema.safeParse(parsed);\n            if (!response.success) {\n                logger.error('Error parsing response done event', response.error);\n                return;\n            }\n            const inputTokens = response.data.response.usage?.input_tokens ?? 0;\n            const outputTokens = response.data.response.usage?.output_tokens ?? 0;\n            const totalTokens = inputTokens + outputTokens;\n            const usage = new Usage({\n                inputTokens,\n                inputTokensDetails: response.data.response.usage?.input_tokens_details ?? {},\n                outputTokens,\n                outputTokensDetails: response.data.response.usage?.output_tokens_details ?? {},\n                totalTokens,\n            });\n            this.emit('usage_update', usage);\n            this.emit('turn_done', {\n                type: 'response_done',\n                response: {\n                    id: response.data.response.id ?? '',\n                    output: response.data.response.output ?? [],\n                    usage: {\n                        inputTokens,\n                        inputTokensDetails: response.data.response.usage?.input_tokens_details ?? {},\n                        outputTokens,\n                        outputTokensDetails: response.data.response.usage?.output_tokens_details ?? {},\n                        totalTokens,\n                    },\n                },\n            });\n            return;\n        }\n        if (parsed.type === 'response.audio.done') {\n            this.emit('audio_done');\n            return;\n        }\n        if (parsed.type === 'conversation.item.deleted') {\n            this.emit('item_deleted', {\n                itemId: parsed.item_id,\n            });\n            return;\n        }\n        if (parsed.type === 'conversation.item.input_audio_transcription.completed' ||\n            parsed.type === 'conversation.item.truncated') {\n            // right now rather than keeping track of partials and rebuilding the item we\n            // will retrieve it instead which triggers the `conversation.item.retrieved` event below\n            this.sendEvent({\n                type: 'conversation.item.retrieve',\n                item_id: parsed.item_id,\n            });\n            return;\n        }\n        if (parsed.type === 'conversation.item.input_audio_transcription.delta' ||\n            parsed.type === 'response.text.delta' ||\n            parsed.type === 'response.audio_transcript.delta' ||\n            parsed.type === 'response.function_call_arguments.delta') {\n            if (parsed.type === 'response.audio_transcript.delta') {\n                this.emit('audio_transcript_delta', {\n                    type: 'transcript_delta',\n                    delta: parsed.delta,\n                    itemId: parsed.item_id,\n                    responseId: parsed.response_id,\n                });\n            }\n            // no support for partial transcripts yet.\n            return;\n        }\n        if (parsed.type === 'conversation.item.created' ||\n            parsed.type === 'conversation.item.retrieved') {\n            if (parsed.item.type === 'message') {\n                const previousItemId = parsed.type === 'conversation.item.created'\n                    ? parsed.previous_item_id\n                    : null;\n                const item = realtimeMessageItemSchema.parse({\n                    itemId: parsed.item.id,\n                    previousItemId,\n                    type: parsed.item.type,\n                    role: parsed.item.role,\n                    content: parsed.item.content,\n                    status: parsed.item.status,\n                });\n                this.emit('item_update', item);\n                return;\n            }\n        }\n        if (parsed.type === 'response.output_item.done' ||\n            parsed.type === 'response.output_item.added') {\n            const item = parsed.item;\n            if (item.type === 'function_call' && item.status === 'completed') {\n                const toolCall = realtimeToolCallItem.parse({\n                    itemId: item.id,\n                    type: item.type,\n                    status: 'in_progress', // we set it to in_progress for the UI as it will only be completed with the output\n                    arguments: item.arguments,\n                    name: item.name,\n                    output: null,\n                });\n                this.emit('item_update', toolCall);\n                this.emit('function_call', {\n                    id: item.id,\n                    type: 'function_call',\n                    callId: item.call_id ?? '',\n                    arguments: item.arguments ?? '',\n                    name: item.name ?? '',\n                });\n                return;\n            }\n            if (item.type === 'message') {\n                const realtimeItem = realtimeMessageItemSchema.parse({\n                    itemId: parsed.item.id,\n                    type: parsed.item.type,\n                    role: parsed.item.role,\n                    content: parsed.item.content,\n                    status: 'in_progress',\n                });\n                this.emit('item_update', realtimeItem);\n                return;\n            }\n        }\n    }\n    _onError(error) {\n        this.emit('error', {\n            type: 'error',\n            error,\n        });\n    }\n    _onOpen() {\n        this.emit('connected');\n    }\n    _onClose() {\n        this.emit('disconnected');\n    }\n    /**\n     * Send a message to the Realtime API. This will create a new item in the conversation and\n     * trigger a response.\n     *\n     * @param message - The message to send.\n     * @param otherEventData - Additional event data to send.\n     */\n    sendMessage(message, otherEventData) {\n        this.sendEvent({\n            type: 'conversation.item.create',\n            item: typeof message === 'string'\n                ? {\n                    type: 'message',\n                    role: 'user',\n                    content: [\n                        {\n                            type: 'input_text',\n                            text: message,\n                        },\n                    ],\n                }\n                : message,\n            ...otherEventData,\n        });\n        this.sendEvent({\n            type: 'response.create',\n        });\n    }\n    _getMergedSessionConfig(config) {\n        const sessionData = {\n            instructions: config.instructions,\n            model: config.model ??\n                this.#model ??\n                DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.model,\n            voice: config.voice ?? DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.voice,\n            speed: config.speed ?? DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.speed,\n            modalities: config.modalities ?? DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.modalities,\n            input_audio_format: config.inputAudioFormat ??\n                DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.inputAudioFormat,\n            output_audio_format: config.outputAudioFormat ??\n                DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.outputAudioFormat,\n            input_audio_transcription: config.inputAudioTranscription ??\n                DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.inputAudioTranscription,\n            input_audio_noise_reduction: config.inputAudioNoiseReduction ??\n                DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.inputAudioNoiseReduction,\n            turn_detection: OpenAIRealtimeBase.buildTurnDetectionConfig(config.turnDetection) ??\n                DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.turnDetection,\n            tool_choice: config.toolChoice ?? DEFAULT_OPENAI_REALTIME_SESSION_CONFIG.toolChoice,\n            tools: config.tools?.map((tool) => ({\n                ...tool,\n                strict: undefined,\n            })),\n            // We don't set tracing here to make sure that we don't try to override it on every\n            // session.update as it might lead to errors\n            ...(config.providerData ?? {}),\n        };\n        return sessionData;\n    }\n    static buildTurnDetectionConfig(c) {\n        if (typeof c === 'undefined') {\n            return undefined;\n        }\n        const { type, createResponse, create_response, eagerness, interruptResponse, interrupt_response, prefixPaddingMs, prefix_padding_ms, silenceDurationMs, silence_duration_ms, threshold, ...rest } = c;\n        const config = {\n            type,\n            create_response: createResponse ? createResponse : create_response,\n            eagerness,\n            interrupt_response: interruptResponse\n                ? interruptResponse\n                : interrupt_response,\n            prefix_padding_ms: prefixPaddingMs ? prefixPaddingMs : prefix_padding_ms,\n            silence_duration_ms: silenceDurationMs\n                ? silenceDurationMs\n                : silence_duration_ms,\n            threshold,\n            ...rest,\n        };\n        // Remove undefined values from the config\n        Object.keys(config).forEach((key) => {\n            if (config[key] === undefined)\n                delete config[key];\n        });\n        return Object.keys(config).length > 0 ? config : undefined;\n    }\n    /**\n     * Sets the internal tracing config. This is used to track the tracing config that has been set\n     * during the session.create event.\n     */\n    set _tracingConfig(tracingConfig) {\n        this.#tracingConfig = tracingConfig;\n    }\n    /**\n     * Sets the tracing config for the session. This will send the tracing config to the Realtime API.\n     *\n     * @param tracingConfig - The tracing config to set. We don't support 'auto' here as the SDK will always configure a Workflow Name unless it exists\n     */\n    _updateTracingConfig(tracingConfig) {\n        if (typeof this.#tracingConfig === 'undefined') {\n            // treating it as default value\n            this.#tracingConfig = null;\n        }\n        if (tracingConfig === 'auto') {\n            // turn on tracing in auto mode\n            this.sendEvent({\n                type: 'session.update',\n                session: {\n                    tracing: 'auto',\n                },\n            });\n            return;\n        }\n        if (typeof this.#tracingConfig !== 'string' &&\n            typeof tracingConfig !== 'string') {\n            // tracing is already set, we can't change it\n            logger.warn('Tracing config is already set, skipping setting it again. This likely happens when you already set a tracing config on session creation.');\n            return;\n        }\n        if (tracingConfig === null) {\n            logger.debug('Disabling tracing for this session. It cannot be turned on for this session from this point on.');\n            this.sendEvent({\n                type: 'session.update',\n                session: {\n                    tracing: null,\n                },\n            });\n            return;\n        }\n        if (this.#tracingConfig === null ||\n            typeof this.#tracingConfig === 'string') {\n            // tracing is currently not set so we can set it to the new value\n            this.sendEvent({\n                type: 'session.update',\n                session: {\n                    tracing: tracingConfig,\n                },\n            });\n            return;\n        }\n        if (tracingConfig?.group_id !== this.#tracingConfig?.group_id ||\n            tracingConfig?.metadata !== this.#tracingConfig?.metadata ||\n            tracingConfig?.workflow_name !== this.#tracingConfig?.workflow_name) {\n            logger.warn('Mismatch in tracing config. Ignoring the new tracing config. This likely happens when you already set a tracing config on session creation. Current tracing config: %s, new tracing config: %s', JSON.stringify(this.#tracingConfig), JSON.stringify(tracingConfig));\n            return;\n        }\n        this.sendEvent({\n            type: 'session.update',\n            session: {\n                tracing: tracingConfig,\n            },\n        });\n    }\n    /**\n     * Updates the session config. This will merge it with the current session config with the default\n     * values and send it to the Realtime API.\n     *\n     * @param config - The session config to update.\n     */\n    updateSessionConfig(config) {\n        const sessionData = this._getMergedSessionConfig(config);\n        this.sendEvent({\n            type: 'session.update',\n            session: sessionData,\n        });\n    }\n    /**\n     * Send the output of a function call to the Realtime API.\n     *\n     * @param toolCall - The tool call to send the output for.\n     * @param output - The output of the function call.\n     * @param startResponse - Whether to start a new response after sending the output.\n     */\n    sendFunctionCallOutput(toolCall, output, startResponse = true) {\n        this.sendEvent({\n            type: 'conversation.item.create',\n            item: {\n                type: 'function_call_output',\n                output,\n                call_id: toolCall.callId,\n            },\n        });\n        try {\n            const item = realtimeToolCallItem.parse({\n                itemId: toolCall.id,\n                previousItemId: toolCall.previousItemId,\n                type: 'function_call',\n                status: 'completed',\n                arguments: toolCall.arguments,\n                name: toolCall.name,\n                output,\n            });\n            this.emit('item_update', item);\n        }\n        catch (error) {\n            logger.error('Error parsing tool call item', error, toolCall);\n        }\n        if (startResponse) {\n            this.sendEvent({\n                type: 'response.create',\n            });\n        }\n    }\n    /**\n     * Send an audio buffer to the Realtime API. If `{ commit: true }` is passed, the audio buffer\n     * will be committed and the model will start processing it. This is necessary if you have\n     * disabled turn detection / voice activity detection (VAD).\n     *\n     * @param audio - The audio buffer to send.\n     * @param options - The options for the audio buffer.\n     */\n    sendAudio(audio, { commit = false } = {}) {\n        this.sendEvent({\n            type: 'input_audio_buffer.append',\n            audio: arrayBufferToBase64(audio),\n        });\n        if (commit) {\n            this.sendEvent({\n                type: 'input_audio_buffer.commit',\n            });\n        }\n    }\n    /**\n     * Reset the history of the conversation. This will create a diff between the old and new history\n     * and send the necessary events to the Realtime API to update the history.\n     *\n     * @param oldHistory - The old history of the conversation.\n     * @param newHistory - The new history of the conversation.\n     */\n    resetHistory(oldHistory, newHistory) {\n        const { removals, additions, updates } = diffRealtimeHistory(oldHistory, newHistory);\n        const removalIds = new Set(removals.map((item) => item.itemId));\n        // we don't have an update event for items so we will remove and re-add what's there\n        for (const update of updates) {\n            removalIds.add(update.itemId);\n        }\n        if (removalIds.size > 0) {\n            for (const itemId of removalIds) {\n                this.sendEvent({\n                    type: 'conversation.item.delete',\n                    item_id: itemId,\n                });\n            }\n        }\n        const additionsAndUpdates = [...additions, ...updates];\n        for (const addition of additionsAndUpdates) {\n            if (addition.type === 'message') {\n                const itemEntry = {\n                    type: 'message',\n                    role: addition.role,\n                    content: addition.content,\n                    id: addition.itemId,\n                };\n                if (addition.role !== 'system' && addition.status) {\n                    itemEntry.status = addition.status;\n                }\n                this.sendEvent({\n                    type: 'conversation.item.create',\n                    item: itemEntry,\n                });\n            }\n            else if (addition.type === 'function_call') {\n                logger.warn('Function calls cannot be manually added or updated at the moment. Ignoring.');\n            }\n        }\n    }\n}\n//# sourceMappingURL=openaiRealtimeBase.mjs.map","/// <reference lib=\"dom\" />\nimport { isBrowserEnvironment } from '@openai/agents-core/_shims';\nimport { UserError } from '@openai/agents-core';\nimport logger from \"./logger.mjs\";\nimport { OpenAIRealtimeBase, } from \"./openaiRealtimeBase.mjs\";\nimport { parseRealtimeEvent } from \"./openaiRealtimeEvents.mjs\";\nimport { HEADERS } from \"./utils.mjs\";\n/**\n * Transport layer that's handling the connection between the client and OpenAI's Realtime API\n * via WebRTC. While this transport layer is designed to be used within a RealtimeSession, it can\n * also be used standalone if you want to have a direct connection to the Realtime API.\n *\n * Unless you specify a `mediaStream` or `audioElement` option, the transport layer will\n * automatically configure the microphone and audio output to be used by the session.\n */\nexport class OpenAIRealtimeWebRTC extends OpenAIRealtimeBase {\n    options;\n    #url;\n    #state = {\n        status: 'disconnected',\n        peerConnection: undefined,\n        dataChannel: undefined,\n    };\n    #useInsecureApiKey;\n    #ongoingResponse = false;\n    #muted = false;\n    constructor(options = {}) {\n        if (typeof RTCPeerConnection === 'undefined') {\n            throw new Error('WebRTC is not supported in this environment');\n        }\n        super(options);\n        this.options = options;\n        this.#url = options.baseUrl ?? `https://api.openai.com/v1/realtime`;\n        this.#useInsecureApiKey = options.useInsecureApiKey ?? false;\n    }\n    /**\n     * The current status of the WebRTC connection.\n     */\n    get status() {\n        return this.#state.status;\n    }\n    /**\n     * The current connection state of the WebRTC connection including the peer connection and data\n     * channel.\n     */\n    get connectionState() {\n        return this.#state;\n    }\n    /**\n     * Whether the session is muted.\n     */\n    get muted() {\n        return this.#muted;\n    }\n    /**\n     * Connect to the Realtime API. This will establish the connection to the OpenAI Realtime API\n     * via WebRTC.\n     *\n     * If you are using a browser, the transport layer will also automatically configure the\n     * microphone and audio output to be used by the session.\n     *\n     * @param options - The options for the connection.\n     */\n    async connect(options) {\n        if (this.#state.status === 'connected') {\n            return;\n        }\n        if (this.#state.status === 'connecting') {\n            logger.warn('Realtime connection already in progress. Please await original promise');\n        }\n        const model = options.model ?? this.currentModel;\n        this.currentModel = model;\n        const baseUrl = options.url ?? this.#url;\n        const apiKey = await this._getApiKey(options);\n        const isClientKey = typeof apiKey === 'string' && apiKey.startsWith('ek_');\n        if (isBrowserEnvironment() && !this.#useInsecureApiKey && !isClientKey) {\n            throw new UserError('Using the WebRTC connection in a browser environment requires an insecure API key. Please use a WebSocket connection instead or set the useInsecureApiKey option to true.');\n        }\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                const userSessionConfig = {\n                    ...(options.initialSessionConfig || {}),\n                    model: this.currentModel,\n                };\n                const connectionUrl = new URL(baseUrl);\n                let peerConnection = new RTCPeerConnection();\n                const dataChannel = peerConnection.createDataChannel('oai-events');\n                this.#state = {\n                    status: 'connecting',\n                    peerConnection,\n                    dataChannel,\n                };\n                this.emit('connection_change', this.#state.status);\n                dataChannel.addEventListener('open', () => {\n                    this.#state = {\n                        status: 'connected',\n                        peerConnection,\n                        dataChannel,\n                    };\n                    // Sending the session config again here once the channel is connected to ensure\n                    // that the session config is sent to the server before the first response is received\n                    // Setting it on connection should work but the config is not being validated on the\n                    // server. This triggers a validation error if the config is not valid.\n                    this.updateSessionConfig(userSessionConfig);\n                    this.emit('connection_change', this.#state.status);\n                    this._onOpen();\n                    resolve();\n                });\n                dataChannel.addEventListener('error', (event) => {\n                    this.close();\n                    this._onError(event);\n                    reject(event);\n                });\n                dataChannel.addEventListener('message', (event) => {\n                    this._onMessage(event);\n                    const { data: parsed, isGeneric } = parseRealtimeEvent(event);\n                    if (!parsed || isGeneric) {\n                        return;\n                    }\n                    if (parsed.type === 'response.created') {\n                        this.#ongoingResponse = true;\n                    }\n                    else if (parsed.type === 'response.done') {\n                        this.#ongoingResponse = false;\n                    }\n                    if (parsed.type === 'session.created') {\n                        this._tracingConfig = parsed.session.tracing;\n                        // Trying to turn on tracing after the session is created\n                        this._updateTracingConfig(userSessionConfig.tracing ?? 'auto');\n                    }\n                });\n                // set up audio playback\n                const audioElement = this.options.audioElement ?? document.createElement('audio');\n                audioElement.autoplay = true;\n                peerConnection.ontrack = (event) => {\n                    audioElement.srcObject = event.streams[0];\n                };\n                // get microphone stream\n                const stream = this.options.mediaStream ??\n                    (await navigator.mediaDevices.getUserMedia({\n                        audio: true,\n                    }));\n                peerConnection.addTrack(stream.getAudioTracks()[0]);\n                if (this.options.changePeerConnection) {\n                    peerConnection =\n                        await this.options.changePeerConnection(peerConnection);\n                    this.#state = { ...this.#state, peerConnection };\n                }\n                const offer = await peerConnection.createOffer();\n                await peerConnection.setLocalDescription(offer);\n                if (!offer.sdp) {\n                    throw new Error('Failed to create offer');\n                }\n                const sessionConfig = {\n                    ...this._getMergedSessionConfig(userSessionConfig),\n                    model: this.currentModel,\n                };\n                const data = new FormData();\n                data.append('sdp', offer.sdp);\n                data.append('session', JSON.stringify(sessionConfig));\n                const sdpResponse = await fetch(connectionUrl, {\n                    method: 'POST',\n                    body: data,\n                    headers: {\n                        Authorization: `Bearer ${apiKey}`,\n                        'X-OpenAI-Agents-SDK': HEADERS['X-OpenAI-Agents-SDK'],\n                    },\n                });\n                const answer = {\n                    type: 'answer',\n                    sdp: await sdpResponse.text(),\n                };\n                await peerConnection.setRemoteDescription(answer);\n            }\n            catch (error) {\n                this.close();\n                this._onError(error);\n                reject(error);\n            }\n        });\n    }\n    /**\n     * Send an event to the Realtime API. This will stringify the event and send it directly to the\n     * API. This can be used if you want to take control over the connection and send events manually.\n     *\n     * @param event - The event to send.\n     */\n    sendEvent(event) {\n        if (!this.#state.dataChannel ||\n            this.#state.dataChannel.readyState !== 'open') {\n            throw new Error('WebRTC data channel is not connected. Make sure you call `connect()` before sending events.');\n        }\n        this.#state.dataChannel.send(JSON.stringify(event));\n    }\n    /**\n     * Mute or unmute the session.\n     * @param muted - Whether to mute the session.\n     */\n    mute(muted) {\n        this.#muted = muted;\n        if (this.#state.peerConnection) {\n            const peerConnection = this.#state.peerConnection;\n            peerConnection.getSenders().forEach((sender) => {\n                if (sender.track) {\n                    sender.track.enabled = !muted;\n                }\n            });\n        }\n    }\n    /**\n     * Close the connection to the Realtime API and disconnects the underlying WebRTC connection.\n     */\n    close() {\n        if (this.#state.dataChannel) {\n            this.#state.dataChannel.close();\n        }\n        if (this.#state.peerConnection) {\n            const peerConnection = this.#state.peerConnection;\n            peerConnection.getSenders().forEach((sender) => {\n                sender.track?.stop();\n            });\n            peerConnection.close();\n        }\n        if (this.#state.status !== 'disconnected') {\n            this.#state = {\n                status: 'disconnected',\n                peerConnection: undefined,\n                dataChannel: undefined,\n            };\n            this.emit('connection_change', this.#state.status);\n            this._onClose();\n        }\n    }\n    /**\n     * Interrupt the current response if one is ongoing and clear the audio buffer so that the agent\n     * stops talking.\n     */\n    interrupt() {\n        if (this.#ongoingResponse) {\n            this.sendEvent({\n                type: 'response.cancel',\n            });\n            this.#ongoingResponse = false;\n        }\n        this.sendEvent({\n            type: 'output_audio_buffer.clear',\n        });\n    }\n}\n//# sourceMappingURL=openaiRealtimeWebRtc.mjs.map","/// <reference lib=\"dom\" />\nexport const WebSocket = globalThis.WebSocket;\nexport function isBrowserEnvironment() {\n    return true;\n}\nexport const useWebSocketProtocols = true;\n//# sourceMappingURL=shims-browser.mjs.map","import { isBrowserEnvironment, useWebSocketProtocols, WebSocket, } from '@openai/agents-realtime/_shims';\nimport { OpenAIRealtimeBase, } from \"./openaiRealtimeBase.mjs\";\nimport { base64ToArrayBuffer, HEADERS, WEBSOCKET_META } from \"./utils.mjs\";\nimport { UserError } from '@openai/agents-core';\nimport { parseRealtimeEvent } from \"./openaiRealtimeEvents.mjs\";\n/**\n * Transport layer that's handling the connection between the client and OpenAI's Realtime API\n * via WebSockets. While this transport layer is designed to be used within a RealtimeSession, it\n * can also be used standalone if you want to have a direct connection to the Realtime API.\n */\nexport class OpenAIRealtimeWebSocket extends OpenAIRealtimeBase {\n    #apiKey;\n    #url;\n    #state = {\n        status: 'disconnected',\n        websocket: undefined,\n    };\n    #useInsecureApiKey;\n    #currentItemId;\n    #currentAudioContentIndex;\n    /**\n     * Timestamp maintained by the transport layer to aid with the calculation of the elapsed time\n     * since the response started to compute the right interruption time.\n     *\n     * Mostly internal but might be used by extended transport layers for their interruption\n     * calculation.\n     */\n    _firstAudioTimestamp;\n    _audioLengthMs = 0;\n    #ongoingResponse = false;\n    constructor(options = {}) {\n        super(options);\n        this.#url = `wss://api.openai.com/v1/realtime?model=${this.currentModel}`;\n        this.#useInsecureApiKey = options.useInsecureApiKey ?? false;\n    }\n    /**\n     * The current status of the WebSocket connection.\n     */\n    get status() {\n        return this.#state.status;\n    }\n    /**\n     * The current connection state of the WebSocket connection.\n     */\n    get connectionState() {\n        return this.#state;\n    }\n    /**\n     * Always returns `null` as the WebSocket transport layer does not handle muting. Instead,\n     * this should be handled by the client by not triggering the `sendAudio` method.\n     */\n    get muted() {\n        return null;\n    }\n    /**\n     * The current item ID of the ongoing response.\n     */\n    get currentItemId() {\n        return this.#currentItemId;\n    }\n    /**\n     * Triggers the `audio` event that a client might listen to to receive the audio buffer.\n     * Protected for you to be able to override and disable emitting this event in case your extended\n     * transport layer handles audio internally.\n     *\n     * @param audioEvent - The audio event to emit.\n     */\n    _onAudio(audioEvent) {\n        this.emit('audio', audioEvent);\n    }\n    #setupWebSocket(resolve, reject, sessionConfig) {\n        if (this.#state.websocket) {\n            resolve();\n            return;\n        }\n        if (!this.#apiKey) {\n            throw new UserError('API key is not set. Please call `connect()` with an API key first.');\n        }\n        if (isBrowserEnvironment() &&\n            !this.#apiKey.startsWith('ek_') &&\n            !this.#useInsecureApiKey) {\n            throw new UserError('Using the WebSocket connection in a browser environment requires an ephemeral client key. If you have to use a regular API key, set the `useInsecureApiKey` option to true.');\n        }\n        // browsers and workerd should use the protocols argument, node should use the headers argument\n        const websocketArguments = useWebSocketProtocols\n            ? [\n                'realtime',\n                // Auth\n                'openai-insecure-api-key.' + this.#apiKey,\n                // Beta protocol, required\n                'openai-beta.realtime-v1',\n                // Version header\n                WEBSOCKET_META,\n            ]\n            : {\n                headers: {\n                    Authorization: `Bearer ${this.#apiKey}`,\n                    'OpenAI-Beta': 'realtime=v1',\n                    ...HEADERS,\n                },\n            };\n        const ws = new WebSocket(this.#url, websocketArguments);\n        this.#state = {\n            status: 'connecting',\n            websocket: ws,\n        };\n        this.emit('connection_change', this.#state.status);\n        ws.addEventListener('open', () => {\n            this.#state = {\n                status: 'connected',\n                websocket: ws,\n            };\n            this.emit('connection_change', this.#state.status);\n            this._onOpen();\n            resolve();\n        });\n        ws.addEventListener('error', (error) => {\n            this._onError(error);\n            this.#state = {\n                status: 'disconnected',\n                websocket: undefined,\n            };\n            this.emit('connection_change', this.#state.status);\n            reject(error);\n        });\n        ws.addEventListener('message', (message) => {\n            this._onMessage(message);\n            const { data: parsed, isGeneric } = parseRealtimeEvent(message);\n            if (!parsed || isGeneric) {\n                return;\n            }\n            if (parsed.type === 'response.audio.delta') {\n                this.#currentAudioContentIndex = parsed.content_index;\n                this.#currentItemId = parsed.item_id;\n                if (this._firstAudioTimestamp === undefined) {\n                    // If the response start timestamp is not set, we set it to the current time.\n                    // This is used to calculate the elapsed time for interruption.\n                    this._firstAudioTimestamp = Date.now();\n                    this._audioLengthMs = 0;\n                }\n                const buff = base64ToArrayBuffer(parsed.delta);\n                // calculate the audio length in milliseconds assuming 24kHz pcm16le\n                const audioFormat = this._rawSessionConfig?.output_audio_format ?? 'pcm16';\n                if (audioFormat.startsWith('g711_')) {\n                    // 8kHz * 1 byte per sample\n                    this._audioLengthMs += buff.byteLength / 8;\n                }\n                else {\n                    // 24kHz * 2 bytes per sample\n                    this._audioLengthMs += buff.byteLength / 24 / 2;\n                }\n                const audioEvent = {\n                    type: 'audio',\n                    data: buff,\n                    responseId: parsed.response_id,\n                };\n                this._onAudio(audioEvent);\n            }\n            else if (parsed.type === 'input_audio_buffer.speech_started') {\n                const automaticResponseCancellationEnabled = this._rawSessionConfig?.turn_detection?.interrupt_response ?? false;\n                this.interrupt(!automaticResponseCancellationEnabled);\n            }\n            else if (parsed.type === 'response.created') {\n                this.#ongoingResponse = true;\n            }\n            else if (parsed.type === 'response.done') {\n                this.#ongoingResponse = false;\n            }\n            else if (parsed.type === 'session.created') {\n                this._tracingConfig = parsed.session.tracing;\n                // Trying to turn on tracing after the session is created\n                this._updateTracingConfig(sessionConfig.tracing ?? 'auto');\n            }\n        });\n        ws.addEventListener('close', () => {\n            this.#state = {\n                status: 'disconnected',\n                websocket: undefined,\n            };\n            this.emit('connection_change', this.#state.status);\n            this._onClose();\n        });\n    }\n    async connect(options) {\n        const model = options.model ?? this.currentModel;\n        this.currentModel = model;\n        this.#apiKey = await this._getApiKey(options);\n        this.#url =\n            options.url ??\n                `wss://api.openai.com/v1/realtime?model=${this.currentModel}`;\n        const sessionConfig = {\n            ...(options.initialSessionConfig || {}),\n            model: this.currentModel,\n        };\n        await new Promise((resolve, reject) => {\n            try {\n                this.#setupWebSocket(resolve, reject, sessionConfig);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n        await this.updateSessionConfig(sessionConfig);\n    }\n    /**\n     * Send an event to the Realtime API. This will stringify the event and send it directly to the\n     * API. This can be used if you want to take control over the connection and send events manually.\n     *\n     * @param event - The event to send.\n     */\n    sendEvent(event) {\n        if (!this.#state.websocket) {\n            throw new Error('WebSocket is not connected. Make sure you call `connect()` before sending events.');\n        }\n        this.#state.websocket.send(JSON.stringify(event));\n    }\n    /**\n     * Close the WebSocket connection.\n     *\n     * This will also reset any internal connection tracking used for interruption handling.\n     */\n    close() {\n        this.#state.websocket?.close();\n        this.#currentItemId = undefined;\n        this._firstAudioTimestamp = undefined;\n        this._audioLengthMs = 0;\n        this.#currentAudioContentIndex = undefined;\n    }\n    /**\n     * Will throw an error as the WebSocket transport layer does not support muting.\n     */\n    mute(_muted) {\n        throw new Error('Mute is not supported for the WebSocket transport. You have to mute the audio input yourself.');\n    }\n    /**\n     * Send an audio buffer to the Realtime API. This is used for your client to send audio to the\n     * model to respond.\n     *\n     * @param audio - The audio buffer to send.\n     * @param options - The options for the audio buffer.\n     */\n    sendAudio(audio, options = {}) {\n        if (this.#state.status === 'connected') {\n            super.sendAudio(audio, options);\n        }\n    }\n    /**\n     * Send a cancel response event to the Realtime API. This is used to cancel an ongoing\n     *  response that the model is currently generating.\n     */\n    _cancelResponse() {\n        // cancel the ongoing response\n        if (this.#ongoingResponse) {\n            this.sendEvent({\n                type: 'response.cancel',\n            });\n            this.#ongoingResponse = false;\n        }\n    }\n    /**\n     * Do NOT call this method directly. Call `interrupt()` instead for proper interruption handling.\n     *\n     * This method is used to send the right events to the API to inform the model that the user has\n     * interrupted the response. It might be overridden/extended by an extended transport layer. See\n     * the `TwilioRealtimeTransportLayer` for an example.\n     *\n     * @param elapsedTime - The elapsed time since the response started.\n     */\n    _interrupt(elapsedTime, cancelOngoingResponse = true) {\n        if (elapsedTime < 0 || elapsedTime > this._audioLengthMs) {\n            return;\n        }\n        // immediately emit this event so the client can stop playing audio\n        if (cancelOngoingResponse) {\n            this._cancelResponse();\n        }\n        this.emit('audio_interrupted');\n        this.sendEvent({\n            type: 'conversation.item.truncate',\n            item_id: this.#currentItemId,\n            content_index: this.#currentAudioContentIndex,\n            audio_end_ms: elapsedTime,\n        });\n    }\n    /**\n     * Interrupt the ongoing response. This method is triggered automatically by the client when\n     * voice activity detection (VAD) is enabled (default) as well as when an output guardrail got\n     * triggered.\n     *\n     * You can also call this method directly if you want to interrupt the conversation for example\n     * based on an event in the client.\n     */\n    interrupt(cancelOngoingResponse = true) {\n        if (!this.#currentItemId || typeof this._firstAudioTimestamp !== 'number') {\n            return;\n        }\n        const elapsedTime = Date.now() - this._firstAudioTimestamp;\n        if (elapsedTime >= 0) {\n            this._interrupt(elapsedTime, cancelOngoingResponse);\n        }\n        this.#currentItemId = undefined;\n        this._firstAudioTimestamp = undefined;\n        this._audioLengthMs = 0;\n        this.#currentAudioContentIndex = undefined;\n    }\n}\n//# sourceMappingURL=openaiRealtimeWebsocket.mjs.map","import { getHandoff, getTransferMessage, ModelBehaviorError, OutputGuardrailTripwireTriggered, RunContext, RunToolApprovalItem, } from '@openai/agents-core';\nimport { RuntimeEventEmitter } from '@openai/agents-core/_shims';\nimport { isZodObject, toSmartString } from '@openai/agents-core/utils';\nimport { defineRealtimeOutputGuardrail, getRealtimeGuardrailFeedbackMessage, getRealtimeGuardrailSettings, } from \"./guardrail.mjs\";\nimport { OpenAIRealtimeWebRTC } from \"./openaiRealtimeWebRtc.mjs\";\nimport { OpenAIRealtimeWebSocket } from \"./openaiRealtimeWebsocket.mjs\";\nimport { getLastTextFromAudioOutputMessage, hasWebRTCSupport, updateRealtimeHistory, } from \"./utils.mjs\";\nimport logger from \"./logger.mjs\";\n/**\n * A `RealtimeSession` is the corner piece of building Voice Agents. It's the equivalent of a\n * Runner in text-based agents except that it automatically handles multiple turns by maintaining a\n * connection with the underlying transport layer.\n *\n * The session handles managing the local history copy, executes tools, runs output guardrails, and\n * facilities handoffs.\n *\n * The actual audio handling and generation of model responses is handled by the underlying\n * transport layer. By default if you are using a browser with WebRTC support, the session will\n * automatically use the WebRTC version of the OpenAI Realtime API. On the server or if you pass\n * `websocket` as the transport layer, the session will establish a connection using WebSockets.\n *\n * In the case of WebRTC, in the browser, the transport layer will also automatically configure the\n * microphone and audio output to be used by the session.\n *\n * You can also create a transport layer instance yourself and pass it in to have more control over\n * the configuration or even extend the existing ones. Check out the `TwilioRealtimeTransportLayer`\n * for an example of how to create a custom transport layer.\n *\n * @example\n * ```ts\n * const agent = new RealtimeAgent({\n *   name: 'my-agent',\n *   instructions: 'You are a helpful assistant that can answer questions and help with tasks.',\n * })\n *\n * const session = new RealtimeSession(agent);\n * session.connect({\n *   apiKey: 'your-api-key',\n * });\n * ```\n */\nexport class RealtimeSession extends RuntimeEventEmitter {\n    initialAgent;\n    options;\n    #transport;\n    #currentAgent;\n    #currentTools = [];\n    #context;\n    #outputGuardrails = [];\n    #outputGuardrailSettings;\n    #transcribedTextDeltas = {};\n    #history = [];\n    #shouldIncludeAudioData;\n    #interruptedByGuardrail = {};\n    constructor(initialAgent, options = {}) {\n        super();\n        this.initialAgent = initialAgent;\n        this.options = options;\n        if ((typeof options.transport === 'undefined' && hasWebRTCSupport()) ||\n            options.transport === 'webrtc') {\n            this.#transport = new OpenAIRealtimeWebRTC();\n        }\n        else if (options.transport === 'websocket' ||\n            typeof options.transport === 'undefined') {\n            this.#transport = new OpenAIRealtimeWebSocket();\n        }\n        else {\n            this.#transport = options.transport;\n        }\n        this.#currentAgent = initialAgent;\n        this.#context = new RunContext({\n            ...(options.context ?? {}),\n            history: this.#history,\n        });\n        this.#outputGuardrails = (options.outputGuardrails ?? []).map(defineRealtimeOutputGuardrail);\n        this.#outputGuardrailSettings = getRealtimeGuardrailSettings(options.outputGuardrailSettings ?? {});\n        this.#shouldIncludeAudioData = options.historyStoreAudio ?? false;\n    }\n    /**\n     * The transport layer used by the session.\n     */\n    get transport() {\n        return this.#transport;\n    }\n    /**\n     * The current agent in the session.\n     */\n    get currentAgent() {\n        return this.#currentAgent;\n    }\n    /**\n     * The current usage of the session.\n     */\n    get usage() {\n        return this.#context.usage;\n    }\n    /**\n     * The current context of the session.\n     */\n    get context() {\n        return this.#context;\n    }\n    /**\n     * Whether the session is muted. Might be `null` if the underlying transport layer does not\n     * support muting.\n     */\n    get muted() {\n        return this.#transport.muted;\n    }\n    /**\n     * The history of the session.\n     */\n    get history() {\n        return this.#history;\n    }\n    async #setCurrentAgent(agent) {\n        this.#currentAgent = agent;\n        const handoffs = this.#currentAgent.handoffs.map(getHandoff);\n        const handoffTools = handoffs.map((handoff) => handoff.getHandoffAsFunctionTool());\n        this.#currentTools = [\n            ...(await this.#currentAgent.getAllTools()).filter((tool) => tool.type === 'function'),\n            ...handoffTools,\n        ];\n    }\n    async #getSessionConfig(additionalConfig = {}) {\n        const instructions = await this.#currentAgent.getSystemPrompt(this.#context);\n        const tracingConfig = this.options\n            .tracingDisabled\n            ? null\n            : this.options.workflowName\n                ? {\n                    workflow_name: this.options.workflowName,\n                }\n                : 'auto';\n        if (tracingConfig !== null && tracingConfig !== 'auto') {\n            if (this.options.groupId) {\n                tracingConfig.group_id = this.options.groupId;\n            }\n            if (this.options.traceMetadata) {\n                tracingConfig.metadata = this.options.traceMetadata;\n            }\n        }\n        else if (this.options.groupId || this.options.traceMetadata) {\n            logger.warn('In order to set traceMetadata or a groupId you need to specify a workflowName.');\n        }\n        return {\n            instructions,\n            voice: this.#currentAgent.voice,\n            model: this.options.model,\n            tools: this.#currentTools,\n            tracing: tracingConfig,\n            ...additionalConfig,\n        };\n    }\n    async updateAgent(newAgent) {\n        this.#currentAgent.emit('agent_handoff', this.#context, newAgent);\n        this.emit('agent_handoff', this.#context, this.#currentAgent, newAgent);\n        await this.#setCurrentAgent(newAgent);\n        await this.#transport.updateSessionConfig(await this.#getSessionConfig());\n        return newAgent;\n    }\n    async #handleHandoff(toolCall, handoff) {\n        const newAgent = (await handoff.onInvokeHandoff(this.#context, toolCall.arguments));\n        this.#currentAgent.emit('agent_handoff', this.#context, newAgent);\n        this.emit('agent_handoff', this.#context, this.#currentAgent, newAgent);\n        // update session with new agent\n        await this.#setCurrentAgent(newAgent);\n        await this.#transport.updateSessionConfig(await this.#getSessionConfig());\n        const output = getTransferMessage(newAgent);\n        this.#transport.sendFunctionCallOutput(toolCall, output, true);\n        return newAgent;\n    }\n    async #handleFunctionToolCall(toolCall, tool) {\n        this.#context.context.history = JSON.parse(JSON.stringify(this.#history)); // deep copy of the history\n        let parsedArgs = toolCall.arguments;\n        if (tool.parameters) {\n            if (isZodObject(tool.parameters)) {\n                parsedArgs = tool.parameters.parse(parsedArgs);\n            }\n            else {\n                parsedArgs = JSON.parse(parsedArgs);\n            }\n        }\n        const needsApproval = await tool.needsApproval(this.#context, parsedArgs, toolCall.callId);\n        if (needsApproval) {\n            const approval = this.context.isToolApproved({\n                toolName: tool.name,\n                callId: toolCall.callId,\n            });\n            if (approval === false) {\n                this.emit('agent_tool_start', this.#context, this.#currentAgent, tool, {\n                    toolCall,\n                });\n                this.#currentAgent.emit('agent_tool_start', this.#context, tool, {\n                    toolCall,\n                });\n                const result = 'Tool execution was not approved.';\n                this.#transport.sendFunctionCallOutput(toolCall, result, true);\n                this.emit('agent_tool_end', this.#context, this.#currentAgent, tool, result, { toolCall });\n                this.#currentAgent.emit('agent_tool_end', this.#context, tool, result, {\n                    toolCall,\n                });\n                return;\n            }\n            else if (typeof approval === 'undefined') {\n                this.emit('tool_approval_requested', this.#context, this.#currentAgent, {\n                    type: 'function_approval',\n                    tool,\n                    approvalItem: new RunToolApprovalItem(toolCall, this.#currentAgent),\n                });\n                return;\n            }\n        }\n        this.emit('agent_tool_start', this.#context, this.#currentAgent, tool, {\n            toolCall,\n        });\n        this.#currentAgent.emit('agent_tool_start', this.#context, tool, {\n            toolCall,\n        });\n        this.#context.context.history = JSON.parse(JSON.stringify(this.#history)); // deep copy of the history\n        const result = await tool.invoke(this.#context, toolCall.arguments);\n        const stringResult = toSmartString(result);\n        this.#transport.sendFunctionCallOutput(toolCall, stringResult, true);\n        this.emit('agent_tool_end', this.#context, this.#currentAgent, tool, stringResult, { toolCall });\n        this.#currentAgent.emit('agent_tool_end', this.#context, tool, stringResult, { toolCall });\n    }\n    async #handleFunctionCall(toolCall) {\n        const handoffMap = new Map(this.#currentAgent.handoffs\n            .map(getHandoff)\n            .map((handoff) => [handoff.toolName, handoff]));\n        const functionToolMap = new Map((await this.#currentAgent.getAllTools()).map((tool) => [tool.name, tool]));\n        const possibleHandoff = handoffMap.get(toolCall.name);\n        if (possibleHandoff) {\n            await this.#handleHandoff(toolCall, possibleHandoff);\n        }\n        else {\n            const functionTool = functionToolMap.get(toolCall.name);\n            if (functionTool && functionTool.type === 'function') {\n                await this.#handleFunctionToolCall(toolCall, functionTool);\n            }\n            else {\n                throw new ModelBehaviorError(`Tool ${toolCall.name} not found`);\n            }\n        }\n    }\n    async #runOutputGuardrails(output, responseId, itemId) {\n        if (this.#outputGuardrails.length === 0) {\n            return;\n        }\n        const guardrailArgs = {\n            agent: this.#currentAgent,\n            agentOutput: output,\n            context: this.#context,\n        };\n        const results = await Promise.all(this.#outputGuardrails.map((guardrail) => guardrail.run(guardrailArgs)));\n        const firstTripwireTriggered = results.find((result) => result.output.tripwireTriggered);\n        if (firstTripwireTriggered) {\n            // this ensures that if one guardrail already trips and we are in the middle of another\n            // guardrail run, we don't trip again\n            if (this.#interruptedByGuardrail[responseId]) {\n                return;\n            }\n            this.#interruptedByGuardrail[responseId] = true;\n            const error = new OutputGuardrailTripwireTriggered(`Output guardrail triggered: ${JSON.stringify(firstTripwireTriggered.output.outputInfo)}`, firstTripwireTriggered);\n            this.emit('guardrail_tripped', this.#context, this.#currentAgent, error, {\n                itemId,\n            });\n            this.interrupt();\n            const feedbackText = getRealtimeGuardrailFeedbackMessage(firstTripwireTriggered);\n            this.sendMessage(feedbackText);\n            return;\n        }\n    }\n    #setEventListeners() {\n        this.#transport.on('*', (event) => {\n            this.emit('transport_event', event);\n            // Handle completed user transcription events\n            if (event.type === 'conversation.item.input_audio_transcription.completed') {\n                try {\n                    const completedEvent = event;\n                    this.#history = updateRealtimeHistory(this.#history, completedEvent, this.#shouldIncludeAudioData);\n                    this.#context.context.history = this.#history;\n                    this.emit('history_updated', this.#history);\n                }\n                catch (err) {\n                    this.emit('error', {\n                        type: 'error',\n                        error: err,\n                    });\n                }\n            }\n        });\n        this.#transport.on('audio', (event) => {\n            this.emit('audio', event);\n        });\n        this.#transport.on('turn_started', () => {\n            this.emit('agent_start', this.#context, this.#currentAgent);\n            this.#currentAgent.emit('agent_start', this.#context, this.#currentAgent);\n        });\n        this.#transport.on('turn_done', (event) => {\n            const item = event.response.output[event.response.output.length - 1];\n            const textOutput = getLastTextFromAudioOutputMessage(item) ?? '';\n            const itemId = item?.id ?? '';\n            this.emit('agent_end', this.#context, this.#currentAgent, textOutput);\n            this.#currentAgent.emit('agent_end', this.#context, textOutput);\n            this.#runOutputGuardrails(textOutput, event.response.id, itemId);\n        });\n        this.#transport.on('audio_done', () => {\n            this.emit('audio_stopped', this.#context, this.#currentAgent);\n        });\n        let lastRunIndex = 0;\n        let lastItemId;\n        this.#transport.on('audio_transcript_delta', (event) => {\n            try {\n                const delta = event.delta;\n                const itemId = event.itemId;\n                const responseId = event.responseId;\n                if (lastItemId !== itemId) {\n                    lastItemId = itemId;\n                    lastRunIndex = 0;\n                }\n                const currentText = this.#transcribedTextDeltas[itemId] ?? '';\n                const newText = currentText + delta;\n                this.#transcribedTextDeltas[itemId] = newText;\n                if (this.#outputGuardrailSettings.debounceTextLength < 0) {\n                    return;\n                }\n                const newRunIndex = Math.floor(newText.length / this.#outputGuardrailSettings.debounceTextLength);\n                if (newRunIndex > lastRunIndex) {\n                    lastRunIndex = newRunIndex;\n                    // We don't cancel existing runs because we want the first one to fail to fail\n                    // The transport layer should upon failure handle the interruption and stop the model\n                    // from generating further\n                    this.#runOutputGuardrails(newText, responseId, itemId);\n                }\n            }\n            catch (err) {\n                this.emit('error', {\n                    type: 'error',\n                    error: err,\n                });\n            }\n        });\n        this.#transport.on('item_update', (event) => {\n            try {\n                const isNew = !this.#history.some((item) => item.itemId === event.itemId);\n                this.#history = updateRealtimeHistory(this.#history, event, this.#shouldIncludeAudioData);\n                this.#context.context.history = this.#history;\n                if (isNew) {\n                    const addedItem = this.#history.find((item) => item.itemId === event.itemId);\n                    if (addedItem) {\n                        this.emit('history_added', addedItem);\n                    }\n                }\n                this.emit('history_updated', this.#history);\n            }\n            catch (err) {\n                this.emit('error', {\n                    type: 'error',\n                    error: err,\n                });\n            }\n        });\n        this.#transport.on('item_deleted', (event) => {\n            try {\n                this.#history = this.#history.filter((item) => item.itemId !== event.itemId);\n                this.#context.context.history = this.#history;\n                this.emit('history_updated', this.#history);\n            }\n            catch (err) {\n                this.emit('error', {\n                    type: 'error',\n                    error: err,\n                });\n            }\n        });\n        this.#transport.on('function_call', async (event) => {\n            try {\n                await this.#handleFunctionCall(event);\n            }\n            catch (error) {\n                logger.error('Error handling function call', error);\n                this.emit('error', {\n                    type: 'error',\n                    error,\n                });\n            }\n        });\n        this.#transport.on('usage_update', (usage) => {\n            this.#context.usage.add(usage);\n        });\n        this.#transport.on('audio_interrupted', () => {\n            this.emit('audio_interrupted', this.#context, this.#currentAgent);\n        });\n        this.#transport.on('error', (error) => {\n            this.emit('error', error);\n        });\n    }\n    /**\n     * Connect to the session. This will establish the connection to the underlying transport layer\n     * and start the session.\n     *\n     * After connecting, the session will also emit a `history_updated` event with an empty history.\n     *\n     * @param options - The options for the connection.\n     */\n    async connect(options) {\n        // makes sure the current agent is correctly set and loads the tools\n        await this.#setCurrentAgent(this.initialAgent);\n        this.#setEventListeners();\n        await this.#transport.connect({\n            apiKey: options.apiKey ?? this.options.apiKey,\n            model: this.options.model,\n            initialSessionConfig: await this.#getSessionConfig(this.options.config),\n        });\n        this.#history = [];\n        this.emit('history_updated', this.#history);\n    }\n    /**\n     * Update the history of the session.\n     * @param newHistory - The new history to set.\n     */\n    updateHistory(newHistory) {\n        let updatedHistory;\n        if (typeof newHistory === 'function') {\n            updatedHistory = newHistory(this.#history);\n        }\n        else {\n            updatedHistory = newHistory;\n        }\n        this.#transport.resetHistory(this.#history, updatedHistory);\n    }\n    /**\n     * Send a message to the session.\n     * @param message - The message to send.\n     * @param otherEventData - Additional event data to send.\n     */\n    sendMessage(message, otherEventData = {}) {\n        this.#transport.sendMessage(message, otherEventData);\n    }\n    /**\n     * Mute the session.\n     * @param muted - Whether to mute the session.\n     */\n    mute(muted) {\n        this.#transport.mute(muted);\n    }\n    /**\n     * Disconnect from the session.\n     */\n    close() {\n        this.#interruptedByGuardrail = {};\n        this.#transport.close();\n    }\n    /**\n     * Send audio to the session.\n     * @param audio - The audio to send.\n     * @param options - Additional options.\n     * @param options.commit - Whether to finish the turn with this audio.\n     */\n    sendAudio(audio, options = {}) {\n        this.#transport.sendAudio(audio, options);\n    }\n    /**\n     * Interrupt the session artificially for example if you want to build a \"stop talking\"\n     * button.\n     */\n    interrupt() {\n        this.#transport.interrupt();\n    }\n    /**\n     * Approve a tool call. This will also trigger the tool call to the agent.\n     * @param approvalItem - The approval item to approve.\n     * @param options - Additional options.\n     * @param options.alwaysApprove - Whether to always approve the tool call.\n     */\n    async approve(approvalItem, options = { alwaysApprove: false }) {\n        this.#context.approveTool(approvalItem, options);\n        const tool = this.#currentAgent.tools.find((tool) => tool.name === approvalItem.rawItem.name);\n        if (tool &&\n            tool.type === 'function' &&\n            approvalItem.rawItem.type === 'function_call') {\n            await this.#handleFunctionToolCall(approvalItem.rawItem, tool);\n        }\n        else {\n            throw new ModelBehaviorError(`Tool ${approvalItem.rawItem.name} not found`);\n        }\n    }\n    /**\n     * Reject a tool call. This will also trigger the tool call to the agent.\n     * @param approvalItem - The approval item to reject.\n     * @param options - Additional options.\n     * @param options.alwaysReject - Whether to always reject the tool call.\n     */\n    async reject(approvalItem, options = { alwaysReject: false }) {\n        this.#context.rejectTool(approvalItem, options);\n        // we still need to simulate a tool call to the agent to let the agent know\n        const tool = this.#currentAgent.tools.find((tool) => tool.name === approvalItem.rawItem.name);\n        if (tool &&\n            tool.type === 'function' &&\n            approvalItem.rawItem.type === 'function_call') {\n            await this.#handleFunctionToolCall(approvalItem.rawItem, tool);\n        }\n        else {\n            throw new ModelBehaviorError(`Tool ${approvalItem.rawItem.name} not found`);\n        }\n    }\n}\n//# sourceMappingURL=realtimeSession.mjs.map","import * as utilImport from \"./utils.mjs\";\nexport { RealtimeAgent } from \"./realtimeAgent.mjs\";\nexport { RealtimeSession, } from \"./realtimeSession.mjs\";\nexport { OpenAIRealtimeWebRTC, } from \"./openaiRealtimeWebRtc.mjs\";\nexport { OpenAIRealtimeWebSocket, } from \"./openaiRealtimeWebsocket.mjs\";\nexport { OpenAIRealtimeBase, DEFAULT_OPENAI_REALTIME_MODEL, DEFAULT_OPENAI_REALTIME_SESSION_CONFIG, } from \"./openaiRealtimeBase.mjs\";\nexport const utils = {\n    base64ToArrayBuffer: utilImport.base64ToArrayBuffer,\n    arrayBufferToBase64: utilImport.arrayBufferToBase64,\n    getLastTextFromAudioOutputMessage: utilImport.getLastTextFromAudioOutputMessage,\n};\nexport { ModelBehaviorError, OutputGuardrailTripwireTriggered, tool, UserError, } from '@openai/agents-core';\n//# sourceMappingURL=index.mjs.map","import { setDefaultModelProvider } from '@openai/agents-core';\nimport { OpenAIProvider } from '@openai/agents-openai';\nimport { setDefaultOpenAITracingExporter } from '@openai/agents-openai';\nsetDefaultModelProvider(new OpenAIProvider());\nsetDefaultOpenAITracingExporter();\nexport * from '@openai/agents-core';\nexport * from '@openai/agents-openai';\nexport * as realtime from '@openai/agents-realtime';\n//# sourceMappingURL=index.mjs.map","// Entry point for bundling OpenAI agent libraries\nimport * as Agents from '@openai/agents';\nimport * as AgentsCore from '@openai/agents-core';\nimport * as AgentsOpenAI from '@openai/agents-openai';\n\nwindow.openaiAgent = {\n    Agents,\n    AgentsCore,\n    AgentsOpenAI\n};"],"names":["root","factory","exports","module","define","amd","this","s","m","h","d","w","plural","ms","msAbs","n","name","isPlural","Math","round","val","options","type","length","str","String","match","exec","parseFloat","toLowerCase","parse","isFinite","long","abs","fmtShort","Error","JSON","stringify","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","args","enabled","self","curr","Number","Date","diff","prev","coerce","unshift","index","replace","format","formatter","formatters","call","splice","formatArgs","log","apply","useColors","color","selectColor","extend","destroy","Object","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","matchesTemplate","search","template","searchIndex","templateIndex","starIndex","matchIndex","default","stack","message","disable","names","skips","map","join","enable","save","split","trim","filter","Boolean","ns","push","slice","skip","humanize","console","warn","keys","forEach","key","hash","i","charCodeAt","colors","load","c","lastC","storage","setItem","removeItem","error","r","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","localStorage","localstorage","warned","j","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","async","safeExecute","fn","isAbortError","err","includes","castToError","toString","cause","APIError","constructor","status","headers","super","makeMessage","requestID","data","code","param","msg","generate","errorResponse","APIConnectionError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError","InvalidWebhookSignatureError","isAutoParsableResponseFormat","response_format","isAutoParsableTool","tool","parseChatCompletion","completion","params","choices","choice","finish_reason","tool_calls","toolCall","inputTool","tools","find","function","parsed_arguments","$parseRaw","arguments","strict","parseToolCall","parsed","content","refusal","parseResponseFormat","shouldParseToolCall","hasAutoParseableInput","some","t","ignoreOverride","defaultOptions","$refStrategy","effectStrategy","pipeStrategy","dateStrategy","mapStrategy","nullableStrategy","removeAdditionalStrategy","definitionPath","target","strictUnions","errorMessages","markdownDescription","patternStrategy","applyRegexFlags","emailStrategy","base64Strategy","nameStrategy","zodDef","zodSchema","_def","util","objectUtil","assertEqual","_","assertIs","_arg","assertNever","_x","arrayToEnum","items","item","getValidEnumValues","validKeys","objectKeys","k","filtered","objectValues","e","object","arr","checker","isInteger","floor","joinValues","array","separator","jsonStringifyReplacer","mergeShapes","first","second","ZodParsedType","getParsedType","string","isNaN","nan","number","boolean","bigint","symbol","Array","isArray","null","then","catch","promise","Map","Set","date","unknown","ZodIssueCode","ZodError","errors","issues","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","_mapper","mapper","issue","fieldErrors","_errors","processError","unionErrors","returnTypeError","argumentsError","path","el","assert","isEmpty","flatten","formErrors","create","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","position","startsWith","endsWith","too_small","exact","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","overrideErrorMap","addIssueToContext","ctx","issueData","overrideMap","errorMaps","fullPath","fullIssue","errorMessage","maps","reverse","makeIssue","common","contextualErrorMap","schemaErrorMap","x","ParseStatus","dirty","abort","mergeArray","results","arrayValue","mergeObjectAsync","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","freeze","DIRTY","OK","isAborted","isDirty","isValid","isAsync","Promise","errorUtil","errToObj","ParseInputLazyPath","parent","_cachedPath","_path","_key","handleResult","result","success","_error","processCreateParams","errorMap","invalid_type_error","required_error","description","iss","ZodType","_getType","input","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","resolve","safeParse","parseAsync","safeParseAsync","maybeAsyncResult","refine","check","getIssueProperties","_refinement","setError","refinement","refinementData","ZodEffects","schema","typeName","ZodFirstPartyTypeKind","effect","superRefine","def","spa","bind","optional","nullable","nullish","or","and","transform","brand","describe","pipe","readonly","isNullable","isOptional","version","vendor","validate","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","innerType","defaultValue","ZodBranded","catchValueFunc","ZodCatch","catchValue","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","jwtRegex","durationRegex","emailRegex","emojiRegex","ipv4Regex","ipv4CidrRegex","ipv6Regex","ipv6CidrRegex","base64Regex","base64urlRegex","dateRegexSource","dateRegex","RegExp","timeRegexSource","secondsRegexSource","precision","timeRegex","datetimeRegex","regex","opts","local","offset","isValidIP","ip","test","isValidJWT","jwt","alg","header","base64","padEnd","decoded","atob","typ","isValidCidr","ZodString","checks","kind","tooBig","tooSmall","URL","lastIndex","toUpperCase","_regex","_addCheck","email","url","emoji","uuid","nanoid","cuid","cuid2","ulid","base64url","cidr","datetime","time","duration","min","minLength","max","maxLength","len","nonempty","isDatetime","ch","isDate","isTime","isDuration","isEmail","isURL","isEmoji","isUUID","isNANOID","isCUID","isCUID2","isULID","isIP","isCIDR","isBase64","isBase64url","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","toFixed","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","finite","safe","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","minValue","maxValue","isInt","ZodBigInt","BigInt","_getInvalidInput","ZodBoolean","ZodDate","getTime","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","_any","ZodUnknown","_unknown","ZodNever","never","ZodVoid","void","exactLength","all","element","deepPartialify","ZodObject","newShape","shape","fieldSchema","unwrap","ZodTuple","_cached","nonstrict","passthrough","augment","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strip","augmentation","merge","merging","setKey","pick","mask","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","childCtx","mergeValues","a","b","aType","bType","valid","bKeys","sharedKeys","indexOf","newObj","sharedValue","newArray","types","handleParsed","parsedLeft","parsedRight","merged","left","right","rest","itemIndex","schemas","ZodMap","keySchema","keyType","valueSchema","valueType","entries","finalMap","ZodSet","minSize","size","maxSize","finalizeSet","elements","parsedSet","add","values","ZodLazy","getter","ZodLiteral","ZodEnum","expectedValues","_cache","has","enum","enumValues","Values","Enum","extract","newDef","exclude","opt","ZodNativeEnum","nativeEnumValues","promisified","sourceType","checkCtx","arg","fatal","processed","executeRefinement","acc","inner","base","createWithPreprocess","preprocess","removeDefault","newCtx","removeCatch","ZodNaN","inResult","in","out","handleAsync","addErrorMessage","res","refs","setResponseValueAndErrors","parseDateDef","overrideDateStrategy","strategy","anyOf","integerDateParser","zodPatterns","parseStringDef","processPattern","escapeNonAlphaNumeric","addFormat","addPattern","from","pattern","allOf","processRegExp","regexOrFunction","flags","source","isEscaped","inCharGroup","inCharRange","currentPath","parseRecordDef","properties","reduce","parseDef","additionalProperties","propertyNames","primitiveMappings","asAnyOf","decideAdditionalProperties","forceResolution","seenItem","seen","override","overrideResult","seenSchema","get$ref","seenRefs","$ref","newItem","jsonSchema","selectParser","addMeta","basePath","definitions","getRelativePath","every","pathA","pathB","exclusiveMinimum","exclusiveMaximum","parseNumberDef","propName","propDef","propertyPath","parsedDef","openaiStrictMode","parseObjectDef","parseBigintDef","not","parseNullDef","parseArrayDef","ZodDiscriminatedUnion","uniqueTypes","parseUnionDef","unevaluatedProperties","mergedAllOf","nestedSchema","parseIntersectionDef","minItems","additionalItems","maxItems","parseTupleDef","ZodRecord","const","parseLiteralDef","parseEnumDef","actualValues","parsedTypes","parseNativeEnumDef","parseNullableDef","innerSchema","parseOptionalDef","parseMapDef","uniqueItems","parseSetDef","parsePromiseDef","parseEffectsDef","parseDefaultDef","parseBrandedDef","parseCatchDef","parsePipelineDef","ZodFunction","_options","getDefaultOptions","getRefs","main","title","_k","isEmptyObj","processedDefinitions","newDefinitions","combined","$schema","parseResponse","response","output","parseTextFormat","text","assign","getOwnPropertyDescriptor","addOutputText","text_format","input_tools","rsp","texts","output_text","zodTextFormat","zodObject","props","defineProperties","$brand","makeParseableTextFormat","AgentsError","state","SystemError","MaxTurnsExceededError","ModelBehaviorError","UserError","GuardrailExecutionError","ToolCallError","InputGuardrailTripwireTriggered","OutputGuardrailTripwireTriggered","isZodObject","toFunctionToolName","getSchemaAndParserFromInputType","inputType","formattedFunction","parser","callback","$callback","makeParseableResponseTool","parameters","convertAgentOutputTypeToSerializable","outputType","isEnabled","flagName","tracing","disabled","logging","dontLogModelData","dontLogToolData","getLogger","logger","toSmartString","_e","computerTool","computer","hostedMcpTool","providerData","requireApproval","server_label","serverLabel","server_url","serverUrl","require_approval","allowed_tools","toMcpAllowedToolsFilter","allowedTools","buildRequireApproval","on_approval","onApproval","defaultToolErrorFunction","context","execute","toolErrorFunction","errorFunction","strictMode","needsApproval","invoke","runContext","stringResult","_invoke","currentSpan","getCurrentSpan","tool_name","always","tool_names","toolNames","discriminator","discriminatorValue","optionsMap","discriminatorValues","third","BaseMCPServerStdio","cacheToolsList","_cachedTools","debugLog","buildMessage","BaseMCPServerStreamableHttp","inputSchema","MCPServerStdio","underlying","connect","close","listTools","callTool","toolName","MCPServerStreamableHttp","invalidateServerToolsCache","serverName","getFunctionToolsFromServer","server","convertSchemasToStrict","mcpToFunctionTool","withMCPListToolsSpan","span","mcpTools","spanData","getAllMcpTools","mcpServers","allTools","serverTools","intersection","getAllMcpFunctionTools","mcpTool","_context","strictSchema","ensureStrictJsonSchema","nonStrictSchema","_toolName","_args","BrowserEventEmitter","EventTarget","on","listener","addEventListener","event","detail","off","removeEventListener","emit","CustomEvent","dispatchEvent","once","handler","randomUUID","crypto","Readable","pipeTo","_destination","pipeThrough","_transform","ReadableStream","globalThis","TransformStream","ReadableStreamDefaultController","AsyncLocalStorage","run","getStore","enterWith","timer","setTimeout","timeout","ref","unref","hasRef","refresh","clearTimeout","timeoutId","_contextAsyncLocalStorage","getContextAsyncLocalStorage","getCurrentTrace","currentTrace","trace","_wrapFunctionWithTraceLifecycle","start","end","withTrace","newTrace","getGlobalTraceProvider","createTrace","getOrCreateTrace","setCurrentSpan","previousSpan","resetCurrentSpan","addErrorToCurrentSpan","spanError","withNewSpanContext","currentContext","copyOfContext","clone","ConsoleSpanExporter","traceId","BatchTraceProcessor","exporter","maxQueueSize","maxBatchSize","scheduleDelay","exportTriggerRatio","AbortController","force","toExport","export","batch","onTraceStart","onTraceEnd","_trace","onSpanStart","_span","onSpanEnd","shutdown","signal","aborted","forceFlush","MultiTracingProcessor","processor","addTraceProcessor","setProcessors","processors","GLOBAL_TRACE_PROVIDER","_defaultExporter","_defaultProcessor","defaultProcessor","timeIso","toISOString","generateTraceId","generateSpanId","generateGroupId","Span","spanId","parentId","startedAt","endedAt","toJSON","id","trace_id","parent_id","started_at","ended_at","span_data","fromEntries","NoopSpan","Trace","groupId","metadata","started","workflow_name","group_id","NoopTrace","TraceProvider","registerProcessor","setDisabled","startExportLoop","traceOptions","createSpan","spanOptions","cleanup","exit","hasOtherListenersForSignals","reason","listeners","_withSpanFactory","createResponseSpan","withResponseSpan","createAgentSpan","withAgentSpan","createFunctionSpan","withFunctionSpan","createHandoffSpan","withHandoffSpan","createGenerationSpan","withGenerationSpan","createCustomSpan","withCustomSpan","createGuardrailSpan","triggered","withGuardrailSpan","createTranscriptionSpan","withTranscriptionSpan","createSpeechSpan","withSpeechSpan","createSpeechGroupSpan","withSpeechGroupSpan","createMCPListToolsSpan","setTraceProcessors","setTracingDisabled","startTraceExportLoop","EventEmitterDelegate","eventEmitter","AgentHooks","RunHooks","defineInputGuardrail","guardrailFunction","guardrail","defineOutputGuardrail","agent","agentOutput","getTransferMessage","assistant","Handoff","toolDescription","inputJsonSchema","strictJsonSchema","onInvokeHandoff","agentName","inputFilter","getHandoffAsFunctionTool","defaultHandoffToolName","handoffDescription","defaultHandoffToolDescription","handoff","config","onHandoff","inputJsonString","details","toolNameOverride","toolDescriptionOverride","getHandoff","DEFAULT_PROVIDER","setDefaultModelProvider","provider","getDefaultModelProvider","SharedBase","ItemBase","Refusal","OutputText","InputText","InputImage","image","InputFile","file","AudioContent","audio","transcript","ImageContent","ToolOutputText","ToolOutputImage","mediaType","ComputerToolOutput","computerActions","y","button","scroll_x","scroll_y","AssistantContent","MessageBase","AssistantMessageItem","role","UserContent","UserMessageItem","SystemMessageItem","MessageItem","HostedToolCallItem","FunctionCallItem","callId","FunctionCallResultItem","ComputerUseCallItem","action","ComputerCallResultItem","ToolCallItem","ReasoningItem","UnknownItem","OutputModelItem","ModelItem","UsageData","requests","inputTokens","outputTokens","totalTokens","inputTokensDetails","outputTokensDetails","StreamEventTextStream","delta","StreamEventResponseStarted","StreamEventResponseCompleted","usage","StreamEventGenericItem","StreamEvent","Usage","newUsage","RunContext","_rebuildApprovals","approvals","isToolApproved","approvalEntry","approved","rejected","individualCallApproval","individualCallRejection","approveTool","approvalItem","alwaysApprove","rawItem","rejectTool","alwaysReject","RunResultBase","history","getTurnInput","newItems","_originalInput","_generatedItems","rawResponses","_modelResponses","lastResponseId","responses","responseId","lastAgent","_currentAgent","inputGuardrailResults","_inputGuardrailResults","outputGuardrailResults","_outputGuardrailResults","interruptions","_currentStep","finalOutput","processFinalOutput","RunResult","StreamedRunResult","currentAgent","currentTurn","maxTurns","cancel","controller","reject","_addItem","cancelled","enqueue","_done","_raiseError","toStream","completed","toTextStream","stream","compatibleWithNodeStreams","fromWeb","asyncIterator","serializeTool","environment","dimensions","serializeHandoff","RunItemBase","RunMessageOutputItem","part","RunToolCallItem","RunToolCallOutputItem","RunReasoningItem","RunHandoffCallItem","RunHandoffOutputItem","sourceAgent","targetAgent","RunToolApprovalItem","extractAllTextOutput","getLastTextFromOutputMessage","outputMessage","lastItem","RunRawModelStreamEvent","RunItemStreamEvent","RunAgentUpdatedStreamEvent","processModelResponse","modelResponse","handoffs","runHandoffs","runFunctions","runComputerActions","runMCPApprovalRequests","toolsUsed","handoffMap","functionMap","mcpToolMap","mcpServerLabel","mcpServerTool","mcp_server_label","requestItem","agent_name","functionTool","functions","mcpApprovalRequests","hasToolsOrApprovalsToRun","nextStepSchema","newAgent","SingleStepResult","originalInput","preStepItems","newStepItems","nextStep","generatedItems","concat","maybeResetToolChoice","toolUseTracker","modelSettings","resetToolChoice","hasUsedTools","toolChoice","executeInterruptedToolsAndSideEffects","originalPreStepItems","newResponse","processedResponse","runner","functionCallIds","functionToolRuns","functionResults","executeFunctionToolCalls","runItem","mcpApprovalRuns","approvalRequestId","approve","approval_request_id","checkToolOutput","checkForFinalOutputFromTools","isFinalOutput","isInterrupted","executeToolsAndSideEffects","computerResults","executeComputerActions","approvalRequest","toolData","requestData","approvalResult","approvalResponseData","getToolCallOutputItem","actualHandoff","handoffSpan","to_agent","requestedAgents","requested_agents","handoffInputFilter","inputHistory","preHandoffItems","from_agent","executeHandoffCalls","messageItems","potentialFinalOutput","toolRuns","toolRun","parsedArgs","approval","traceIncludeSensitiveData","_runComputerActionAndScreenshot","screenshot","click","doubleClick","drag","p","keypress","move","scroll","wait","actions","customLogger","_logger","imageUrl","NOT_FINAL_OUTPUT","toolResults","toolUseBehavior","firstToolResult","stoppingTool","stopAtToolNames","addStepToRunResult","itemName","AgentToolUseTracker","addToolUse","CURRENT_SCHEMA_VERSION","$schemaVersion","serializedAgentSchema","SerializedSpan","previous_span","usageSchema","modelResponseSchema","itemSchema","serializedTraceSchema","serializedProcessedResponseSchema","guardrailFunctionOutputSchema","tripwireTriggered","outputInfo","inputGuardrailResultSchema","outputGuardrailResultSchema","SerializedRunState","modelResponses","currentAgentSpan","noActiveAgentRun","currentStep","lastModelResponse","lastProcessedResponse","RunState","_currentTurn","_currentAgentSpan","_toolUseTracker","_maxTurns","_noActiveAgentRun","_lastTurnResponse","_lastProcessedResponse","startingAgent","structuredClone","getInterruptions","fromString","initialAgent","parsingError","jsonResult","currentSchemaVersion","stateJson","agentMap","queue","shift","Agent","buildAgentMap","deserializeSpan","deserializeModelResponse","deserializeItem","serializedProcessedResponse","getAllTools","computerTools","entry","functionCall","computerAction","deserializeProcessedResponse","serializedSpan","serializedModelResponse","serializedItem","getTracing","tracingDisabled","rawItems","Runner","inputGuardrailDefs","outputGuardrailDefs","modelProvider","model","inputGuardrails","outputGuardrails","workflowName","traceMetadata","selectModel","getModel","turnResult","handoffNames","output_type","outputSchemaName","serializedTools","serializedHandoffs","max_turns","turnInput","getResponse","systemInstructions","getSystemPrompt","prompt","getPrompt","previousResponseId","guardrails","guardrailArgs","finalResponse","getStreamedResponse","_defaultRunner","agentModel","runConfigModel","DEFAULT_MODEL_PLACEHOLDER","handoffOutputTypeWarningEnabled","static","instructions","outputTypes","asTool","customOutputExtractor","getMcpTools","user","system","__classPrivateFieldSet","receiver","f","TypeError","__classPrivateFieldGet","uuid4","u8","Uint8Array","randomByte","getRandomValues","random","startsWithSchemeRegexp","isReadonlyArray","isObj","sleep","VERSION","getPlatformProperties","detectedPlatform","Deno","build","EdgeRuntime","normalizePlatform","os","normalizeArch","arch","deno","platform","browserInfo","browserPatterns","browser","getBrowserInfo","_platformHeaders","makeReadableStream","ReadableStreamFrom","iterable","iter","iterator","pull","done","next","return","ReadableStreamToAsyncIterable","reader","getReader","read","releaseLock","cancelPromise","FallbackEncoder","body","bodyHeaders","default_format","default_formatter","RFC1738","RFC3986","hasOwn","Function","hex_table","limit","maybe_map","mapped","array_prefix_generators","brackets","prefix","comma","indices","repeat","push_to_array","value_or_array","defaults","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charset","charsetSentinel","encode","encodeDotInKeys","encoder","_defaultEncoder","_kind","escape","$0","segment","charAt","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","sentinel","inner_stringify","generateArrayPrefix","commaRoundTrip","sort","sideChannel","tmp_sc","find_flag","pos","RangeError","isBuffer","is_buffer","key_value","obj_keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","valueSideChannel","WeakMap","encodeUTF8_","decodeUTF8_","TextEncoder","decodeUTF8","bytes","decoder","TextDecoder","decode","_LineDecoder_buffer","_LineDecoder_carriageReturnIndex","LineDecoder","chunk","binaryChunk","ArrayBuffer","buffers","buffer","concatBytes","lines","patternIndex","findNewlineIndex","carriage","subarray","endIndex","preceding","line","flush","startIndex","findDoubleNewlineIndex","NEWLINE_CHARS","NEWLINE_REGEXP","levelNumbers","info","parseLogLevel","maybeLevel","sourceName","client","loggerFor","noop","makeLogFn","fnLevel","logLevel","noopLogger","cachedLoggers","cachedLogger","levelLogger","formatRequestDetails","Headers","retryOfRequestLogID","retryOf","_Stream_client","_APIPromise_client","_AbstractPage_client","Stream","fromSSEResponse","consumed","sse","product","sseDecoder","SSEDecoder","lineDecoder","sseChunk","newData","iterSSEChunks","_iterSSEMessages","raw","fromReadableStream","readableStream","iterLines","tee","teeIterator","toReadableStream","ctrl","chunks","substring","fieldname","partition","defaultParseResponse","requestLogID","startTime","__streamClass","__binaryResponse","contentType","addRequestID","json","durationMs","now","APIPromise","responsePromise","_thenUnwrap","asResponse","withResponse","request_id","parsedPromise","onfulfilled","onrejected","onfinally","finally","AbstractPage","hasNextPage","getPaginatedItems","nextPageRequestOptions","getNextPage","nextOptions","requestAPIList","iterPages","page","PagePromise","request","Page","CursorPage","has_more","query","after","checkFileSupport","File","isOldNode","versions","node","makeFile","fileBits","fileName","getName","filename","pop","isAsyncIterable","multipartFormRequestOptions","fetch","createForm","supportsFormDataMap","fetchObject","cached","FetchResponse","Response","FormData","supportsFormData","form","addFormValue","append","blob","Blob","isNamedBlob","isBlobLike","arrayBuffer","getBytes","parts","isView","getOwnPropertyNames","propsForError","APIResource","_client","encodeURIPath","encodeURIComponent","EMPTY","createPathTagFunction","pathEncoder","statics","postPath","invalidSegments","previousValue","currentValue","encoded","getPrototypeOf","pathOnly","invalidSegmentPattern","lastEnd","underline","spaces","arrows","Messages","list","completionID","getAPIList","isRunnableFunctionWithParse","isAssistantMessage","isToolMessage","_EventStream_instances","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","_EventStream_handleError","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionToolCall","_AbstractChatCompletionRunner_getFinalFunctionToolCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","EventStream","_run","executor","_emitFinal","_emit","_connected","ended","errored","findIndex","l","emitted","WeakSet","openAIError","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","_chatCompletions","messages","_addChatCompletion","chatCompletion","_addMessage","tool_call","finalChatCompletion","finalContent","finalMessage","finalFunctionToolCall","finalFunctionToolCallResult","totalUsage","allChatCompletions","finalFunctionCall","finalFunctionCallResult","_createChatCompletion","chat","completions","_runChatCompletion","_runTools","tool_choice","restParams","singleFunctionToCall","maxChatCompletions","inputTools","functionsByName","tool_call_id","rawContent","at","total","completion_tokens","prompt_tokens","total_tokens","ChatCompletionRunner","runTools","PartialJSON","MalformedJSON","partialParse","jsonString","allowPartial","ATOM","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","Infinity","NaN","parseNum","lastIndexOf","writable","_parseJSON","parseJSON","Allow","_ChatCompletionStream_instances","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","ChatCompletionStream","currentChatCompletionSnapshot","_fromReadableStream","createChatCompletion","chatId","content_done","refusal_done","logprobs_content_done","logprobs_refusal_done","done_tool_calls","current_tool_call_index","choiceSnapshot","snapshot","logprobs","toolCallDelta","toolCallSnapshot","arguments_delta","toolCallIndex","responseFormat","created","system_fingerprint","choiceRest","function_call","messageRest","toolRest","fnRest","maybeParseChatCompletion","finalizeChatCompletion","_a","_b","_c","_d","other","assertIsEmpty","pushQueue","readQueue","ChatCompletionStreamingRunner","Completions","post","retrieve","update","delete","validateInputTools","Chat","brand_privateNullableHeaders","iterateHeaders","nulls","shouldClear","row","didClear","buildHeaders","newHeaders","targetHeaders","nullHeaders","seenHeaders","lowerName","Speech","Accept","Transcriptions","__metadata","Translations","Audio","transcriptions","translations","speech","Batches","batchID","Assistants","assistantID","Sessions","TranscriptionSessions","Realtime","sessions","transcriptionSessions","threadID","messageID","thread_id","Steps","stepID","run_id","runID","readEnv","_AssistantStream_instances","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","_ResponseStream_instances","_ResponseStream_params","_ResponseStream_currentResponseSnapshot","_ResponseStream_finalResponse","_ResponseStream_beginRequest","_ResponseStream_addEvent","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","_Webhooks_instances","_Webhooks_validateSecret","_Webhooks_getRequiredHeader","_OpenAI_instances","_OpenAI_encoder","_OpenAI_baseURLOverridden","AssistantStream","_addRun","createToolAssistantStream","runId","runs","_runToolAssistantStream","_createToolAssistantStream","submitToolOutputs","createThreadAssistantStream","thread","_threadAssistantStream","createAssistantStream","threadId","_runAssistantStream","currentEvent","currentRun","currentMessageSnapshot","currentRunStepSnapshot","finalRunSteps","finalMessages","finalRun","_createThreadAssistantStream","createAndRun","_createAssistantStream","accumulateDelta","deltaValue","accValue","deltaEntry","accEntry","accumulatedMessage","newContent","snapshotContent","textDelta","image_file","currentContent","accumulatedRunStep","step_details","accumulated","contentElement","Runs","steps","include","createAndPoll","poll","createAndStream","beta","threads","pollIntervalMs","sleepInterval","headerInterval","headerIntervalMs","submitToolOutputsAndPoll","submitToolOutputsStream","Threads","createAndRunPoll","createAndRunStream","Beta","realtime","assistants","Content","fileID","container_id","Files","containerID","Containers","files","Embeddings","hasUserProvidedEncodingFormat","encoding_format","embeddingBase64Obj","embeddingBase64Str","embedding","base64Str","Buffer","buf","Float32Array","byteOffset","BYTES_PER_ELEMENT","binaryStr","toFloat32Array","OutputItems","outputItemID","eval_id","outputItems","evalID","Evals","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","Methods","Graders","Alpha","graders","Permissions","fineTunedModelCheckpoint","method","permissionID","fine_tuned_model_checkpoint","Checkpoints","permissions","fineTuningJobID","Jobs","checkpoints","listEvents","pause","resume","FineTuning","methods","jobs","alpha","GraderModels","graderModels","Images","createVariation","edit","Models","Moderations","ResponseStream","createResponse","_createOrRetrieveResponse","starting_after","response_id","maybeEmit","sequence_number","output_index","content_index","parsedResponse","output_parsed","maybeParseResponse","finalizeResponse","InputItems","responseID","Responses","inputItems","Parts","uploadID","Uploads","complete","FileBatches","vectorStoreID","vector_store_id","vectorStoreId","listFiles","uploadAndPoll","fileIds","configuredConcurrency","maxConcurrency","concurrencyLimit","fileIterator","allFileIds","workers","fill","fileObj","purpose","promises","allSettled","allSettledWithThrow","file_ids","fileResponse","upload","fileInfo","file_id","VectorStores","fileBatches","Webhooks","payload","secret","webhookSecret","tolerance","verifySignature","subtle","importKey","verify","headersObj","signatureHeader","timestamp","webhookId","timestampSeconds","nowSeconds","signatures","decodedSecret","signedPayload","signature","signatureBytes","OpenAI","baseURL","apiKey","organization","project","embeddings","images","moderations","models","fineTuning","vectorStores","webhooks","batches","uploads","evals","containers","dangerouslyAllowBrowser","DEFAULT_TIMEOUT","defaultLogLevel","fetchOptions","maxRetries","withOptions","defaultQuery","validateHeaders","authHeaders","Authorization","stringifyQuery","normalize_stringify_options","joined","getUserAgent","defaultIdempotencyKey","makeStatusError","buildURL","defaultBaseURL","isAbsoluteURL","prepareOptions","prepareRequest","methodRequest","patch","put","remainingRetries","makeRequest","optionsInput","retriesRemaining","req","buildRequest","retryCount","padStart","retryLogStr","fetchWithTimeout","headersTime","retryMessage","isTimeout","retryRequest","responseInfo","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","isReadableBody","duplex","shouldRetryHeader","responseHeaders","timeoutMillis","retryAfterMillisHeader","timeoutMs","retryAfterHeader","timeoutSeconds","calculateDefaultRetryTimeoutMillis","numRetries","pow","inputOptions","validatePositiveInteger","buildBody","idempotencyHeaders","idempotencyHeader","idempotencyKey","trunc","defaultHeaders","rawHeaders","DataView","URLSearchParams","OpenAIError","toFile","lastModified","isFileLike","isResponseLike","pathname","_defaultOpenAIClient","_defaultOpenAIKey","_defaultTracingApiKey","_defaultOpenAIAPI","setTracingExportApiKey","setOpenAIAPI","setDefaultOpenAIClient","setDefaultOpenAIKey","HEADERS","WebSearchStatus","FileSearchStatus","CodeInterpreterStatus","ImageGenerationStatus","webSearchTool","user_location","userLocation","search_context_size","searchContextSize","fileSearchTool","vectorStoreIds","vectorIds","vector_store_ids","max_num_results","maxNumResults","include_search_results","includeSearchResults","ranking_options","rankingOptions","filters","codeInterpreterTool","container","imageGenerationTool","background","input_fidelity","inputFidelity","input_image_mask","inputImageMask","moderation","output_compression","outputCompression","output_format","outputFormat","partial_images","partialImages","quality","camelOrSnakeToSnakeCase","HostedToolChoice","DefaultToolChoice","converTool","display_width","display_height","getHandoffTool","getInputMessageContent","imageEntry","image_url","fileEntry","file_data","file_url","getOutputMessageContent","annotations","buildResponseOutput","convertToMessageContentItem","remainingItem","convertToOutputItem","outputData","call_id","summary","remainingContent","OpenAIResponsesModel","isMessageItem","getMessageItem","encrypted_content","encryptedContent","pending_safety_checks","acknowledged_safety_checks","acknowledgedSafetyChecks","queries","outputs","containerId","exhaustive","getInputItems","openaiTools","openaiTool","openaiIncludes","getTools","resultDefaultCheck","getToolChoice","getResponseFormat","transformedVariables","variables","promptId","parallelToolCalls","previous_response_id","temperature","top_p","topP","truncation","max_output_tokens","maxTokens","parallel_tool_calls","store","_input","_response","input_tokens","output_tokens","input_tokens_details","output_tokens_details","remainingEvent","remainingResponse","convertToolChoice","extractAllAssistantContent","extractAllUserContent","input_audio","toolToOpenAI","convertHandoffTool","FAKE_ID","OpenAIChatCompletionsModel","model_config","frequency_penalty","frequencyPenalty","presence_penalty","presencePenalty","base_url","remainingAudioData","remainingToolCallData","remainingFunctionData","cached_tokens","prompt_tokens_details","reasoning_tokens","completion_tokens_details","text_content_index_and_output","refusal_content_index_and_output","function_calls","tc_delta","tc_function","assistant_msg","finalEvent","convertChatCompletionsStreamToResponses","json_schema","currentAssistantMsg","flushAssistantMessage","ensureAssistantMessage","asst","toolCalls","fileSearch","functionData","argumentData","funcCall","funcOutput","itemsToMessages","max_tokens","OpenAIProvider","openAIClient","useResponses","OPENAI_API_KEY","modelName","OpenAITracingExporter","endpoint","baseDelay","maxDelay","attempts","delay","sleepTime","setDefaultOpenAITracingExporter","base64ToArrayBuffer","binaryString","arrayBufferToBase64","fromCharCode","btoa","getLastTextFromAudioOutputMessage","lastContentItem","removeAudioFromContent","updateRealtimeHistory","shouldIncludeAudioData","itemId","item_id","updatedContent","newEvent","existingIndex","idx","previousItemId","prevIndex","WEBSOCKET_META","RealtimeAgent","voice","defineRealtimeOutputGuardrail","policyHint","policyHintInput","baseGuardrail","realtimeMessageItemSchema","realtimeToolCallItem","realtimeResponse","conversation_id","modalities","output_audio_format","status_details","conversationItemContentSchema","conversationItemSchema","conversationCreatedEventSchema","event_id","conversation","conversationItemCreatedEventSchema","previous_item_id","conversationItemDeletedEventSchema","conversationItemInputAudioTranscriptionCompletedEventSchema","conversationItemInputAudioTranscriptionDeltaEventSchema","conversationItemInputAudioTranscriptionFailedEventSchema","conversationItemRetrievedEventSchema","conversationItemTruncatedEventSchema","audio_end_ms","conversationItemCreateEventSchema","conversationItemDeleteEventSchema","conversationItemRetrieveEventSchema","conversationItemTruncateEventSchema","errorEventSchema","inputAudioBufferClearedEventSchema","inputAudioBufferAppendEventSchema","inputAudioBufferClearEventSchema","inputAudioBufferCommitEventSchema","inputAudioBufferCommittedEventSchema","inputAudioBufferSpeechStartedEventSchema","audio_start_ms","inputAudioBufferSpeechStoppedEventSchema","outputAudioBufferStartedEventSchema","outputAudioBufferStoppedEventSchema","outputAudioBufferClearedEventSchema","rateLimitsUpdatedEventSchema","rate_limits","remaining","reset_seconds","responseAudioDeltaEventSchema","responseAudioDoneEventSchema","responseAudioTranscriptDeltaEventSchema","responseAudioTranscriptDoneEventSchema","responseContentPartAddedEventSchema","responseContentPartDoneEventSchema","responseCreatedEventSchema","responseDoneEventSchema","responseFunctionCallArgumentsDeltaEventSchema","responseFunctionCallArgumentsDoneEventSchema","responseOutputItemAddedEventSchema","responseOutputItemDoneEventSchema","responseTextDeltaEventSchema","responseTextDoneEventSchema","sessionCreatedEventSchema","session","sessionUpdatedEventSchema","responseCancelEventSchema","responseCreateEventSchema","sessionUpdateEventSchema","transcriptionSessionUpdateEventSchema","transcriptionSessionUpdatedEventSchema","genericEventSchema","realtimeServerEventSchema","parseRealtimeEvent","genericParsed","isGeneric","DEFAULT_OPENAI_REALTIME_MODEL","DEFAULT_OPENAI_REALTIME_SESSION_CONFIG","inputAudioFormat","outputAudioFormat","inputAudioTranscription","turnDetection","inputAudioNoiseReduction","speed","OpenAIRealtimeBase","currentModel","_rawSessionConfig","_getApiKey","_onMessage","realtimeItem","sendEvent","_onError","_onOpen","_onClose","sendMessage","otherEventData","_getMergedSessionConfig","sessionData","input_audio_format","input_audio_transcription","input_audio_noise_reduction","turn_detection","buildTurnDetectionConfig","create_response","eagerness","interruptResponse","interrupt_response","prefixPaddingMs","prefix_padding_ms","silenceDurationMs","silence_duration_ms","threshold","_tracingConfig","tracingConfig","_updateTracingConfig","updateSessionConfig","sendFunctionCallOutput","startResponse","sendAudio","commit","resetHistory","oldHistory","newHistory","removals","additions","updates","oldItem","diffRealtimeHistory","removalIds","additionsAndUpdates","addition","itemEntry","OpenAIRealtimeWebRTC","peerConnection","dataChannel","RTCPeerConnection","baseUrl","useInsecureApiKey","connectionState","muted","isClientKey","userSessionConfig","initialSessionConfig","connectionUrl","createDataChannel","audioElement","createElement","autoplay","ontrack","srcObject","streams","mediaStream","mediaDevices","getUserMedia","addTrack","getAudioTracks","changePeerConnection","offer","createOffer","setLocalDescription","sdp","sessionConfig","sdpResponse","answer","setRemoteDescription","readyState","send","mute","getSenders","sender","track","stop","interrupt","WebSocket","OpenAIRealtimeWebSocket","websocket","_firstAudioTimestamp","_audioLengthMs","currentItemId","_onAudio","audioEvent","websocketArguments","ws","buff","byteLength","automaticResponseCancellationEnabled","_muted","_cancelResponse","_interrupt","elapsedTime","cancelOngoingResponse","RealtimeSession","transport","debounceTextLength","outputGuardrailSettings","historyStoreAudio","handoffTools","additionalConfig","updateAgent","functionToolMap","possibleHandoff","firstTripwireTriggered","feedbackText","completedEvent","textOutput","lastItemId","lastRunIndex","newText","newRunIndex","isNew","addedItem","updateHistory","updatedHistory","utils","openaiAgent","Agents","AgentsCore","AgentsOpenAI"],"sourceRoot":""}